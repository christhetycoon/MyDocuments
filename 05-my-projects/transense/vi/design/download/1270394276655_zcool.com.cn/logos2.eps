%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 13.0.0
%%For: (\702\753\740\744\750\754\750\760) ()
%%Title: (DESIGN_ELEMENTS_2.eps)
%%CreationDate: 1/8/2009 1:58 AM
%%BoundingBox: -1 123 595 719
%%HiResBoundingBox: -0.499512 123.5 594.5 718.4995
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%DocumentCustomColors: (New Color Swatch 1)
%%CMYKCustomColor: 0.415686 0 1 0 (New Color Swatch 1)
%%CMYKProcessColor: 0.396078 0 0 0 (New Color Swatch)
%%+ 0.698039 0.67451 0.639216 0.741176 (New Color Swatch 12)
%%+ 0.694118 0.141176 0 0 (New Color Swatch 2)
%%+ 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 297 421 297 421
%AI3_TileBox: -9 25 603 817
%AI3_DocumentPreview: Header
%AI5_ArtSize: 595 595
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 3
%AI8_OpenToView: -698.5 1046.5 0.5 1405 784 18 1 0 0 82 0 0
%AI5_OpenViewLayers: 777
%%PageOrigin:0 -123
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI5_End_NonPrinting--
14 Bn
%AI5_BeginGradient: (Unnamed gradient 111)
(Unnamed gradient 111) 1 3 Bd
[
0
<
5859595A5A5B5D5D5E5E5F60606161636464656566686869696A6C6C6D6D6F707071727274747576
767777797A7A7B7B7D7E7E808081838384848587868888898A8A8C8C8D8E8E8F8F91929293939496
969797999B9A9C9C9E9F9FA0A0A2A3A3A4A4A6A7A7A8AAAAABABACADADAEAEAFB0B0B1B1B2B3B3B5
B5B6B7B7B9B9BABBBBBCBCBD
>
<
81828384868788898A8C8D8E8F90929394959698999A9B9D9E9FA0A2A3A4A5A6A8A9AAABACAEAFB0
B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C7C8CACBCCCECFD0D1D2D3D4D5D6D7D8D9DADBDD
DEDFE1E3E5E6E8E9EAECEDEEEFF0F1F2F2F3F4F5F6F6F7F8F9FAFAFBFCFDFEFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFF
>
0
1
<
B5B4B4B3B3B2B1B1B0B0AFAEAEADADACABABAAAAA9A8A8A7A7A6A5A5A4A4A3A2A2A1A0A09F9F9E9D
9D9C9C9B9A9A99999897979696959494939392919190908F8E8E8D8D8C8B8B8A8A89888887878685
8584848382828181807F7F7E7E7D7C7C7B7B7A79797877777676757474737372717170706F6E6E6D
6D6C6B6B6A6A696868676766
>
<
838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C
5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534
333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
4 %_Br
<
00000000000000000000000000000000000103040506070809090A0A0B0C0E0F1011121212131415
161718191A1A1B1C1C1D
>
<
BDBFC0C1C2C3C4C5C6C7C7C8C9CACBCCCECFD0D1D2D3D4D5D6D8D9D9DADBDCDDDEDFDFE0E1E2E3E4
E5E6E6E7E8E9EAEBEBEC
>
1
<
00000000000000000000000000000000000000000101010101010101010202020202020203030304
04040505050505060607
>
<
FFFEFDFCFBFBFAF9F8F7F6F5F4F3F2F2F1F0EFEEEDECEBEAE9E9E8E7E6E5E4E3E2E1E0E0DFDEDDDC
DBDAD9D8D7D7D6D5D4D3
>
<
666564636261605F5E5D5C5B5A595857565554535251504F4E4C4B4A494847464544434241403F3E
3D3C3B3A393837363534
>
<
00000001010101010102020202020303030303030404040404050505050506060606060607070707
07080808080808090909
>
4 %_Br
[
0 0.345098 0.505882 0 1 0.709804 0.513726 2 50 0.549451 %_BS
%_0 0.345098 0.505882 0 1 0.709804 0.513726 2 50 0.549451 Bs
0 0.741176 1 0 1 0.4 0 2 50 48.9011 %_BS
%_0 0.741176 1 0 1 0.4 0 2 50 48.9011 Bs
0.113725 0.92549 1 0.027451 0.827451 0.203922 0.035294 2 50 93.4066 %_BS
%_0.113725 0.92549 1 0.027451 0.827451 0.203922 0.035294 2 50 93.4066 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 114)
(Unnamed gradient 114) 1 2 Bd
[
<
5455565758595A5B5B5C5D5E5F606162626464666668696A6B6C6D6E6F7070717273747576777879
797A7B7C7D7E7F808181828384858586878888898A8B8B8C8D8E8F8F909192939394949696979798
999A9A9B9C9D9D9E9E9FA0A1A1A2A2A3A4A5A6A7A8A8A9AAABABACADADAEAEAFAFB0B0B1B1B2B2B3
B3B4B4B4B5B5B6B6B7B8B8B8B9B9B9BABBBBBBBCBDBDBDBEBEBEBFBFC0C0C0C1C1C1C1C2C2C3C3C3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00010001010201020203030303040404040504050506060707080809090A090B0A0C0C0D0C0E0E0F
0E101011111212131315141615171719181A1A1B1B1D1C1E1E1F1F20202222232324242626282829
292B2B2D2C2E2E302F3131323234343535373739383A3A3C3C3D3D3F3F4141424244444646474749
>
<
09080809090809080809090808080908090808070908080808090908080808080808080709080807
07070807080707080807070606070706060507060605050506050504050505040404040404040403
04040403030404040403030404030303040304030302030202010102020101000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
>
0
<
9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978
77767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150
4F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928
27262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADAD9D9D8D8D7D7D6D6D5D5D4D4D3D3D2D2D1
D1D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBD
BDBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADACACABABAAAAA9
A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E9D9D9C9C9B9B9A9A999998989797969695
>
<
F7F7F7F6F6F6F6F6F6F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0
F0F0EFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDECECECECECECEBEBEBEBEBEAEAEAEAEAEAE9E9E9E9E9
E8E8E8E8E8E7E7E7E7E7E7E6E6E6E6E6E5E5E5E5E5E5E4E4E4E4E4E3E3E3E3E3E3E2E2E2E2E2E1E1
E1E1E1E1E0E0E0E0E0DFDFDFDFDFDFDEDEDEDEDEDDDDDDDDDDDDDCDCDCDCDCDBDBDBDBDBDBDADADA
>
4 %_Br
[
0.329412 0 0.035294 0 0.623529 0.898039 0.968627 2 50 25.8242 %_BS
%_0.329412 0 0.035294 0 0.623529 0.898039 0.968627 2 50 25.8242 Bs
0.764706 0.286274 0 0 0 0.584314 0.854902 2 50 100 %_BS
%_0.764706 0.286274 0 0 0 0.584314 0.854902 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 116)
(Unnamed gradient 116) 1 2 Bd
[
<
2C2E2F303132333435363738393A3B3C3D3E3F4041424344454647484A4B4C4D4E4F515253545556
57585A5B5C5D5E6061626364656768696A6B6C6D6E70717273747576
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000101010203
>
<
ADADAEB0B1B2B3B4B5B6B7B8BABABBBCBDBFC0C1C2C3C4C5C6C7C8CACBCCCECFD0D1D1D3D4D5D6D8
DADBDDDFE0E2E3E6E8EAECEDEFF1F3F5F6F8F9FBFCFEFFFFFFFFFFFF
>
0
<
DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB8B7B6B5B4B3
B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897
>
<
FCFBFAFAF9F8F7F6F6F5F4F3F3F2F1F0EFEFEEEDECEBEBEAE9E8E7E7E6E5E4E3E3E2E1E0E0DFDEDD
DCDCDBDAD9D8D8D7D6D5D4D4D3D2D1D0D0CFCECDCDCCCBCAC9C9C8C7
>
<
77767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756565554535251
504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938373635
>
4 %_Br
[
0.172549 0 0.678431 0 0.858824 0.988235 0.466667 2 50 28.022 %_BS
%_0.172549 0 0.678431 0 0.858824 0.988235 0.466667 2 50 28.022 Bs
0.462745 0.011765 1 0 0.592157 0.780392 0.207843 2 50 100 %_BS
%_0.462745 0.011765 1 0 0.592157 0.780392 0.207843 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 120)
(Unnamed gradient 120) 1 2 Bd
[
<
04040404040505050505050505050606060606060606060607070707060606060607070707070707
07070808080707070707070808080808080707070708080808080808080809090909090909090809
09090909090909090A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0D0D0D0D
0D
>
<
000000000100010102020303040405050606070709080A0A0A0A0C0C0D0D0D0E0E0F0F1010121113
13141315141616171719191A191B1B1C1C1E1D1F1F1E202021212222242425252626282829292A2A
2B2B2C2C2D2D2F2F30302F3131333234343535373738383A3A3B3B3C3C3D3D3F3F40404241434344
44
>
<
7D7E808182848587888A8B8D8E8F9192939495969798989A9B9C9D9E9FA0A2A3A4A5A7A7A9AAABAB
ACADAEAFB0B1B2B3B5B5B7B8B9BABBBCBDBEBFC0C1C3C3C4C5C6C7C8C9CACBCDCDCFCFD0D1D2D3D4
D5D5D6D7D8D9DADBDDDEDEDFE0E1E2E4E5E6E7E8E9EAEBECEDEEEEF0F1F2F3F4F5F6F7F8F9FAFBFC
FC
>
0
<
FFFFFFFFFFFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFB
FBFBFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F6
F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F2F2F2F2
F2
>
<
F5F5F4F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDECECEBEBEAEAE9E9E8E8E7E7E7E6E6E5E5E4E4E3E3E2
E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADAD9D9D8D8D8D7D7D6D6D5D5D4D4D3D3D2D2D1D1D0D0CFCF
CECECDCDCCCCCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBB
BB
>
<
999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978777675747372
71706F6E6D6C6B6A696867666564636261605F5E5D5B5A595857565554535251504F4E4D4C4B4A49
4847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221
20
>
4 %_Br
[
0.015686 0 0.490196 0 1 0.960784 0.6 2 50 30.2198 %_BS
%_0.015686 0 0.490196 0 1 0.960784 0.6 2 50 30.2198 Bs
0.05098 0.266667 0.988235 0 0.94902 0.733333 0.12549 2 50 100 %_BS
%_0.05098 0.266667 0.988235 0 0.94902 0.733333 0.12549 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 124)
(Unnamed gradient 124) 1 2 Bd
[
<
6A6B6C6D6E6F6F70717273747576777878797A7B7C7D7E7E8080818283848586868788898B8C8D8D
8E8F9090929293949595979798999A9B9C9C9D9E9FA0A0A1A2A2A3A4A4A5A6
>
0
1
0
<
A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7C7B7A79
7877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A
>
<
DDDDDCDCDCDBDBDBDADAD9D9D9D8D8D8D7D7D7D6D6D6D5D5D4D4D4D3D3D3D2D2D2D1D1D1D0D0CFCF
CFCECECECDCDCDCCCCCCCBCBCACACAC9C9C9C8C8C8C7C7C7C6C6C5C5C5C4C4
>
<
0E0E0F0F101011111212131313141415151616171718181919191A1A1B1B1C1C1D1D1E1E1E1F1F20
2021212222232323242425252626272728282929292A2A2B2B2C2C2D2D2E2E
>
4 %_Br
[
0.415686 0 1 0 0.631373 0.866667 0.054902 (New Color Swatch 1) 0 1 4 50 0 %_BS
%_0.415686 0 1 0 0.631373 0.866667 0.054902 (New Color Swatch 1) 0 1 4 50 0 Bs
0.65098 0 1 0 0.352941 0.768627 0.180392 2 50 100 %_BS
%_0.65098 0 1 0 0.352941 0.768627 0.180392 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 127)
(Unnamed gradient 127) 1 2 Bd
[
<
04040404040404040404040505050505050505050505050505050606060606060607070707070606
06070606060606060606060606060706060606060707070707070707070707060707060708080707
07070707070707070707070707070606060707080807070707070707070707070707070707070808
070708080707070707
>
<
00000000000101010101010102020203030303040403050504060606070707070807070909090A0A
0A0A0B0B0B0C0C0C0D0D0D0F0F0F0E0F0F0F11101012121211131313141414151515171616161717
171919191A1A1A1B1B1B1B1D1D1D1E1E1E1F1F1F1F20202022222223232325252525262626272727
282828282A29292B2B
>
<
7D7E80818284858788898B8C8E8F9091929394959798999B9C9D9FA0A1A2A3A4A5A7A8A8A9ABABAC
AEAFB0B1B3B3B4B5B6B7B8B9B9BABBBCBEBFC0C1C2C3C4C5C6C7C7C8C9CACBCCCDCECFD0D0D1D2D3
D4D4D5D6D7D7D8D9DADBDBDCDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E9EAEBEBECEDEEEEEFF0F0F2F2
F3F3F4F5F5F6F6F7F7
>
0
<
FFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFB
FBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9
F9F9F9F9F9F9F9F9F9
>
<
F5F5F4F4F4F3F3F3F3F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEEEDEDEDECECECECEBEBEBEAEAEAE9E9
E9E9E8E8E8E7E7E7E6E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDEDEDEDEDDDD
DDDCDCDCDBDBDBDADADADAD9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D3D3D3D3D2D2D2D1D1D1
D0D0D0D0CFCFCFCECE
>
<
999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978777675747372
71706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A
494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928272625242322
21201F1E1D1C1B1A19
>
4 %_Br
[
0.015686 0 0.490196 0 1 0.960784 0.6 2 50 0 %_BS
%_0.015686 0 0.490196 0 1 0.960784 0.6 2 50 0 Bs
0.027451 0.168627 0.968627 0 0.976471 0.807843 0.098039 2 50 100 %_BS
%_0.027451 0.168627 0.968627 0 0.976471 0.807843 0.098039 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 13)
(Unnamed gradient 13) 1 3 Bd
[
<
302F2E2D2C2B2A29272625242321201F1E1D1C1B1A191817161514131211100F0D0C0B0A090908
>
<
252423222120201F1E1D1C1B1B1A19181716151413121110100F0E0D0D0C0B0A0A090807060605
>
<
26252423222121201F1E1D1C1C1B1A19181717151413121211100F0E0D0C0B0B0A090807060605
>
0
<
CDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4
>
<
CDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4
>
<
CDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4
>
4 %_Br
<
0807060505030201000000
>
<
0504040303020100000000
>
<
0504040303020100000000
>
0
<
F4F5F6F7F8FAFBFCFDFEFF
>
<
F4F5F6F7F8FAFBFCFDFEFF
>
<
F4F5F6F7F8FAFBFCFDFEFF
>
4 %_Br
[
0.188235 0.145098 0.14902 0 0.803922 0.803922 0.803922 2 50 0 %_BS
%_0.188235 0.145098 0.14902 0 0.803922 0.803922 0.803922 2 50 0 Bs
0.031373 0.019608 0.019608 0 0.956863 0.956863 0.956863 2 50 74.1758 %_BS
%_0.031373 0.019608 0.019608 0 0.956863 0.956863 0.956863 2 50 74.1758 Bs
0 0 0 0 1 1 1 2 50 95.6044 %_BS
%_0 0 0 0 1 1 1 2 50 95.6044 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 15)
(Unnamed gradient 15) 1 3 Bd
[
<
0808080808080809090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B
0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0B0C0C0C0B0C0C0D0D0D0D0D0D0D
>
<
10101011111111121212121313131214141313151414141515151516161616171717171717171719
1818181A1A1A1A1B1A1A1A1C1B1B1B1D1D1D1D1E1E1E1D1F1F1F1F2020
>
<
7D7E8081828384868788898A8C8D8F90919394959698999A9B9D9E9E9FA0A1A2A3A4A5A8AAABACAD
AFB0B1B2B3B4B5B5B7B8B9BABBBDBEBFC0C1C2C3C4C4C6C6C7C8C9CACC
>
0
<
F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6
F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4
>
<
E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1E1E0E0E0E0DFDFDFDFDEDEDEDEDDDDDDDDDC
DCDCDCDBDBDBDBDADADADAD9D9D9D9D8D8D8D8D7D7D7D7D6D6D6D6D5D5
>
<
9897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767473727170
6F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453
>
4 %_Br
0.05098
<
202121232324242626272729292A292B2B2C2C2D2D2F2F303032333335353737383839393B3B3C3C
3D3D3E3E40404141434344
>
<
CCCCCECED0D0D1D2D3D4D5D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E6E6E8E8EAEAEBECEDEEEFF0F2F2
F4F4F5F6F7F8F9FAFBFBFC
>
0
<
F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2
F2F2F2F2F2F2F2F2F2F2F2
>
<
D5D4D4D3D3D2D2D1D1D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1
C0C0BFBFBEBEBDBDBCBCBB
>
<
535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3837363534333231302F2E2D2C2B
2A29282726252423222120
>
4 %_Br
[
0.031373 0.062745 0.490196 0 0.976471 0.901961 0.596078 2 50 0 %_BS
%_0.031373 0.062745 0.490196 0 0.976471 0.901961 0.596078 2 50 0 Bs
0.05098 0.12549 0.8 0 0.956863 0.835294 0.32549 2 50 48.3517 %_BS
%_0.05098 0.12549 0.8 0 0.956863 0.835294 0.32549 2 50 48.3517 Bs
0.05098 0.266667 0.988235 0 0.94902 0.733333 0.12549 2 50 100 %_BS
%_0.05098 0.266667 0.988235 0 0.94902 0.733333 0.12549 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 25)
(Unnamed gradient 25) 0 2 Bd
[
<
313233333435363739393A3B3C3D3D3E3F414243434445474848494A4B4C4D4D4E50515252535455
565857585A
>
<
3233343637383939393A3B3C3D3E3F40414243444546464748494A4B4C4D4E505152535456555657
58595B5B5C
>
<
333435363738393A3C3D3E3F404142434445464747494B4D4E4F5051525354555657595A5B5D5D5E
5F60616263
>
<
00000000000000000000000000000000000000000000000000000000000000000000000001010101
0102020202
>
<
CECDCCCCCBCAC9C8C7C7C6C5C4C3C3C2C1C0BFBEBEBDBCBBBABAB9B8B7B6B5B5B4B3B2B1B1B0AFAE
ADACACABAA
>
<
C4C3C2C1C0BFBEBDBDBCBBBAB9B8B7B6B5B4B3B2B1B0B0AFAEADACABAAA9A8A7A6A5A4A3A2A2A1A0
9F9E9D9C9B
>
<
C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998
9796959493
>
4 %_Br
[
0.352941 0.360784 0.388235 0.007843 0.666667 0.607843 0.576471 2 50 100 %_BS
%_0.352941 0.360784 0.388235 0.007843 0.666667 0.607843 0.576471 2 50 100 Bs
0.192157 0.196078 0.2 0 0.807843 0.768627 0.752941 2 50 0 %_BS
%_0.192157 0.196078 0.2 0 0.807843 0.768627 0.752941 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 27)
(Unnamed gradient 27) 1 3 Bd
[
0
<
5859595A5A5B5D5D5E5E5F60606161636464656566686869696A6C6C6D6D6F707071727274747576
767777797A7A7B7B7D7E7E808081838384848587868888898A8A8C8C8D8E8E8F8F91929293939496
969797999B9A9C9C9E9F9FA0A0A2A3A3A4A4A6A7A7A8AAAAABABACADADAEAEAFB0B0B1B1B2B3B3B5
B5B6B7B7B9B9BABBBBBCBCBD
>
<
81828384868788898A8C8D8E8F90929394959698999A9B9D9E9FA0A2A3A4A5A6A8A9AAABACAEAFB0
B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C7C8CACBCCCECFD0D1D2D3D4D5D6D7D8D9DADBDD
DEDFE1E3E5E6E8E9EAECEDEEEFF0F1F2F2F3F4F5F6F6F7F8F9FAFAFBFCFDFEFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFF
>
0
1
<
B5B4B4B3B3B2B1B1B0B0AFAEAEADADACABABAAAAA9A8A8A7A7A6A5A5A4A4A3A2A2A1A0A09F9F9E9D
9D9C9C9B9A9A99999897979696959494939392919190908F8E8E8D8D8C8B8B8A8A89888887878685
8584848382828181807F7F7E7E7D7C7C7B7B7A79797877777676757474737372717170706F6E6E6D
6D6C6B6B6A6A696868676766
>
<
838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C
5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534
333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
4 %_Br
<
00000000000000000000000000000000000103040506070809090A0A0B0C0E0F1011121212131415
161718191A1A1B1C1C1D
>
<
BDBFC0C1C2C3C4C5C6C7C7C8C9CACBCCCECFD0D1D2D3D4D5D6D8D9D9DADBDCDDDEDFDFE0E1E2E3E4
E5E6E6E7E8E9EAEBEBEC
>
1
<
00000000000000000000000000000000000000000101010101010101010202020202020203030304
04040505050505060607
>
<
FFFEFDFCFBFBFAF9F8F7F6F5F4F3F2F2F1F0EFEEEDECEBEAE9E9E8E7E6E5E4E3E2E1E0E0DFDEDDDC
DBDAD9D8D7D7D6D5D4D3
>
<
666564636261605F5E5D5C5B5A595857565554535251504F4E4C4B4A494847464544434241403F3E
3D3C3B3A393837363534
>
<
00000001010101010102020202020303030303030404040404050505050506060606060607070707
07080808080808090909
>
4 %_Br
[
0 0.345098 0.505882 0 1 0.709804 0.513726 2 50 0.549451 %_BS
%_0 0.345098 0.505882 0 1 0.709804 0.513726 2 50 0.549451 Bs
0 0.741176 1 0 1 0.4 0 2 50 35.7143 %_BS
%_0 0.741176 1 0 1 0.4 0 2 50 35.7143 Bs
0.113725 0.92549 1 0.027451 0.827451 0.203922 0.035294 2 50 100 %_BS
%_0.113725 0.92549 1 0.027451 0.827451 0.203922 0.035294 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 43)
(Unnamed gradient 43) 1 6 Bd
[
0
<
5859595A5A5B5D5D5E5E5F60606161636464656566686869696A6C6C6D6D6F707071727274747576
767777797A7A7B7B7D7E7E808081838384848587868888898A8A8C8C8D8E8E8F8F91929293939496
969797999B9A9C9C9E9F9FA0A0A2A3A3A4A4A6A7A7A8AAAAABABACADADAEAEAFB0B0B1B1B2B3B3B5
B5B6B7B7B9B9BABBBBBCBCBD
>
<
81828384868788898A8C8D8E8F90929394959698999A9B9D9E9FA0A2A3A4A5A6A8A9AAABACAEAFB0
B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C7C8CACBCCCECFD0D1D2D3D4D5D6D7D8D9DADBDD
DEDFE1E3E5E6E8E9EAECEDEEEFF0F1F2F2F3F4F5F6F6F7F8F9FAFAFBFCFDFEFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFF
>
0
1
<
B5B4B4B3B3B2B1B1B0B0AFAEAEADADACABABAAAAA9A8A8A7A7A6A5A5A4A4A3A2A2A1A0A09F9F9E9D
9D9C9C9B9A9A99999897979696959494939392919190908F8E8E8D8D8C8B8B8A8A89888887878685
8584848382828181807F7F7E7E7D7C7C7B7B7A79797877777676757474737372717170706F6E6E6D
6D6C6B6B6A6A696868676766
>
<
838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C
5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534
333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
4 %_Br
<
00000000000000000000000000000000000103040506070809090A0A0B0C0E0F1011121212131415
161718191A1A1B1C1C1D
>
<
BDBFC0C1C2C3C4C5C6C7C7C8C9CACBCCCECFD0D1D2D3D4D5D6D8D9D9DADBDCDDDEDFDFE0E1E2E3E4
E5E6E6E7E8E9EAEBEBEC
>
1
<
00000000000000000000000000000000000000000101010101010101010202020202020203030304
04040505050505060607
>
<
FFFEFDFCFBFBFAF9F8F7F6F5F4F3F2F2F1F0EFEEEDECEBEAE9E9E8E7E6E5E4E3E2E1E0E0DFDEDDDC
DBDAD9D8D7D7D6D5D4D3
>
<
666564636261605F5E5D5C5B5A595857565554535251504F4E4C4B4A494847464544434241403F3E
3D3C3B3A393837363534
>
<
00000001010101010102020202020303030303030404040404050505050506060606060607070707
07080808080808090909
>
4 %_Br
<
1D1C1C1B1A1A1918171615141312121211100F0E0C0B0A0A09090807060504030100000000000000
00000000000000000000
>
<
ECEBEBEAE9E8E7E6E6E5E4E3E2E1E0DFDFDEDDDCDBDAD9D9D8D6D5D4D3D2D1D0CFCECCCBCAC9C8C7
C7C6C5C4C3C2C1C0BFBD
>
1
<
07060605050505050404040303030202020202020201010101010101010100000000000000000000
00000000000000000000
>
<
D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E0E1E2E3E4E5E6E7E8E9E9EAEBECEDEEEFF0F1F2F2F3F4F5F6
F7F8F9FAFBFBFCFDFEFF
>
<
3435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F505152535455565758595A5B5C
5D5E5F60616263646566
>
<
09090908080808080807070707070606060606060505050505040404040403030303030302020202
02010101010101000000
>
4 %_Br
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000001010102020203030404040404050506060606080808090909090A0A0A0B0B
0B0D0D0D0D
>
<
BDBCBBBAB9B7B6B4B3B2B1B0AFAEACABAAA9A8A6A5A3A2A19F9E9C9B999896959492918F8E8C8A89
87868381807E7D7B7A7877757472716F6E6C6B6A6867656362615F5E5C5A595856555352504F4D4C
4A48474544
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FEFEFEFDFC
>
0
<
FFFFFFFFFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9
F9F9F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F4F3F3F3F3F3
F3F2F2F2F2
>
<
666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D
8E8F9192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6
B7B8B9BABB
>
<
000001010202020303030404050505060606070708080809090A0A0A0B0B0B0C0C0D0D0D0E0E0E0F
0F10101011111212121313131414151515161616171718181819191A1A1A1B1B1B1C1C1D1D1D1E1E
1E1F1F2020
>
4 %_Br
<
0D0D0D0D0D0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A09090909090909
09090809090909090909090808080808080808080707070708080808080807070707070708080807
07070707070707070606060606070707070606060606060606060605050505050505050504040404
04
>
<
44444343414240403F3F3D3D3C3C3B3B3A3A3838373735353434323331312F30302F2F2D2D2C2C2B
2B2A2A292928282626252524242222212120201E1F1F1D1E1C1C1B1B191A19191717161614151314
1313111210100F0F0E0E0D0D0D0C0C0A0A0A0A080907070606050504040303020201010001000000
00
>
<
FCFCFBFAF9F8F7F6F5F4F3F2F1F0EEEEEDECEBEAE9E8E7E6E5E4E2E1E0DFDEDEDDDBDAD9D8D7D6D5
D5D4D3D2D1D0CFCFCDCDCBCAC9C8C7C6C5C4C3C3C1C0BFBEBDBCBBBAB9B8B7B5B5B3B2B1B0AFAEAD
ACABABAAA9A7A7A5A4A3A2A09F9E9D9C9B9A9898979695949392918F8E8D8B8A888785848281807E
7D
>
0
<
F2F2F2F2F2F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6
F6F6F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFB
FBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFF
FF
>
<
BBBBBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C7C7C8C8C9C9CACACACBCBCCCCCDCDCE
CECFCFD0D0D1D1D2D2D3D3D4D4D5D5D6D6D7D7D8D8D8D9D9DADADBDBDCDCDDDDDEDEDFDFE0E0E1E1
E2E2E3E3E4E4E5E5E6E6E7E7E7E8E8E9E9EAEAEBEBECECEDEDEEEEEFEFF0F0F1F1F2F2F3F3F4F4F5
F5
>
<
202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041424344454647
48494A4B4C4D4E4F505152535455565758595A5B5D5E5F606162636465666768696A6B6C6D6E6F70
7172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798
99
>
4 %_Br
[
0 0.345098 0.505882 0 1 0.709804 0.513726 2 50 0.549451 %_BS
%_0 0.345098 0.505882 0 1 0.709804 0.513726 2 50 0.549451 Bs
0 0.741176 1 0 1 0.4 0 2 50 13.1868 %_BS
%_0 0.741176 1 0 1 0.4 0 2 50 13.1868 Bs
0.113725 0.92549 1 0.027451 0.827451 0.203922 0.035294 2 50 34.0659 %_BS
%_0.113725 0.92549 1 0.027451 0.827451 0.203922 0.035294 2 50 34.0659 Bs
0 0.741176 1 0 1 0.4 0 2 50 49.4506 %_BS
%_0 0.741176 1 0 1 0.4 0 2 50 49.4506 Bs
0.05098 0.266667 0.988235 0 0.94902 0.733333 0.12549 2 50 75.2747 %_BS
%_0.05098 0.266667 0.988235 0 0.94902 0.733333 0.12549 2 50 75.2747 Bs
0.015686 0 0.490196 0 1 0.960784 0.6 2 50 97.8022 %_BS
%_0.015686 0 0.490196 0 1 0.960784 0.6 2 50 97.8022 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 44)
(Unnamed gradient 44) 1 2 Bd
[
<
AAABABACACADAEAFAFB0B0B1B1B2B3B3B4B4B5B5B6B7B8B8B9BABABBBCBCBDBEBEBFC0C0C1C1C2C2
C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCECECFD0D0D1D1D2D3D3D4D4D5D6D6D7D7D8D9D9DADBDB
>
<
1B1C1E1F2122232526282A2B2D2E303133353638393B3C3E3F4143444647494B4C4E4F5153545656
57595B5C5E6061636567686A6C6E6F7173747678797B7D7F8182848687898B8D8E909293959799
>
<
00000000000001010202020303030404040505060606070708080809090A0B0B0C0D0D0E0F0F1012
1415161617171819191A1B1B1C1C1D1E1F1F202021222223242425252627272829292A2B2B2C2D
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000101010101010101010102020202020202030303040404040505
>
0.2
<
B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8D
8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766
>
<
E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1
BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99
>
4 %_Br
[
0.666667 0.105882 0 0 0.2 0.701961 0.909804 2 50 0 %_BS
%_0.666667 0.105882 0 0 0.2 0.701961 0.909804 2 50 0 Bs
0.858823 0.6 0.176471 0.019608 0.2 0.4 0.6 2 50 98.9011 %_BS
%_0.858823 0.6 0.176471 0.019608 0.2 0.4 0.6 2 50 98.9011 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 57)
(Unnamed gradient 57) 1 2 Bd
[
0
<
5859595A5A5B5D5D5E5E5F60606161636464656566686869696A6C6C6D6D6F707071727274747576
767777797A7A7B7B7D7E7E808081838384848587868888898A8A8C8C8D8E8E8F8F91929293939496
969797999B9A9C9C9E9F9FA0A0A2A3A3A4A4A6A7A7A8AAAAABABACADADAEAEAFB0B0B1B1B2B3B3B5
B5B6B7B7B9B9BABBBBBCBCBD
>
<
81828384868788898A8C8D8E8F90929394959698999A9B9D9E9FA0A2A3A4A5A6A8A9AAABACAEAFB0
B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C7C8CACBCCCECFD0D1D2D3D4D5D6D7D8D9DADBDD
DEDFE1E3E5E6E8E9EAECEDEEEFF0F1F2F2F3F4F5F6F6F7F8F9FAFAFBFCFDFEFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFF
>
0
1
<
B5B4B4B3B3B2B1B1B0B0AFAEAEADADACABABAAAAA9A8A8A7A7A6A5A5A4A4A3A2A2A1A0A09F9F9E9D
9D9C9C9B9A9A99999897979696959494939392919190908F8E8E8D8D8C8B8B8A8A89888887878685
8584848382828181807F7F7E7E7D7C7C7B7B7A79797877777676757474737372717170706F6E6E6D
6D6C6B6B6A6A696868676766
>
<
838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C
5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534
333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
4 %_Br
[
0 0.345098 0.505882 0 1 0.709804 0.513726 2 50 0 %_BS
%_0 0.345098 0.505882 0 1 0.709804 0.513726 2 50 0 Bs
0 0.741176 1 0 1 0.4 0 2 50 98.9011 %_BS
%_0 0.741176 1 0 1 0.4 0 2 50 98.9011 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 7)
(Unnamed gradient 7) 1 3 Bd
[
<
A6A5A6A5A5A5A4A4A4A3A3A3A3A2A2A2A1A1A1A0A0A09F
>
0
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE
>
0
<
5A5B5B5C5D5D5E5E5F6060616262636464656566676768
>
<
C4C4C3C3C3C2C2C2C1C1C1C1C0C0C0BFBFBFBEBEBEBDBD
>
<
2E2F3031323334353637383A3B3C3D3E3F404142434445
>
4 %_Br
<
9F9E9E9D9C9B9A99989796959494939191908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A
79787776757473727271706F6E6D6C6B6A
>
0
<
FEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
0
<
68696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F8081828385868788898A8B8C8D8E8F90
9192939495969798999A9B9C9D9E9FA0A1
>
<
BDBEBEBFBFC0C0C1C2C2C3C3C4C4C5C6C6C7C7C8C8C9CACACBCBCCCCCDCECECFCFD0D0D1D2D2D3D3
D4D4D5D6D6D7D7D8D8D9DADADBDBDCDCDD
>
<
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2A292827262524232221201F
1E1D1C1B1A191817161514131211100F0E
>
4 %_Br
[
0.65098 0 1 0 0.352941 0.768627 0.180392 2 50 0 %_BS
%_0.65098 0 1 0 0.352941 0.768627 0.180392 2 50 0 Bs
0.623529 0 0.996078 0 0.407843 0.741176 0.270588 2 50 56.044 %_BS
%_0.623529 0 0.996078 0 0.407843 0.741176 0.270588 2 50 56.044 Bs
0.415686 0 1 0 0.631373 0.866667 0.054902 (New Color Swatch 1) 0 1 4 50 100 %_BS
%_0.415686 0 1 0 0.631373 0.866667 0.054902 (New Color Swatch 1) 0 1 4 50 100 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
1 Bn
%AI5_BeginGradient: (New Gradient Swatch 1)
(New Gradient Swatch 1) 1 3 Bd
[
<
04040404040404040403030303030303030303040403030303030303030303030303030302020202
01010101010101000000000101010102020202020202020101010101010100000000
>
<
53545657585A5B5B5C5E5F616263656667696A696B6C6D6F7071737476777878797B7C7D7F808183
8486878788898B8C8E8F90929395969698999B9C9D9FA0A1A3A4A5A5A7A8AAABACAD
>
<
3233343536363739393A3B3C3C3D3E3F404041434445464748494A4B4D4E4F50525354545558595A
5B5C5D5F6061626364656668696B6C6E6F717273757678797A7B7C7F808182848586
>
0
<
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3
F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2
>
<
B8B7B6B5B4B3B2B2B1B0AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9C9B9A999897969594
93929191908F8E8D8C8B8A89888786868584838281807F7E7D7C7B7B7A7978777675
>
<
B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979695949392918F8E8D
8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B
>
4 %_Br
<
00000001010101020202020303030303040404040505050506060505060606050507060606070707
070909090808090909090A0A0A0A0B0B0A0A0B0B0B0B0B0C0D0D0D0E0E0E0E0F0F0F0F0F10101010
1111111112121212131313
>
<
ADAFB0B1B1B3B4B5B6B7B8B8B9BABBBCBDBEBEBFC0C2C3C4C5C5C6C7C8C9CACCCCCDCECFD0D1D2D2
D3D4D5D6D7D7D8D9DADBDCDDDDDEDFE0E1E2E3E3E4E5E6E7E8E8E8E9EAEAEBECECECEDEDEEEFEFF0
F0F1F2F2F3F4F5F4F5F6F6
>
<
8687888A8C8E8F9192949698999B9D9EA0A1A3A4A6A8A9ABADAFB0B2B4B5B7B8BABCBDBFC0C2C4C5
C7C9CACCCDCFD3D4D6D7DADBDDDFE1E2E4E6E8EAEBEDEFF1F3F5F7FAFCFEFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00010101010101010101010101010101010101010101010101010101010101010101010102020102
0202020202020202020202
>
<
F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEFEEEEEEEEEDEDEDEDECECECECEBEBEBEBEBEAEAEAEAE9E9E9
E9E8E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1E1E1E0E0E0E0
DFDFDFDFDEDEDEDEDDDDDD
>
<
757473727271706F6E6D6C6C6B6A6968676666656463626160605F5E5D5C5B5A5A59585756555454
535251504F4F4E4D4C4B4A4949484746454443434241403F3E3D3D3C3B3A39383737363534333231
31302F2E2D2C2B2B2A2928
>
<
6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544
434241403F3E3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B
1A19181716151413121110
>
4 %_Br
[
0.015686 0.32549 0.196078 0 0.956863 0.721569 0.709804 2 50 3.2967 %_BS
%_0.015686 0.32549 0.196078 0 0.956863 0.721569 0.709804 2 50 3.2967 Bs
0 0.678431 0.52549 0 0.94902 0.458824 0.419608 2 50 43.4066 %_BS
%_0 0.678431 0.52549 0 0.94902 0.458824 0.419608 2 50 43.4066 Bs
0.07451 0.964706 1 0.007843 0.866667 0.156863 0.062745 2 50 100 %_BS
%_0.07451 0.964706 1 0.007843 0.866667 0.156863 0.062745 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
0.415686 0 1 0 0.631373 0.866667 0.054902 (New Color Swatch 1) 0 1 Xx
(New Color Swatch 1)
Pc
0.309804 0.247059 0.25098 0 0.698039 0.698039 0.698039 Xa
(R=178 G=178 B=178 1)
Pc
0.462745 0.011765 1 0 0.592157 0.780392 0.207843 Xa
(R=151 G=199 B=53 1)
Pc
0.65098 0 1 0 0.352941 0.768627 0.180392 Xa
(R=90 G=196 B=46 1)
Pc
0.113725 0.92549 1 0.027451 0.827451 0.203922 0.035294 Xa
(R=211 G=52 B=9 1)
Pc
0.309804 0.247059 0.25098 0 0.698039 0.698039 0.698039 Xa
(R=178 G=178 B=178 2)
Pc
0.764706 0.286274 0 0 0 0.584314 0.854902 Xa
(R=0 G=149 B=218 1)
Pc
0 0.741176 1 0 1 0.4 0 Xa
(\777)
Pc
(R=255 G=102 B=0 1)
Pc
0 0.345098 0.505882 0 1 0.709804 0.513726 Xa
(R=255 G=181 B=131 1)
Pc
0.533333 0 0.011765 0 0.376471 0.807843 0.956863 Xa
(R=96 G=206 B=244 1)
Pc
0.329412 0 0.035294 0 0.623529 0.898039 0.968627 Xa
(R=159 G=229 B=247 1)
Pc
0.858823 0.6 0.176471 0.019608 0.2 0.4 0.6 Xa
(R=51 G=102 B=153 1)
Pc
0.396078 0 0 0 0.556863 0.847059 0.972549 (New Color Swatch) 0 1 Xk
(New Color Swatch)
Pc
0.694118 0.141176 0 0 0 0.682353 0.937255 (New Color Swatch 2) 0 1 Xk
(New Color Swatch 2)
Pc
0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 (New Color Swatch 12) 0 1 Xk
(New Color Swatch 12)
Pc
0.05098 0.266667 0.988235 0 0.94902 0.733333 0.12549 Xa
(R=242 G=187 B=32 1)
Pc
Bb
0 0 0 0 Bh
2 (New Gradient Swatch 1) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 1)
Pc
0.015686 0 0.490196 0 1 0.960784 0.6 Xa
(R=255 G=245 B=153 1)
Pc
0.533333 0.556863 0.603922 0.286274 0.407843 0.352941 0.321569 Xa
(R=104 G=90 B=82 1)
Pc
0.352941 0.360784 0.388235 0.007843 0.666667 0.607843 0.576471 Xa
(R=170 G=155 B=147 1)
Pc
(R=170 G=155 B=147 2)
Pc
0 0.129412 0.05098 0 1 0.890196 0.890196 Xa
(R=255 G=227 B=227 1)
Pc
0.090196 0 0.019608 0 0.894118 0.952941 0.968627 Xa
(R=228 G=243 B=247 1)
Pc
0.172549 0 0.678431 0 0.858824 0.988235 0.466667 Xa
(R=219 G=252 B=119 1)
Pc
0.05098 0 0.243137 0 0.956863 1 0.8 Xa
(R=244 G=255 B=204 1)
Pc
0.25098 0.87451 0.996078 0.196078 0.627451 0.227451 0.133333 Xa
(R=160 G=58 B=34 1)
Pc
0.039216 0.12549 0.827451 0 0.968627 0.839216 0.294118 Xa
(R=247 G=214 B=75 1)
Pc
0.027451 0.168627 0.968627 0 0.976471 0.807843 0.098039 Xa
(R=249 G=206 B=25 1)
Pc
0.760784 0.164706 1 0.031373 0.266667 0.6 0.113725 Xa
(R=68 G=153 B=29 1)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 4 255 255 79 0 50 Lb
(Layer 5) Ln
0 A
1 Ap
0 O
0 0 0 0 1 1 1 Xa
0 J 0 j 1 w 4 M []0 d0 XR
594.5 123.5 m
-0.499512 123.5 L
-0.499512 718.4995 L
594.5 718.4995 L
594.5 123.5 L
f
u
u
0 Ap
0.141176 0.105882 0.109804 0 0.847059 0.847059 0.847059 Xa
1 XR
322.8232 196.7285 m
330.8086 197.8828 334.6104 203.1182 335.5078 208.4717 c
336.7451 215.752 332.2627 223.8447 323.502 227.2822 C
330.9814 225.1455 339.2881 220.1025 340.4053 207.5156 c
341.5215 194.9268 332.3174 184.6953 320.1787 183.6807 c
313.0098 183.0986 320.7002 196.7285 322.8232 196.7285 C
f
/BBAccumRotation (0.221485) XT
299.1787 242.166 m
294.2266 248.5234 287.7681 249.1729 282.6924 247.2998 c
275.7612 244.708 270.9717 236.8027 272.4214 227.5098 C
270.5127 235.0244 270.7222 244.7754 281.0757 252.002 c
291.4185 259.2686 304.8164 256.4043 311.7891 246.4229 c
315.9277 240.4404 300.3408 240.085 299.1787 242.166 C
f
/BBAccumRotation (0.221485) XT
271.5947 198.5303 m
268.5122 191.0508 271.0972 185.1055 275.2314 181.6143 c
280.9023 176.8369 290.1045 176.5908 297.5166 182.3809 C
291.8921 177.0361 283.3091 172.4395 271.9023 177.9014 c
260.5049 183.3223 256.3828 196.4785 261.6919 207.4219 c
264.853 213.9736 281.2349 202.2041 275.0229 205.1855 c
273.7173 205.835 273.062 201.3125 271.5947 198.5303 C
f
/BBAccumRotation (0.221485) XT
U
u
320.4531 189.542 m
330.0449 188.793 335.8389 193.8887 338.2861 199.8818 c
341.6328 208.0264 338.5371 218.6152 329.2451 224.9102 C
337.3877 220.4629 345.7305 212.4209 343.7324 197.4844 c
341.7344 182.5479 328.3457 173.0557 313.959 175.0547 c
305.4668 176.2549 298.4219 181.4492 294.5254 188.543 C
292.728 191.3896 291.8789 194.8359 292.3774 198.4336 c
293.5264 206.5771 301.0703 212.3213 309.2129 211.2227 c
317.3545 210.0732 323.1006 202.4795 321.9512 194.3369 c
321.7012 192.6387 321.2021 191.0391 320.4531 189.542 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 124) 295.8398 219.7129 -45 40.9558 1 0 0 1 0 0 Bg
28.9601 -28.9601 -28.9601 -28.9601 295.8398 219.7129 Bm
f
0 BB
306.6152 243.9932 m
302.5195 252.6855 295.1758 255.1338 288.7808 254.2852 c
280.0386 253.085 272.3965 245.1426 271.6475 233.9512 C
271.3965 243.1943 274.1943 254.4844 288.1323 260.1787 c
302.0693 265.9229 316.9053 259.0801 322.4004 245.6426 c
325.6484 237.5977 324.6494 228.9063 320.4531 222.0127 C
318.9033 219.0166 316.3066 216.5674 312.9092 215.2197 c
305.3662 212.1211 296.625 215.8184 293.5264 223.4111 c
290.4307 231.0547 294.1255 239.7969 301.7197 242.8936 c
303.3184 243.543 304.9668 243.8926 306.6152 243.9932 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 111) 286.6636 255.8418 -45 57.9873 1 0 0 1 0 0 Bg
41.0032 -41.0032 -41.0032 -41.0032 286.6636 255.8418 Bm
f
0 BB
265.4521 204.1289 m
259.9067 196.2363 261.356 188.6426 265.2515 183.4971 c
270.5977 176.4541 281.2383 173.7559 291.3784 178.5508 C
283.436 173.8057 272.2451 170.708 260.4063 180.0498 c
248.5674 189.3418 247.2178 205.7275 256.2607 217.0674 c
261.6553 223.8613 269.7485 227.2578 277.7905 227.0088 C
281.1377 227.1074 284.585 226.0098 287.4321 223.7607 c
293.8267 218.666 294.9258 209.2246 289.8301 202.7803 c
284.6846 196.335 275.2437 195.2871 268.7988 200.3828 c
267.4502 201.4805 266.3506 202.7305 265.4521 204.1289 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 44) 259.1372 224.875 -45 53.1218 1 0 0 1 0 0 Bg
37.5628 -37.5628 -37.5628 -37.5628 259.1372 224.875 Bm
f
0 BB
U
U
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 3 79 79 255 0 50 Lb
(SHD) Ln
0 A
1 Ap
0 O
0 J 0 j 1 w 4 M []0 d1 XR
178.5957 569.9414 m
178.5957 563.5684 147.0337 558.4023 108.0996 558.4023 c
69.1655 558.4023 37.6035 563.5684 37.6035 569.9414 c
37.6035 576.3145 69.1655 581.4805 108.0996 581.4805 c
147.0337 581.4805 178.5957 576.3145 178.5957 569.9414 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 108.0996 124.0781 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 108.0996 569.9414 Bm
f
0 BB
370.0869 569.9414 m
370.0869 563.5684 338.5254 558.4023 299.5908 558.4023 c
260.6567 558.4023 229.0947 563.5684 229.0947 569.9414 c
229.0947 576.3145 260.6567 581.4805 299.5908 581.4805 c
338.5254 581.4805 370.0869 576.3145 370.0869 569.9414 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 299.5908 124.0781 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 299.5908 569.9414 Bm
f
0 BB
559.0781 569.9414 m
559.0781 563.5684 527.5166 558.4023 488.582 558.4023 c
449.6484 558.4023 418.0859 563.5684 418.0859 569.9414 c
418.0859 576.3145 449.6484 581.4805 488.582 581.4805 c
527.5166 581.4805 559.0781 576.3145 559.0781 569.9414 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 488.582 124.0781 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 488.582 569.9414 Bm
f
0 BB
178.5957 437.9478 m
178.5957 431.5747 147.0337 426.4087 108.0996 426.4087 c
69.1655 426.4087 37.6035 431.5747 37.6035 437.9478 c
37.6035 444.3208 69.1655 449.4868 108.0996 449.4868 c
147.0337 449.4868 178.5957 444.3208 178.5957 437.9478 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 108.0996 -682.2363 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 108.0996 437.9478 Bm
f
0 BB
370.0869 437.9478 m
370.0869 431.5747 338.5254 426.4087 299.5908 426.4087 c
260.6567 426.4087 229.0947 431.5747 229.0947 437.9478 c
229.0947 444.3208 260.6567 449.4868 299.5908 449.4868 c
338.5254 449.4868 370.0869 444.3208 370.0869 437.9478 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 299.5908 -682.2363 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 299.5908 437.9478 Bm
f
0 BB
559.0781 437.9478 m
559.0781 431.5747 527.5166 426.4087 488.582 426.4087 c
449.6484 426.4087 418.0859 431.5747 418.0859 437.9478 c
418.0859 444.3208 449.6484 449.4868 488.582 449.4868 c
527.5166 449.4868 559.0781 444.3208 559.0781 437.9478 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 488.582 -682.2363 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 488.582 437.9478 Bm
f
0 BB
178.5957 304.4541 m
178.5957 298.0811 147.0337 292.915 108.0996 292.915 c
69.1655 292.915 37.6035 298.0811 37.6035 304.4541 c
37.6035 310.8271 69.1655 315.9932 108.0996 315.9932 c
147.0337 315.9932 178.5957 310.8271 178.5957 304.4541 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 108.0996 -1497.7139 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 108.0996 304.4541 Bm
f
0 BB
370.0869 304.4541 m
370.0869 298.0811 338.5254 292.915 299.5908 292.915 c
260.6567 292.915 229.0947 298.0811 229.0947 304.4541 c
229.0947 310.8271 260.6567 315.9932 299.5908 315.9932 c
338.5254 315.9932 370.0869 310.8271 370.0869 304.4541 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 299.5908 -1497.7139 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 299.5908 304.4541 Bm
f
0 BB
559.0781 304.4541 m
559.0781 298.0811 527.5166 292.915 488.582 292.915 c
449.6484 292.915 418.0859 298.0811 418.0859 304.4541 c
418.0859 310.8271 449.6484 315.9932 488.582 315.9932 c
527.5166 315.9932 559.0781 310.8271 559.0781 304.4541 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 488.582 -1497.7139 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 488.582 304.4541 Bm
f
0 BB
178.5957 155.9619 m
178.5957 149.5889 147.0337 144.4229 108.0996 144.4229 c
69.1655 144.4229 37.6035 149.5889 37.6035 155.9619 c
37.6035 162.335 69.1655 167.501 108.0996 167.501 c
147.0337 167.501 178.5957 162.335 178.5957 155.9619 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 108.0996 -2404.8135 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 108.0996 155.9619 Bm
f
0 BB
369.5957 155.9619 m
369.5957 149.5889 338.0332 144.4229 299.0996 144.4229 c
260.1655 144.4229 228.6035 149.5889 228.6035 155.9619 c
228.6035 162.335 260.1655 167.501 299.0996 167.501 c
338.0332 167.501 369.5957 162.335 369.5957 155.9619 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 299.0996 -2404.8135 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 299.0996 155.9619 Bm
f
0 BB
559.0781 155.9619 m
559.0781 149.5889 527.5166 144.4229 488.582 144.4229 c
449.6484 144.4229 418.0859 149.5889 418.0859 155.9619 c
418.0859 162.335 449.6484 167.501 488.582 167.501 c
527.5166 167.501 559.0781 162.335 559.0781 155.9619 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 488.582 -2404.8135 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 488.582 155.9619 Bm
f
0 BB
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(LOGO) Ln
0 A
u
0 Ap
0 O
0.309804 0.247059 0.25098 0 0.698039 0.698039 0.698039 Xa
0 J 0 j 1 w 4 M []0 d1 XR
117.8789 526.0557 m
124.1377 519.5596 125.0879 512.3857 120.1563 510.2207 C
115.2246 507.9199 106.3105 511.4395 100.2402 518.0713 C
94.1729 524.7021 93.2236 531.876 98.1543 534.041 C
102.8965 536.2061 111.8105 532.6885 117.8789 526.0557 C
f
148.418 518.5088 m
152.9941 513.5508 153.6699 508.2314 149.9424 506.5381 C
146.3857 504.8447 139.6064 507.5059 135.0313 512.4629 C
130.458 517.4209 129.6104 522.8623 133.3369 524.5547 C
137.0645 526.249 143.6748 523.5879 148.418 518.5088 C
f
168.1396 496.0098 m
171.3633 492.4912 171.9326 488.7012 169.2764 487.4834 C
166.8115 486.2646 162.0703 488.1602 158.8477 491.6787 C
155.6211 495.1963 155.0527 498.9873 157.709 500.2051 C
160.1748 501.2881 164.916 499.3936 168.1396 496.0098 C
f
93.416 513.1982 m
100.4307 505.7549 101.5684 497.6338 96.0684 495.0615 C
90.3789 492.626 80.3271 496.5518 73.5 503.9951 C
66.6719 511.4395 65.5332 519.5596 71.0332 522.1309 C
76.5342 524.5674 86.5859 520.6436 93.416 513.1982 C
f
0.764706 0.286274 0 0 0 0.584314 0.854902 Xa
87.5342 485.0479 m
95.3115 476.6543 96.6377 467.4512 90.3789 464.6094 C
84.1211 461.7676 72.7402 466.3701 64.9639 474.7607 C
57.1885 483.1514 55.8604 492.3555 62.1191 495.1963 C
68.3779 498.04 79.7598 493.4385 87.5342 485.0479 C
f
U
u
0.8 0.109804 1 0.011765 0.180392 0.627451 0.180392 Xa
282.9277 353.7305 m
271.2944 353.7305 261.9121 358.4219 261.9121 364.0508 c
261.9121 369.7734 271.2944 374.3701 282.9277 374.3701 c
284.8096 374.3701 286.6309 374.248 288.3652 374.0225 C
283.0039 375.9336 276.4028 377.0615 269.2471 377.0615 c
251.2539 377.0615 236.7427 369.9521 236.7427 361.1006 c
236.7427 352.3936 251.2539 345.1377 269.2471 345.1377 c
285.9648 345.1377 299.6689 351.4033 301.5283 359.2744 C
298.0146 356 291.0166 353.7305 282.9277 353.7305 c
f
0.309804 0.247059 0.25098 0 0.698039 0.698039 0.698039 Xa
290.1519 379.0605 m
283.6782 384.4092 279.6436 391.0703 281.1455 393.791 c
282.6465 396.6055 289.2139 394.4473 295.6875 389.1943 c
298.9854 386.4697 301.6445 383.4072 303.2656 380.6963 C
302.3672 385.7627 296.8369 393.5 288.9824 399.9893 c
278.9688 408.1152 268.812 411.4512 266.4897 407.0986 c
264.168 402.8916 270.4077 392.5879 280.4199 384.3164 c
285.2798 380.3027 290.165 377.498 294.1797 376.1582 C
292.8633 376.9756 291.5068 377.9414 290.1519 379.0605 c
f
339.0449 348.7656 m
333.1074 354.5684 327.0732 358.8584 321.9541 361.2051 C
323.9404 359.8018 326.0059 358.0781 328.0547 356.0762 c
336.124 348.1953 340.8154 338.8125 338.4688 335.248 c
336.124 331.7764 327.5859 335.3418 319.5176 343.2227 c
313.9639 348.585 310.0234 354.6396 308.8066 359.0859 C
307.541 352.5752 314.5342 339.8018 325.8398 328.8867 c
338.3184 316.6973 351.5234 311.1826 355.1504 316.5527 c
358.7793 322.0664 351.5234 336.5762 339.0449 348.7656 c
f
342.6729 371.6768 m
342.2383 375.0146 334.6914 378.0615 325.9834 378.4961 c
317.5264 378.7725 311.0723 376.6631 310.8936 373.6895 C
312.4805 374.7705 315.7178 375.4258 319.6113 375.2979 c
325.2412 375.0166 330.1201 373.0459 330.4023 370.8887 C
330.7754 368.8242 326.3662 367.3232 320.6426 367.6055 c
320.4365 367.6152 320.2344 367.6318 320.0293 367.6475 C
322.3203 367.1025 324.8936 366.7314 327.5801 366.5977 c
336.4307 366.1621 343.2529 368.4824 342.6729 371.6768 C
f
U
u
287.457 544.2651 m
285.46 530.2979 L
274.7178 531.0654 263.5137 527.9946 254.6113 520.4775 C
257.374 525.54 261.0586 529.9927 265.6621 533.8281 C
272.1094 539.3535 279.6299 542.7295 287.457 544.2651 C
f
337.7959 520.937 m
323.9824 518.3286 L
321.2207 528.7656 314.4678 538.1265 304.6465 544.1108 C
310.1699 543.1924 315.6953 541.1943 320.7607 538.1265 C
328.127 533.8281 333.8066 527.8438 337.7959 520.937 C
f
331.0439 463.8438 m
324.5967 476.2754 L
333.8066 481.9546 341.0195 491.0073 343.7822 502.2119 C
344.5488 496.6865 344.2422 490.8564 342.708 485.0225 C
340.7129 476.7378 336.5693 469.5229 331.0439 463.8438 C
f
274.5635 454.6338 m
284.8467 464.3062 L
292.8291 457.0908 303.5713 452.793 315.0811 453.1016 C
309.8643 450.9521 304.1855 449.5708 298.2002 449.417 C
289.7588 448.9575 281.625 450.9521 274.5635 454.6338 C
f
249.2402 505.5884 m
261.6729 498.8359 L
257.0693 489.0156 256.1475 477.5024 259.9863 466.606 C
256.3018 470.9043 253.3848 475.9702 251.3896 481.4956 C
248.4727 489.4751 247.8594 497.7598 249.2402 505.5884 C
f
0 0.741176 1 0 1 0.4 0 Xa
315.2354 488.0938 m
322.9102 477.811 L
317.5391 469.5229 298.6602 471.2095 291.4482 475.8159 C
283.9277 466.3008 L
274.2588 469.3687 270.8828 486.8667 273.3369 495.1543 C
262.1338 499.2983 L
262.1338 509.7324 277.3262 518.02 286.3818 518.3286 C
287.6094 529.9927 L
296.2051 532.6011 308.3291 520.7827 311.2461 513.5679 C
322.6016 518.1743 L
328.5879 510.8081 321.374 493.4648 315.2354 488.0938 C
f
U
*u
0 g
463.4199 366.5371 m
463.4199 366.5371 L
451.8584 359.6494 L
451.6133 361.6211 451.3672 363.5859 451.3672 365.7998 c
451.3672 381.5391 461.2051 395.3115 475.2236 400.7227 C
475.2236 387.6865 L
461.9424 383.0146 L
488.9941 367.2744 L
489.2422 367.2744 L
516.293 383.0146 L
502.7695 387.6865 L
502.7695 387.6865 L
502.7695 400.9697 L
516.7871 395.5566 526.8691 381.7871 526.8691 365.7998 c
526.8691 363.8311 526.624 361.8623 526.377 360.1426 C
515.0645 366.5371 L
517.7695 380.5557 L
490.4707 364.8164 L
490.4707 364.8164 L
490.4707 333.3389 L
501.292 342.9268 L
512.6045 336.2871 L
506.2109 331.1221 497.8496 327.9258 488.9941 327.9258 c
480.3867 327.9258 472.2715 331.1221 465.8779 336.043 C
477.4375 342.6816 L
488.0117 333.3389 L
488.0117 364.8164 L
487.7656 365.0615 L
460.7139 380.5557 L
463.4199 366.5371 L
463.4199 366.5371 L
f
1 D
452.8438 355.2256 m
467.8447 363.8311 L
476.9453 358.666 L
476.9453 347.6016 L
458.7461 337.0244 L
458.7461 337.0244 L
452.5967 333.584 L
461.6973 323.499 474.7324 317.1035 488.9941 317.1035 c
503.752 317.1035 516.7871 323.499 525.6406 333.8291 C
520.7207 336.5313 L
520.7207 336.5313 L
501.292 347.8467 L
501.292 358.666 L
510.6367 364.0791 L
525.3955 355.4707 L
525.3955 355.4707 L
535.2314 349.8154 L
536.9531 354.7324 537.6895 360.1426 537.6895 365.7998 c
537.6895 389.4102 520.7207 409.3311 498.3398 413.5098 C
498.3398 402.1973 L
498.3398 402.1973 L
498.3398 385.2275 L
489.2422 380.0625 L
479.6484 385.4727 L
479.6484 410.3125 L
479.6484 410.3125 L
479.6484 413.5098 L
457.2705 409.083 440.5459 389.1611 440.5459 365.7998 c
440.5459 360.1426 441.2842 354.7324 443.25 349.5674 C
452.8438 355.2256 L
452.8438 355.2256 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 7) 489.2422 367.2754 -44.9992 43.9969 1 0 0 1 0 0 Bg
31.1109 -31.1101 -31.1101 -31.1109 489.2422 367.2754 Bm
f
0 BB
*U
u
0 D
113.6274 407.4736 m
113.4507 407.7041 l
107.5781 361.9297 l
117.9243 377.5225 l
123.4688 374.0967 126.7803 367.8604 125.8608 360.9473 c
124.6714 352.002 116.3804 345.6582 107.2036 346.6689 c
98.2588 347.8574 91.9116 356.1514 92.9243 365.3242 c
93.6113 372.0605 98.6636 377.3887 104.9116 379.25 c
100.1143 406.9912 l
81.9966 402.9863 67.4072 388.167 65.042 368.8242 c
61.9785 344.1953 79.4854 321.7979 103.7061 318.7881 c
128.334 315.7236 150.7314 333.2314 153.7412 357.4521 c
156.8076 382.0811 139.2988 404.4766 115.0752 407.4883 c
114.6714 407.542 114.0342 407.4199 113.6274 407.4736 c
113.6274 407.4736 l
Bb
-9.88227 32.4433 106.9408 0.75931 Bh
1 (Unnamed gradient 27) 109.3916 363.0723 0 44.6655 1 0 0 1 0 0 Bg
44.6655 0 0 -44.6655 109.3916 363.0723 Bm
f
0 BB
/BBAccumRotation (0.653310) XT
U
u
1 Ap
0 XR
538.1875 497.0361 m
538.1875 470.3887 516.5859 448.7861 489.9375 448.7861 c
463.2891 448.7861 441.6875 470.3887 441.6875 497.0361 c
441.6875 523.6836 463.2891 545.2861 489.9375 545.2861 c
516.5859 545.2861 538.1875 523.6836 538.1875 497.0361 c
Bb
-4.77052 35.4639 97.6613 0.743319 Bh
1 (Unnamed gradient 111) 489.9375 497.0361 -45 48.1399 1 0 0 1 0 0 Bg
34.0401 -34.0401 -34.0401 -34.0401 489.9375 497.0361 Bm
f
0 BB
0 Ap
498.0234 536.6602 m
489.1563 536.082 477.4033 530.7305 471.2031 523.7217 c
465.5186 517.2959 462.7129 511.0527 461.9941 503.0557 c
461.4072 496.5361 462.1748 487.6016 470.0811 481.1328 c
477.1914 475.3145 486.7656 475.9482 489.21 478.2314 C
482.1563 478.1299 478.667 481.4258 478.8857 486.2539 c
479.1553 492.1846 485.3594 497.7422 494.3369 500.1025 c
504.5869 502.7949 513.9473 498.499 517.2207 495.6094 c
526.5967 487.332 528.9023 468.625 514.4629 455.4883 C
514.4639 455.4883 514.4648 455.4883 Y
516.209 456.5215 517.8828 457.6621 519.4766 458.8984 c
519.5391 458.9463 519.5996 458.9941 519.6611 459.043 c
520.416 459.6348 521.1543 460.2461 521.8721 460.8809 c
521.8975 460.9023 521.9229 460.9248 521.9473 460.9463 c
523.4355 462.2666 524.8398 463.6797 526.1533 465.1719 c
526.2334 465.2627 526.3115 465.3545 526.3906 465.4443 c
526.9707 466.1133 527.5332 466.7979 528.0762 467.498 c
528.1406 467.5811 528.207 467.6621 528.2715 467.7461 c
529.4512 469.2881 530.5381 470.9043 531.5293 472.585 c
531.623 472.7461 531.7148 472.9082 531.8076 473.0703 c
532.2051 473.7627 532.5859 474.4688 532.9502 475.1826 c
533.0342 475.3486 533.123 475.5127 533.2051 475.6797 c
534.0527 477.3916 534.7979 479.1602 535.4404 480.9795 c
535.5225 481.2119 535.5996 481.4463 535.6777 481.6797 c
535.9121 482.3799 536.1309 483.0879 536.334 483.8018 c
536.4023 484.042 536.4756 484.2822 536.5391 484.5244 c
536.7891 485.4551 537.0186 486.3945 537.2129 487.3457 c
537.2168 487.3604 537.2188 487.377 537.2207 487.3926 c
537.4092 488.3145 537.5625 489.251 537.6953 490.1934 c
537.7363 490.4746 537.7686 490.7588 537.8027 491.042 c
537.8926 491.7568 537.9648 492.4756 538.0215 493.2002 c
538.0449 493.4902 538.0703 493.7783 538.0879 494.0693 c
538.1475 495.0518 538.1875 496.0391 538.1875 497.0361 c
538.1875 509.5908 533.3887 521.0234 525.5313 529.6064 C
518.5137 533.4229 510.4238 537.4688 498.0234 536.6602 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 15) 488.1328 531.519 -39.4714 40.4562 1 0 0 1 0 0 Bg
31.2298 -25.7177 -25.7177 -31.2298 488.1328 531.519 Bm
f
0 BB
0.635294 0.070588 0 0 0.129412 0.737255 0.976471 Xa
498.0234 536.6602 m
489.1563 536.082 477.4033 530.7305 471.2031 523.7217 c
465.5186 517.2959 462.7129 511.0527 461.9941 503.0557 c
461.4072 496.5361 462.1748 487.6016 470.0811 481.1328 c
477.1914 475.3145 486.7656 475.9482 489.21 478.2314 C
482.1563 478.1299 478.667 481.4258 478.8857 486.2539 c
479.1553 492.1846 485.3594 497.7422 494.3369 500.1025 c
504.5869 502.7949 513.9473 498.499 517.2207 495.6094 c
526.5967 487.332 528.9023 468.625 514.4629 455.4883 C
514.4639 455.4883 514.4648 455.4883 Y
516.209 456.5215 517.8828 457.6621 519.4766 458.8984 c
519.5391 458.9463 519.5996 458.9941 519.6611 459.043 c
520.416 459.6348 521.1543 460.2461 521.8721 460.8809 c
521.8975 460.9023 521.9229 460.9248 521.9473 460.9463 c
523.4355 462.2666 524.8398 463.6797 526.1533 465.1719 c
526.2334 465.2627 526.3115 465.3545 526.3906 465.4443 c
526.9707 466.1133 527.5332 466.7979 528.0762 467.498 c
528.1406 467.5811 528.207 467.6621 528.2715 467.7461 c
529.4512 469.2881 530.5381 470.9043 531.5293 472.585 c
531.623 472.7461 531.7148 472.9082 531.8076 473.0703 c
532.2051 473.7627 532.5859 474.4688 532.9502 475.1826 c
533.0342 475.3486 533.123 475.5127 533.2051 475.6797 c
534.0527 477.3916 534.7979 479.1602 535.4404 480.9795 c
535.5225 481.2119 535.5996 481.4463 535.6777 481.6797 c
535.9121 482.3799 536.1309 483.0879 536.334 483.8018 c
536.4023 484.042 536.4756 484.2822 536.5391 484.5244 c
536.7891 485.4551 537.0186 486.3945 537.2129 487.3457 c
537.2168 487.3604 537.2188 487.377 537.2207 487.3926 c
537.4092 488.3145 537.5625 489.251 537.6953 490.1934 c
537.7363 490.4746 537.7686 490.7588 537.8027 491.042 c
537.8926 491.7568 537.9648 492.4756 538.0215 493.2002 c
538.0449 493.4902 538.0703 493.7783 538.0879 494.0693 c
538.1475 495.0518 538.1875 496.0391 538.1875 497.0361 c
538.1875 509.5908 533.3887 521.0234 525.5313 529.6064 C
518.5137 533.4229 510.4238 537.4688 498.0234 536.6602 c
f
498.0234 536.6602 m
489.1563 536.082 477.4033 530.7305 471.2031 523.7217 c
465.5186 517.2959 462.7129 511.0527 461.9941 503.0557 c
461.4072 496.5361 462.1748 487.6016 470.0811 481.1328 c
477.1914 475.3145 486.7656 475.9482 489.21 478.2314 C
482.1563 478.1299 478.667 481.4258 478.8857 486.2539 c
479.1553 492.1846 485.3594 497.7422 494.3369 500.1025 c
504.5869 502.7949 513.9473 498.499 517.2207 495.6094 c
526.5967 487.332 528.9023 468.625 514.4629 455.4883 C
514.4639 455.4883 514.4648 455.4883 Y
516.209 456.5215 517.8828 457.6621 519.4766 458.8984 c
519.5391 458.9463 519.5996 458.9941 519.6611 459.043 c
520.416 459.6348 521.1543 460.2461 521.8721 460.8809 c
521.8975 460.9023 521.9229 460.9248 521.9473 460.9463 c
523.4355 462.2666 524.8398 463.6797 526.1533 465.1719 c
526.2334 465.2627 526.3115 465.3545 526.3906 465.4443 c
526.9707 466.1133 527.5332 466.7979 528.0762 467.498 c
528.1406 467.5811 528.207 467.6621 528.2715 467.7461 c
529.4512 469.2881 530.5381 470.9043 531.5293 472.585 c
531.623 472.7461 531.7148 472.9082 531.8076 473.0703 c
532.2051 473.7627 532.5859 474.4688 532.9502 475.1826 c
533.0342 475.3486 533.123 475.5127 533.2051 475.6797 c
534.0527 477.3916 534.7979 479.1602 535.4404 480.9795 c
535.5225 481.2119 535.5996 481.4463 535.6777 481.6797 c
535.9121 482.3799 536.1309 483.0879 536.334 483.8018 c
536.4023 484.042 536.4756 484.2822 536.5391 484.5244 c
536.7891 485.4551 537.0186 486.3945 537.2129 487.3457 c
537.2168 487.3604 537.2188 487.377 537.2207 487.3926 c
537.4092 488.3145 537.5625 489.251 537.6953 490.1934 c
537.7363 490.4746 537.7686 490.7588 537.8027 491.042 c
537.8926 491.7568 537.9648 492.4756 538.0215 493.2002 c
538.0449 493.4902 538.0703 493.7783 538.0879 494.0693 c
538.1475 495.0518 538.1875 496.0391 538.1875 497.0361 c
538.1875 509.5908 533.3887 521.0234 525.5313 529.6064 C
518.5137 533.4229 510.4238 537.4688 498.0234 536.6602 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 114) 477.2764 543.5386 -51.8421 63.9892 1 0 0 1 0 0 Bg
39.5345 -50.3154 -50.3154 -39.5345 477.2764 543.5386 Bm
f
0 BB
516.8027 517.0723 m
508.6191 519.7119 497.0371 519.7686 488.0508 515.2314 c
482.3496 512.3525 476.0098 507.7285 473.2246 500.2705 c
470.7832 493.7324 471.3379 486.8828 474.8428 482.3457 c
478.9219 477.0635 486.7656 475.9482 489.21 478.2314 C
482.1563 478.1299 478.667 481.4258 478.8857 486.2539 c
479.1553 492.1846 485.3594 497.7422 494.3369 500.1025 c
504.5869 502.7949 513.9473 498.499 517.2207 495.6094 c
526.5967 487.332 528.9023 468.625 514.4629 455.4883 C
514.4639 455.4883 514.4648 455.4883 Y
516.209 456.5215 517.8828 457.6621 519.4766 458.8984 c
519.5391 458.9463 519.5996 458.9941 519.6611 459.043 c
520.416 459.6348 521.1543 460.2461 521.8721 460.8809 c
521.8975 460.9023 521.9229 460.9248 521.9473 460.9463 c
523.4355 462.2666 524.8398 463.6797 526.1533 465.1719 c
526.2334 465.2627 526.3115 465.3545 526.3906 465.4443 c
526.9707 466.1133 527.5332 466.7979 528.0762 467.498 c
528.1406 467.5811 528.207 467.6621 528.2715 467.7461 c
529.4512 469.2881 530.5381 470.9043 531.5293 472.585 c
531.623 472.7461 531.7148 472.9082 531.8076 473.0703 c
532.2051 473.7627 532.5859 474.4688 532.9502 475.1826 c
533.0342 475.3486 533.123 475.5127 533.2051 475.6797 c
534.0527 477.3916 534.7979 479.1602 535.4404 480.9795 c
535.5225 481.2119 535.5996 481.4463 535.6777 481.6797 c
535.9121 482.3799 536.1309 483.0879 536.334 483.8018 c
536.4023 484.042 536.4756 484.2822 536.5391 484.5244 c
536.7891 485.4551 537.0186 486.3945 537.2129 487.3457 c
537.2168 487.3604 537.2188 487.377 537.2207 487.3926 c
537.4092 488.3145 537.5625 489.251 537.6953 490.1934 c
537.7363 490.4746 537.7686 490.7588 537.8027 491.042 c
537.8926 491.7568 537.9648 492.4756 538.0215 493.2002 c
538.0449 493.4902 538.1016 493.7783 538.0879 494.0693 c
537.7832 500.54 533.5156 511.6816 516.8027 517.0723 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 120) 484.4648 532.3975 -44.3496 44.7301 1 0 0 1 0 0 Bg
31.986 -31.2679 -31.2679 -31.986 484.4648 532.3975 Bm
f
0 BB
u
1 D
0.211765 0.478431 1 0.031373 0.776471 0.533333 0.101961 Xa
518.6143 494.2354 m
526.7852 485.4023 528.1543 467.9443 514.4629 455.4883 C
514.4639 455.4883 514.4648 455.4883 Y
516.209 456.5215 517.8828 457.6621 519.4766 458.8984 c
519.5391 458.9463 519.5996 458.9941 519.6611 459.043 c
519.7773 459.1338 519.8848 459.2334 520.001 459.3252 C
529.1992 471.7002 526.6211 486.834 518.6143 494.2354 C
f
487.5654 477.3086 m
488.2568 477.5664 488.8281 477.876 489.21 478.2314 C
485.7393 478.1807 483.1367 478.957 481.4102 480.3301 C
482.6602 478.7578 484.7158 477.6875 487.5654 477.3086 C
f
525.5313 529.6064 m
518.5137 533.4229 510.4238 537.4688 498.0234 536.6602 c
489.1563 536.082 477.4033 530.7305 471.2031 523.7217 c
465.5186 517.2959 462.7129 511.0527 461.9941 503.0557 c
461.4365 496.8613 462.1152 488.4922 468.9619 482.124 C
463.127 488.3379 462.5449 496.127 463.0723 501.9775 c
463.791 509.9746 466.5977 516.2178 472.2813 522.6436 c
478.4814 529.6523 490.2344 535.0039 499.1025 535.582 c
511.3535 536.3818 519.3955 532.4404 526.3555 528.665 C
526.082 528.9805 525.8125 529.2988 525.5313 529.6064 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 44) 494.0977 509.4443 0 29.8912 1 0 0 1 0 0 Bg
29.8912 0 0 -29.8912 494.0977 509.4443 Bm
f
0 BB
U
*u
0 g
534.7939 479.2842 m
534.8145 479.3516 534.8438 479.418 534.8633 479.4863 C
534.8379 479.4219 534.8096 479.3584 534.7842 479.2939 C
534.7939 479.2842 L
f
537.3291 506.0771 m
535.7422 510.9775 531.6963 517.6768 521.4824 522.7393 c
510.7168 528.0771 497.9746 527.6709 488.7324 523.6826 c
481.8584 520.7178 474.5801 514.249 470.6719 504.4102 c
468.0957 497.9229 468.9199 487.0234 474.041 481.9023 c
478.7607 477.1826 486.7656 475.9482 489.21 478.2314 C
481.5889 475.7021 475.9805 481.8906 474.9844 486.6191 c
473.9063 491.7412 475.9824 497.9482 478.9844 502.1191 c
483.4326 508.3008 490.75 512.0322 496.1445 513.3047 c
510.4307 516.6748 522.1504 510.1074 528.2207 502.3887 c
535.4102 493.249 536.7607 485.8984 534.8633 479.4863 C
535.0566 479.9834 535.2617 480.4746 535.4404 480.9785 c
535.5225 481.2119 535.5996 481.4473 535.6777 481.6807 c
535.9121 482.3809 536.1309 483.0879 536.334 483.8018 c
536.4023 484.042 536.4756 484.2822 536.5391 484.5244 c
536.7891 485.4541 537.0176 486.3906 537.2129 487.3418 c
537.2129 487.3467 537.2148 487.3535 537.2158 487.3594 c
537.2178 487.3701 537.2197 487.3809 537.2207 487.3926 C
537.4092 488.3145 537.5625 489.25 537.6953 490.1924 c
537.7012 490.2285 537.7041 490.2676 537.7109 490.3047 C
537.7432 490.5498 537.7725 490.7969 537.8027 491.042 c
537.8916 491.7529 537.9629 492.4678 538.0215 493.1875 c
538.0215 493.1973 538.0215 493.208 538.0234 493.2178 c
538.0352 493.4053 538.1045 494.8955 538.1729 496.46 C
538.1748 496.6533 538.1875 496.8438 538.1875 497.0361 c
538.1875 500.1279 537.8848 503.1475 537.3291 506.0771 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 116) 483.3867 542.8218 -47.5146 52.1481 1 0 0 1 0 0 Bg
35.2209 -38.4566 -38.4566 -35.2209 483.3867 542.8218 Bm
f
0 BB
*U
U
u
0 D
0.003922 0.239216 0.490196 0 0.988235 0.780392 0.54902 Xa
1 XR
506.2754 686.7681 m
500.8291 686.7681 494.2959 681.3223 492.1182 675.3325 c
489.9395 668.7979 492.6611 663.8965 498.6514 663.8965 c
504.0977 663.8965 510.6318 668.7979 512.8096 675.3325 c
514.9883 681.3223 512.2656 686.7681 506.2754 686.7681 c
506.2754 686.7681 l
f
491.4844 669.5933 m
495.2969 682.6621 506.7314 687.563 519.8008 685.9292 c
510.5439 692.4639 488.7617 691.9189 491.4844 669.5933 c
491.4844 669.5933 l
Bb
1 (Unnamed gradient 25) 491.251 679.5771 0 28.5498 1 0 0 1 0 0 Bg
28.5498 0 0 -26.8706 491.251 694.4639 Xm
8391.2402 0 0 -26.8706 -7899.9897 694.4639 Bc
28.5498 0 0 -26.8706 491.251 694.4639 Bm
8391.2402 0 0 -26.8706 519.8008 694.4639 Bc
f
0 BB
455.4648 617.9531 m
454.0215 611.9624 445.9385 605.6118 438.8652 603.8789 C
436.916 608.2095 431.209 618.252 425.8027 623.1484 C
430.6377 625.2412 437.8545 630.0044 440.3086 635.0566 C
443.8662 632.4014 453.8193 623.5713 455.4648 617.9531 C
Bb
1 (Unnamed gradient 25) 446.4922 627.4854 -127.1847 15.7622 1 0 0 1 0 0 Bg
-9.52646 -12.5576 -26.4839 20.0912 460.3389 616.981 Xm
-5044.4038 -6649.4414 -26.4839 20.0912 5504.7432 7266.4224 Bc
-9.52646 -12.5576 -26.4839 20.0912 460.3389 616.981 Bm
-5044.4038 -6649.4414 -26.4839 20.0912 450.8125 604.4233 Bc
f
0 BB
449.6426 632.8584 m
453.999 639.937 479.8975 658.791 481.0967 639.1934 c
481.6602 629.9854 475.2715 614.7632 460.2373 604.6152 c
453.8262 600.2876 446.7969 596.165 431.7354 594.4673 C
448.3008 588.1465 466.5713 591.6494 481.8486 597.9751 c
497.8857 604.6152 513.9561 601.1699 526.1992 596.3462 c
534.4678 593.0889 538.7275 590.7085 548.5 583.9434 C
538.3516 603.4878 522.8164 615.8906 505.9023 617.77 C
509.9209 625.8701 510.6318 631.2246 510.6318 639.3926 c
523.7012 639.3926 538.9482 648.105 544.3926 654.0952 c
523.7012 645.9272 503.0078 655.729 503.0078 656.2734 c
503.0078 656.2734 503.0078 655.729 v
503.5527 655.1841 503.5527 654.6396 v
505.1865 650.2832 505.7305 645.3823 505.1865 640.4814 c
504.6416 634.4917 501.9189 628.5015 498.1074 624.1455 c
499.7412 627.4121 500.8291 630.6797 501.375 634.4917 c
503.5527 649.1938 496.834 657.3149 484.8555 659.6777 c
472.876 662.0405 455.0879 648.6499 449.6426 632.8584 c
Bb
-0.199576 40.6353 90.2814 0.824952 Bh
1 (Unnamed gradient 44) 490.1172 621.9463 0 49.2584 1 0 0 1 0 0 Bg
49.2584 0 0 -49.2584 490.1172 621.9463 Bm
f
0 BB
U
u
*u
1 D
0 XR
0 g
339.0527 670.9199 m
326.7256 671.5254 315.8691 655.9106 Y
324.709 658.2461 331.8789 657.5781 v
340.6738 656.7603 342.9023 653.0898 350.7236 653.4087 c
360.9785 653.8262 362.8984 658.5752 369.7285 665.0752 C
369.6426 665.001 368.7295 664.415 361.2314 664.415 c
353.2266 664.415 349.2227 670.4194 339.0527 670.9199 c
f
0 g
384.4121 677.9248 m
379.4082 677.9248 375.7676 680.4463 369.4033 680.7598 c
361.6963 681.1387 357.3955 672.7129 Y
361.041 674.5459 365.3994 673.4219 v
370.5723 672.0879 370.6484 669.6606 377.7412 669.9189 c
383.4785 670.1279 388.416 674.7563 391.5859 679.2593 C
389.4199 677.9248 384.4121 677.9248 v
f
0 g
339.5234 632.2158 m
330.7979 631.8472 326.6719 623.0361 Y
330.624 625.2158 335.6367 624.5176 v
341.5801 623.689 341.875 621.2773 349.8516 622.2236 c
356.3037 622.9858 361.4736 628.0762 364.6611 632.8691 C
362.335 631.3301 356.6895 630.8442 v
351.0439 630.3594 346.7227 632.5205 339.5234 632.2158 c
f
0 g
285.6133 661.9097 m
292.2466 660.1982 292.3438 657.085 301.4453 657.4165 c
308.8047 657.6836 315.1396 663.6226 319.2041 669.3994 C
316.4287 667.686 310.0029 667.686 v
303.5801 667.686 298.9102 670.9229 290.7476 671.3247 c
280.8579 671.8101 275.3438 661.0005 Y
280.0181 663.3525 285.6133 661.9097 v
f
u
0 g
323.041 643.7354 m
310.3662 642.7354 304.3623 639.3994 295.7363 623.1489 c
290.7686 613.7915 287.3208 606.4106 264.9297 613.0352 C
262.96 613.8076 260.8374 614.7886 258.5 616.0518 C
270.2319 613.022 277.2324 616.1777 280.9346 622.5449 c
286.0703 631.3784 286.4736 645.7529 298.791 652.6484 C
291.6929 652.6392 289.2871 656.042 280.8462 656.8276 c
273.6753 657.4946 264.8359 655.1602 Y
269.8662 662.3901 276.9648 666.8193 V
256.4434 666.5039 239.9038 649.7808 239.9038 629.1851 c
239.9038 608.3926 256.7603 591.5356 277.5532 591.5356 c
293.4028 591.5356 306.9658 601.3311 312.5156 615.1992 C
322.0225 632.9629 328.75 638.5454 349.0576 641.4014 C
339.7178 642.7354 334.3252 644.627 323.041 643.7354 c
f
0 D
0 g
273.1753 643.9858 m
275.3955 643.9858 277.1929 640.4395 277.1929 636.0635 c
277.1929 631.6885 275.3955 628.1426 273.1753 628.1426 c
270.9575 628.1426 269.1572 631.6885 269.1572 636.0635 c
269.1572 640.4395 270.9575 643.9858 273.1753 643.9858 c
f
260.1665 635.314 m
261.7788 635.314 263.0845 632.7383 263.0845 629.5605 c
263.0845 626.3823 261.7788 623.8066 260.1665 623.8066 c
258.5542 623.8066 257.249 626.3823 257.249 629.5605 c
257.249 632.7383 258.5542 635.314 260.1665 635.314 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 43) 258.0112 646.5708 -12.5052 131.7076 1 0 0 1 0 0 Bg
128.583 -28.5184 -28.5184 -128.583 258.0112 646.5708 Bm
f
0 BB
U
*U
U
u
1 XR
96.8687 680.2236 m
106.4634 680.2236 114.999 675.6577 120.4912 668.5781 c
120.7554 668.2471 121.686 666.625 121.9512 666.2944 C
118.0469 663.9785 115.3301 661.7627 112.2861 658.52 C
107.8525 663.8799 101.3682 668.1147 96.0747 668.1147 c
95.6113 668.1147 95.082 668.1147 94.6187 668.0488 C
99.251 666.5928 102.6914 662.292 102.6914 657.1309 c
102.6914 650.9106 97.5967 645.7495 91.3105 645.7495 c
85.6865 645.7495 80.9878 649.8525 80.062 655.2114 C
79.8633 654.0869 79.731 652.896 79.731 651.7046 c
79.731 649.9878 80.2373 647.5576 80.9219 646.2788 C
80.8169 646.2212 80.9482 646.3467 80.9219 646.2788 C
80.5249 646.0142 78.8711 644.8232 78.5396 644.5586 c
75.4297 642.1768 72.7832 639.1328 70.7979 635.6919 C
68.3496 639.9932 66.9604 645.0215 66.9604 650.3154 c
66.9604 666.791 80.3926 680.2236 96.8687 680.2236 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 124) 78.479 677.4785 -51.3402 35.3076 1 0 0 1 0 0 Bg
22.0565 -27.5706 -27.5706 -22.0565 78.479 677.4785 Bm
f
0 BB
127.8359 680.2236 m
122.8071 680.2236 118.043 678.9663 113.874 676.7827 C
113.3447 676.4521 112.8154 676.1875 112.3521 675.8564 C
116.521 673.3423 119.1675 670.2319 121.8804 666.3945 C
121.8828 666.3491 121.9512 666.2944 V
122.5103 666.5742 122.98 666.7852 123.4688 666.9902 C
125.2549 667.7178 126.9756 668.1147 128.6299 668.1147 c
129.0933 668.1147 129.6226 668.1147 130.0859 668.0488 C
125.3877 666.5928 122.0132 662.292 122.0132 657.1309 c
122.0132 650.9106 127.1079 645.7495 133.394 645.7495 c
138.9521 645.7495 143.6504 649.8525 144.5762 655.2114 C
144.7754 654.0869 144.9077 652.896 144.9077 651.7046 c
144.9077 646.3447 140.6064 639.9932 135.313 635.626 C
138.8857 632.5156 141.8638 629.0747 143.7168 624.9727 C
144.0469 625.1714 145.7017 626.4282 146.0322 626.6929 c
153.1123 632.1187 157.6777 640.7207 157.6777 650.3154 c
157.6777 666.791 144.2461 680.2236 127.8359 680.2236 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 127) 157.5142 677.7847 -136.0809 34.4475 1 0 0 1 0 0 Bg
-24.8132 -23.8942 -23.8942 24.8132 157.5142 677.7847 Bm
f
0 BB
*u
127.8359 591.1602 m
118.2412 591.1602 109.6396 595.7261 104.2134 602.8057 c
103.9492 603.1367 103.0889 604.5928 102.8242 604.9893 C
106.728 607.2393 109.3745 609.6211 112.4185 612.8638 C
116.8516 607.5039 123.3364 603.269 128.6299 603.269 c
129.0933 603.269 129.6226 603.269 130.0859 603.335 C
125.3877 604.7251 122.0132 609.0918 122.0132 614.2529 c
122.0132 620.4731 127.1079 625.6343 133.394 625.6343 c
138.9521 625.6343 143.6504 621.5317 144.5762 616.1724 C
144.7754 617.2969 144.9077 618.4219 144.9077 619.6792 c
144.9077 621.333 144.5098 623.186 143.7168 624.9727 C
144.1797 625.3032 145.7017 626.4282 146.0322 626.6929 c
149.2085 629.1411 151.855 632.1851 153.8403 635.6919 C
156.2886 631.3247 157.6777 626.3623 157.6777 621.0024 c
157.6777 604.5928 144.2461 591.1602 127.8359 591.1602 c
127.8359 591.1602 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 44) 141.5 596.5 115.0171 55.1765 1 0 0 1 0 0 Bg
-23.3335 49.9999 49.9999 23.3335 141.5 596.5 Bm
f
0 BB
*U
*u
1 D
96.8022 591.0278 m
102.4927 591.0278 107.8525 592.6157 112.4185 595.4609 C
109.2422 597.3799 106.4634 599.8945 104.2134 602.8057 c
103.9492 603.1367 103.0889 604.5928 102.8242 604.9893 C
103.0225 605.1216 103.2207 605.188 103.4194 605.3203 C
100.9053 603.9307 98.3247 603.1367 96.0088 603.1367 c
95.5454 603.1367 95.0161 603.1367 94.5527 603.2026 C
99.1846 604.5928 102.625 608.96 102.625 614.1206 c
102.625 620.3408 97.5303 625.502 91.2441 625.502 c
85.6201 625.502 80.9219 621.3994 79.9956 616.04 C
79.7969 617.1646 79.6646 618.2896 79.6646 619.5469 c
79.6646 624.8398 83.9658 631.2583 89.3257 635.626 C
85.6865 638.7358 82.7085 642.1768 80.9219 646.2788 C
80.5249 646.0142 78.8711 644.8232 78.5396 644.5586 c
71.46 639.0664 66.894 630.5303 66.894 620.8701 c
66.894 604.46 80.3267 591.0278 96.8022 591.0278 c
96.8022 591.0278 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 57) 76.0283 596.605 50.9803 45.738 1 0 0 1 0 0 Bg
28.7961 35.5352 35.5352 -28.7961 76.0283 596.605 Bm
f
0 BB
*U
U
u
*u
0 D
0 g
109.626 253.0557 m
121.7344 245.4766 l
121.7344 231.0195 l
109.626 238.6006 l
97.5518 231.0195 l
97.5518 245.4766 l
109.626 253.0557 l
f
1 D
109.626 226.9619 m
123.4111 218.4756 l
133.2388 223.9766 l
133.2388 251.916 l
109.626 265.7334 l
86.0142 251.916 l
86.0142 223.9766 l
95.8418 218.4756 l
109.626 226.9619 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 111) 114.8882 -127.6748 90 46.6944 -1 0 0 -1 16013.5146 17086.9414 Bg
0.000002 -46.6944 -46.6944 -0.000002 109.6265 265.7334 Bm
f
0 BB
*U
*u
0 D
0 g
145.9419 189.4063 m
133.3315 182.7324 l
120.8208 189.9424 l
133.3979 196.6514 l
132.9287 210.9043 l
145.439 203.6611 l
145.9419 189.4063 l
f
1 D
123.3701 202.4531 m
109.1157 194.7725 l
108.9478 183.502 l
133.1299 169.5508 l
156.9092 183.0664 l
156.7422 210.4346 l
132.5596 224.4219 l
122.8999 218.6201 l
123.3701 202.4531 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 44) 67.605 -45.0078 -26.2573 38.9123 -1 0 0 -1 16013.5146 17086.9414 Bg
-34.8972 17.2149 17.2149 34.8972 156.9097 183.0664 Bm
f
0 BB
*U
*u
0 g
72.5728 189.165 m
85.1831 182.4912 l
97.6938 189.7012 l
85.1167 196.4102 l
85.5859 210.6631 l
73.0757 203.4199 l
72.5728 189.165 l
f
0 D
95.1445 202.2119 m
109.3989 194.5313 l
109.5669 183.2607 l
85.3848 169.3096 l
61.6055 182.8252 l
61.7725 210.1934 l
85.9551 224.1807 l
95.6147 218.3789 l
95.1445 202.2119 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 124) 162.9097 -44.7666 -145.2532 42.4859 -1 0 0 -1 16013.5146 17086.9414 Bg
34.9098 24.2149 24.2149 -34.9098 61.605 182.8252 Bm
f
0 BB
*U
U
u
0 0.741176 1 0 1 0.4 0 Xa
490.2383 263.1826 m
504.9189 263.1826 518.2344 256.0127 526.4277 245.0889 c
481.7041 249.5264 l
487.166 263.1826 l
488.1904 263.1826 489.2148 263.1826 490.2383 263.1826 c
490.2383 263.1826 l
f
0.286274 1 0.062745 0 0.717647 0.086275 0.521569 Xa
527.7939 243.04 m
532.5732 235.8701 535.3047 227.335 535.3047 217.7754 c
535.3047 211.6299 533.9395 205.4844 531.5488 200.0225 c
513.1133 240.9912 l
527.7939 243.04 l
f
0.858823 0.6 0.176471 0.019608 0.2 0.4 0.6 Xa
530.8672 197.9736 m
524.0381 184.3174 510.7236 174.7588 495.3604 173.0508 c
521.6484 209.582 l
530.8672 197.9736 l
f
0.694118 0.141176 0 0 0 0.682353 0.937255 (New Color Swatch 2) 0 1 Xk
492.9707 172.71 m
491.9453 172.71 490.9219 172.71 490.2383 172.71 c
475.2168 172.71 461.9023 179.8799 453.708 190.8037 c
498.4326 186.3662 l
492.9707 172.71 l
f
0.415686 0 1 0 0.631373 0.866667 0.054902 (New Color Swatch 1) 0 1 Xx
452.3428 192.8525 m
447.5625 200.0225 444.8311 208.5576 444.8311 217.7754 c
444.8311 224.2627 446.1973 230.4082 448.5859 235.8701 c
467.0234 194.9014 l
452.3428 192.8525 l
f
0.027451 0.168627 0.968627 0 0.976471 0.807843 0.098039 Xa
449.2695 237.9189 m
456.0977 251.5752 469.4121 261.1338 484.7764 262.8418 c
458.4873 226.3105 l
449.2695 237.9189 l
f
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
