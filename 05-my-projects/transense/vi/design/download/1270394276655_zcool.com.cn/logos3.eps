%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 13.0.0
%%For: (\702\753\740\744\750\754\750\760) ()
%%Title: (DESIGN_ELEMENTS_6.eps)
%%CreationDate: 2/3/2009 2:49 AM
%%BoundingBox: -1 123 595 719
%%HiResBoundingBox: -0.499512 123.5 594.5 718.4995
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%RGBCustomColor: 0.631373 0.866667 0.054902 (New Color Swatch 1)
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%RGBProcessColor: 0.556863 0.847059 0.972549 (New Color Swatch)
%%+ 0.137255 0.121569 0.12549 (New Color Swatch 12)
%%+ 0 0.682353 0.937255 (New Color Swatch 2)
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 297 421 297 421
%AI3_TileBox: -9 25 603 817
%AI3_DocumentPreview: Header
%AI5_ArtSize: 595 595
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 5
%AI8_OpenToView: -384.5 742.5 1 1405 784 26 1 0 0 82 0 0
%AI5_OpenViewLayers: 77777
%%PageOrigin:0 -123
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI5_End_NonPrinting--
6 Bn
%AI5_BeginGradient: (Unnamed gradient 12)
(Unnamed gradient 12) 1 3 Bd
[
<
4A4B4C4D4E4F5050515253545556575758595A5B5C5D5E5F5F606162636465666769696A6B6C6D6E
6F6F7071717273747576777879797A7B7C7D7E7F7F8182828384858586878889898A8B8C8C8D8E8E
8F9091919292939495959697979899999A9B9B9C9D9D9E9F9FA0A0A1A1A2A3A3A4A5A5A6A7A8A8A9
AA
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
01000001010201020201020203020203030403040403040405040405050505060605070608070708
080A090A0A0A0B0B0C0C0B0D0C0E0E0F0E0E100F111111121213131414141515161616181819191B
1B
>
<
04040304040405040403040404040404030305040404040303050404040404030504040404040305
04040404040305040404040403050504040404030304040403030303040303020203020302020201
02010201010201010002020101010100010201010000010101000100000000000000000000000000
00
>
0
<
ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988878685
84838281807F7E7D7C7B7A797877767574737271706E6D6C6B6A696867666564636261605F5E5D5C
5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534
33
>
<
E5E5E4E4E3E3E3E2E2E1E1E0E0E0DFDFDEDEDEDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D6D6D6D5D5
D4D4D4D3D3D2D2D1D1D1D0D0CFCFCFCECECDCDCCCCCCCBCBCACACAC9C9C8C8C7C7C7C6C6C5C5C5C4
C4C3C3C2C2C2C1C1C0C0C0BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B8B8B8B7B7B6B6B6B5B5B4B4B3
B3
>
<
F9F9F9F9F8F8F8F8F8F8F8F7F7F7F7F7F7F7F6F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4F4F4F4F4F3
F3F3F3F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0EFEFEFEFEFEFEFEEEEEEEEEE
EEEEEDEDEDEDEDEDEDECECECECECECECEBEBEBEBEBEBEBEAEAEAEAEAEAEAE9E9E9E9E9E9E9E8E8E8
E8
>
4 %_Br
<
AAABABACACADAEAFAFB0B0B1B1B2B3B3B4B4B5B5B6B7B8B8B9BABABBBCBCBDBEBEBFC0C0C1C1C2C2
C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCECECFD0D0D1D1D2D3D3D4D4D5D6D6D7D7D8D9D9DADBDB
>
<
1B1C1E1F2122232526282A2B2D2E303133353638393B3C3E3F4143444647494B4C4E4F5153545656
57595B5C5E6061636567686A6C6E6F7173747678797B7D7F8182848687898B8D8E909293959799
>
<
00000000000001010202020303030404040505060606070708080809090A0B0B0C0D0D0E0F0F1012
1415161617171819191A1B1B1C1C1D1E1F1F202021222223242425252627272829292A2B2B2C2D
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000101010101010101010102020202020202030303040404040505
>
0.2
<
B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8D
8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766
>
<
E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1
BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99
>
4 %_Br
[
0.290196 0 0.015686 0 0.67451 0.898039 0.976471 2 50 0 %_BS
%_0.290196 0 0.015686 0 0.67451 0.898039 0.976471 2 50 0 Bs
0.666667 0.105882 0 0 0.2 0.701961 0.909804 2 50 42.6316 %_BS
%_0.666667 0.105882 0 0 0.2 0.701961 0.909804 2 50 42.6316 Bs
0.858823 0.6 0.176471 0.019608 0.2 0.4 0.6 2 50 98.4211 %_BS
%_0.858823 0.6 0.176471 0.019608 0.2 0.4 0.6 2 50 98.4211 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 127)
(Unnamed gradient 127) 1 2 Bd
[
<
04040404040404040404040505050505050505050505050505050606060606060607070707070606
06070606060606060606060606060706060606060707070707070707070707060707060708080707
07070707070707070707070707070606060707080807070707070707070707070707070707070808
070708080707070707
>
<
00000000000101010101010102020203030303040403050504060606070707070807070909090A0A
0A0A0B0B0B0C0C0C0D0D0D0F0F0F0E0F0F0F11101012121211131313141414151515171616161717
171919191A1A1A1B1B1B1B1D1D1D1E1E1E1F1F1F1F20202022222223232325252525262626272727
282828282A29292B2B
>
<
7D7E80818284858788898B8C8E8F9091929394959798999B9C9D9FA0A1A2A3A4A5A7A8A8A9ABABAC
AEAFB0B1B3B3B4B5B6B7B8B9B9BABBBCBEBFC0C1C2C3C4C5C6C7C7C8C9CACBCCCDCECFD0D0D1D2D3
D4D4D5D6D7D7D8D9DADBDBDCDDDEDFDFE0E1E2E3E3E4E5E6E6E7E8E9EAEBEBECEDEEEEEFF0F0F2F2
F3F3F4F5F5F6F6F7F7
>
0
<
FFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFB
FBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9
F9F9F9F9F9F9F9F9F9
>
<
F5F5F4F4F4F3F3F3F3F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEEEDEDEDECECECECEBEBEBEAEAEAE9E9
E9E9E8E8E8E7E7E7E6E6E6E5E5E5E5E4E4E4E3E3E3E2E2E2E2E1E1E1E0E0E0DFDFDFDEDEDEDEDDDD
DDDCDCDCDBDBDBDADADADAD9D9D9D8D8D8D7D7D7D7D6D6D6D5D5D5D4D4D4D3D3D3D3D2D2D2D1D1D1
D0D0D0D0CFCFCFCECE
>
<
999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978777675747372
71706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A
494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928272625242322
21201F1E1D1C1B1A19
>
4 %_Br
[
0.015686 0 0.490196 0 1 0.960784 0.6 2 50 0 %_BS
%_0.015686 0 0.490196 0 1 0.960784 0.6 2 50 0 Bs
0.027451 0.168627 0.968627 0 0.976471 0.807843 0.098039 2 50 100 %_BS
%_0.027451 0.168627 0.968627 0 0.976471 0.807843 0.098039 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 13)
(Unnamed gradient 13) 1 3 Bd
[
<
302F2E2D2C2B2A29272625242321201F1E1D1C1B1A191817161514131211100F0D0C0B0A090908
>
<
252423222120201F1E1D1C1B1B1A19181716151413121110100F0E0D0D0C0B0A0A090807060605
>
<
26252423222121201F1E1D1C1C1B1A19181717151413121211100F0E0D0C0B0B0A090807060605
>
0
<
CDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4
>
<
CDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4
>
<
CDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4
>
4 %_Br
<
0807060505030201000000
>
<
0504040303020100000000
>
<
0504040303020100000000
>
0
<
F4F5F6F7F8FAFBFCFDFEFF
>
<
F4F5F6F7F8FAFBFCFDFEFF
>
<
F4F5F6F7F8FAFBFCFDFEFF
>
4 %_Br
[
0.188235 0.145098 0.14902 0 0.803922 0.803922 0.803922 2 50 0 %_BS
%_0.188235 0.145098 0.14902 0 0.803922 0.803922 0.803922 2 50 0 Bs
0.031373 0.019608 0.019608 0 0.956863 0.956863 0.956863 2 50 74.1758 %_BS
%_0.031373 0.019608 0.019608 0 0.956863 0.956863 0.956863 2 50 74.1758 Bs
0 0 0 0 1 1 1 2 50 95.6044 %_BS
%_0 0 0 0 1 1 1 2 50 95.6044 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 34)
(Unnamed gradient 34) 1 2 Bd
[
<
1718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F3031323334343536373838393A3B3C
3C3D3E3F40414243434545464748494A4B4C4D4E4E4F5051525353545556575859595A5B5C5D5D5E
5F60616162636465666768696A6B6B6C6D6E6F70707172737374757676777879797A7B7C7D7E7E7F
80818182838484858686878788
>
0
<
05050404050504050504050505050505050505050505050606060605050606050606050606060606
06060606060505060605050505050506050606050506060505060606060706060606060606050606
06050606050506060505060505050605050505050505050505050405050404050605050504050505
04040404040404030304040303
>
0
<
E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBD
BCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979695
94939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D
6C6B6A69686766656463626160
>
<
F3F3F2F2F2F2F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECEBEBEBEBEAEAEAE9E9E9E9E8E8
E8E8E7E7E7E6E6E6E6E5E5E5E4E4E4E4E3E3E3E2E2E2E2E1E1E1E1E0E0E0DFDFDFDFDEDEDEDDDDDD
DDDCDCDCDBDBDBDBDADADAD9D9D9D9D8D8D8D8D7D7D7D6D6D6D6D5D5D5D4D4D4D4D3D3D3D2D2D2D2
D1D1D1D1D0D0D0CFCFCFCFCECE
>
<
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6
F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5
F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F4F4F4F4F4F4F4
>
4 %_Br
[
0.090196 0 0.019608 0 0.894118 0.952941 0.968627 2 50 0 %_BS
%_0.090196 0 0.019608 0 0.894118 0.952941 0.968627 2 50 0 Bs
0.533333 0 0.011765 0 0.376471 0.807843 0.956863 2 50 100 %_BS
%_0.533333 0 0.011765 0 0.376471 0.807843 0.956863 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 4)
(Unnamed gradient 4) 1 2 Bd
[
<
28292A2B2C2D2E2F3031323334353637383A3B3C3D3D3E3F4041424344454647494A4B4C4D4E4F50
5152535455565758595A5C5D5E5F6061626364666767696A6B6B6C6E6F707172737475767778797A
7B7C7D7E7F8081818283848586878788898A8B8C8D8E8F8F919192939495969798999A9A9C9C9D9E
9FA0A1A1A2A3A4A4A5A6
>
0
<
68696B6C6D6F70717374757678797A7C7D7F80828384848687888A8B8D8E909193949697999A9C9D
9EA0A1A2A3A5A6A8A9AAACADAFB0B2B3B5B6B7B9BABBBDBEBFBFC1C2C3C5C6C7C8CACBCCCECFD0D1
D3D4D5D6D7D8DADBDCDDDEDFE0E2E3E4E5E6E7E8EAEBEDEEF0F2F4F6F6F8FAFBFDFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFF
>
0
<
DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4
B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C
8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564
636261605F5E5D5C5B5A
>
<
EFEFEEEEEEEDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E3E2E2
E2E1E1E1E0E0E0DFDFDFDEDEDEDDDDDDDCDCDCDBDBDBDADADAD9D9D9D8D8D8D7D7D7D6D6D6D5D5D5
D4D4D4D3D3D3D2D2D2D1D1D1D0D0D0CFCFCFCECECECDCDCDCCCCCCCBCBCBCACACAC9C9C9C8C8C8C7
C7C7C6C6C6C5C5C5C4C4
>
<
ACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989797969594939291908F8E8D8C8B8A89888786
8584838281807F7E7D7C7B7A797877767574737271706F6E6D6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746454443434241403F3E3D3C3B3A3938
37363534333231302F2E
>
4 %_Br
[
0.156863 0 0.407843 0 0.858824 0.937255 0.67451 2 50 0 %_BS
%_0.156863 0 0.407843 0 0.858824 0.937255 0.67451 2 50 0 Bs
0.65098 0 1 0 0.352941 0.768627 0.180392 2 50 100 %_BS
%_0.65098 0 1 0 0.352941 0.768627 0.180392 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 6)
(Unnamed gradient 6) 1 2 Bd
[
0
<
58595A5C5D5E5F60626364656768696A6C6D6F70717274757678797A7C7D7E80818384858788898B
8C8E8F909193949697999A9C9D9EA0A1A2A3A5A6A8A9AAACADAEAFB1B2B3B4B5B6B7B8BABBBCBDBE
C0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E4E5E6E7
E7E8E9E9EAEBECECED
>
<
81828384858485868788898A8B8D8C8E8F8F909192949594959697999A9B9C9E9D9E9FA0A1A3A4A5
A6A7A7A8A9ABACADAFB0B2B2B3B5B6B7B8B9BABBBBBCBEBFC0C1C2C4C5C5C6C8C9CBCCCECFD1D1D2
D4D5D6D8D9DBDDDDDEDFE1E2E3E6E7E8E8EAEBECEEF1F2F4F6F7F8FAFBFEFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFF
>
0
<
FFFFFFFFFFFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFAFAFA
FAFAFAFAFAF9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F5F5F5
F5F5F5F5F5F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F0F0F0
F0F0F0F0F0EFEFEFEF
>
<
B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E
8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766
6564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E
3D3C3B3A3938373635
>
<
838281807F7F7E7D7C7B7A79787777767574737271706F6F6E6D6C6B6A6968676766656463626160
5F5E5E5D5C5B5A59585756565554535251504F4E4E4D4C4B4A49484746464544434241403F3E3E3D
3C3B3A39383736363534333231302F2E2E2D2C2B2A29282726252524232221201F1E1D1D1C1B1A19
181716151514131211
>
4 %_Br
[
0 0.345098 0.505882 0 1 0.709804 0.513726 2 50 0 %_BS
%_0 0.345098 0.505882 0 1 0.709804 0.513726 2 50 0 Bs
0 0.929412 1 0 0.937255 0.207843 0.066667 2 50 98.9011 %_BS
%_0 0.929412 1 0 0.937255 0.207843 0.066667 2 50 98.9011 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
1 Bn
%AI5_BeginGradient: (New Gradient Swatch 1)
(New Gradient Swatch 1) 1 3 Bd
[
<
04040404040404040403030303030303030303040403030303030303030303030303030302020202
01010101010101000000000101010102020202020202020101010101010100000000
>
<
53545657585A5B5B5C5E5F616263656667696A696B6C6D6F7071737476777878797B7C7D7F808183
8486878788898B8C8E8F90929395969698999B9C9D9FA0A1A3A4A5A5A7A8AAABACAD
>
<
3233343536363739393A3B3C3C3D3E3F404041434445464748494A4B4D4E4F50525354545558595A
5B5C5D5F6061626364656668696B6C6E6F717273757678797A7B7C7F808182848586
>
0
<
F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3
F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2
>
<
B8B7B6B5B4B3B2B2B1B0AFAEADACABAAA9A8A7A7A6A5A4A3A2A1A09F9E9D9C9C9B9A999897969594
93929191908F8E8D8C8B8A89888786868584838281807F7E7D7C7B7B7A7978777675
>
<
B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979695949392918F8E8D
8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B
>
4 %_Br
<
00000001010101020202020303030303040404040505050506060505060606050507060606070707
070909090808090909090A0A0A0A0B0B0A0A0B0B0B0B0B0C0D0D0D0E0E0E0E0F0F0F0F0F10101010
1111111112121212131313
>
<
ADAFB0B1B1B3B4B5B6B7B8B8B9BABBBCBDBEBEBFC0C2C3C4C5C5C6C7C8C9CACCCCCDCECFD0D1D2D2
D3D4D5D6D7D7D8D9DADBDCDDDDDEDFE0E1E2E3E3E4E5E6E7E8E8E8E9EAEAEBECECECEDEDEEEFEFF0
F0F1F2F2F3F4F5F4F5F6F6
>
<
8687888A8C8E8F9192949698999B9D9EA0A1A3A4A6A8A9ABADAFB0B2B4B5B7B8BABCBDBFC0C2C4C5
C7C9CACCCDCFD3D4D6D7DADBDDDFE1E2E4E6E8EAEBEDEFF1F3F5F7FAFCFEFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00010101010101010101010101010101010101010101010101010101010101010101010102020102
0202020202020202020202
>
<
F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEFEEEEEEEEEDEDEDEDECECECECEBEBEBEBEBEAEAEAEAE9E9E9
E9E8E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1E1E1E0E0E0E0
DFDFDFDFDEDEDEDEDDDDDD
>
<
757473727271706F6E6D6C6C6B6A6968676666656463626160605F5E5D5C5B5A5A59585756555454
535251504F4F4E4D4C4B4A4949484746454443434241403F3E3D3D3C3B3A39383737363534333231
31302F2E2D2C2B2B2A2928
>
<
6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544
434241403F3E3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B
1A19181716151413121110
>
4 %_Br
[
0.015686 0.32549 0.196078 0 0.956863 0.721569 0.709804 2 50 3.2967 %_BS
%_0.015686 0.32549 0.196078 0 0.956863 0.721569 0.709804 2 50 3.2967 Bs
0 0.678431 0.52549 0 0.94902 0.458824 0.419608 2 50 43.4066 %_BS
%_0 0.678431 0.52549 0 0.94902 0.458824 0.419608 2 50 43.4066 Bs
0.07451 0.964706 1 0.007843 0.866667 0.156863 0.062745 2 50 100 %_BS
%_0.07451 0.964706 1 0.007843 0.866667 0.156863 0.062745 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed Brush Pat)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7894.5 8548.5 m
-7894.5 8612.5 L
-7680.5 8612.5 L
-7680.5 8548.5 L
-7894.5 8548.5 L
n
1 Ap
0 O
0.156863 0 0.407843 0 0.858824 0.937255 0.67451 Xa
-7712.5 8612.5 m
-7730.1729 8612.5 -7820.5 8598.1738 -7894.5 8580.5 C
-7819.5 8562.8271 -7730.1729 8548.5 -7712.5 8548.5 c
-7694.8271 8548.5 -7680.5 8562.8271 -7680.5 8580.5 c
-7680.5 8598.1738 -7694.8271 8612.5 -7712.5 8612.5 c
f
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 50 pt. Flat/ Adobe Calligraphi) -
(c Brush Tool/ 30 pt. Flat/ Adobe Calligraphic Brush Tool/ 30 p) -
(t. Oval/ Adobe ArtOnPath Brush Tool/ Art Brush 1/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(30 pt. Flat)
(1 30 30 10 10 60 60 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(30 pt. Oval)
(1 30 30 10 60 0 0 1 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(50 pt. Flat)
(1 50 50 4 6 -147 25 0 1 1 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Art Brush 1)
(1 / Unnamed Brush Pat/ / / / / 5 0.858824 0.937255 0.67451 /  ) -
(2 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
0.415686 0 1 0 0.631373 0.866667 0.054902 (New Color Swatch 1) 0 1 Xx
(New Color Swatch 1)
Pc
0.309804 0.247059 0.25098 0 0.698039 0.698039 0.698039 Xa
(R=178 G=178 B=178 1)
Pc
0.462745 0.011765 1 0 0.592157 0.780392 0.207843 Xa
(R=151 G=199 B=53 1)
Pc
0.65098 0 1 0 0.352941 0.768627 0.180392 Xa
(R=90 G=196 B=46 1)
Pc
0.113725 0.92549 1 0.027451 0.827451 0.203922 0.035294 Xa
(R=211 G=52 B=9 1)
Pc
0.309804 0.247059 0.25098 0 0.698039 0.698039 0.698039 Xa
(R=178 G=178 B=178 2)
Pc
0.764706 0.286274 0 0 0 0.584314 0.854902 Xa
(R=0 G=149 B=218 1)
Pc
0 0.741176 1 0 1 0.4 0 Xa
(\777)
Pc
(R=255 G=102 B=0 1)
Pc
0 0.345098 0.505882 0 1 0.709804 0.513726 Xa
(R=255 G=181 B=131 1)
Pc
0.533333 0 0.011765 0 0.376471 0.807843 0.956863 Xa
(R=96 G=206 B=244 1)
Pc
0.329412 0 0.035294 0 0.623529 0.898039 0.968627 Xa
(R=159 G=229 B=247 1)
Pc
0.858823 0.6 0.176471 0.019608 0.2 0.4 0.6 Xa
(R=51 G=102 B=153 1)
Pc
0.396078 0 0 0 0.556863 0.847059 0.972549 (New Color Swatch) 0 1 Xk
(New Color Swatch)
Pc
0.694118 0.141176 0 0 0 0.682353 0.937255 (New Color Swatch 2) 0 1 Xk
(New Color Swatch 2)
Pc
0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 (New Color Swatch 12) 0 1 Xk
(New Color Swatch 12)
Pc
0.05098 0.266667 0.988235 0 0.94902 0.733333 0.12549 Xa
(R=242 G=187 B=32 1)
Pc
Bb
0 0 0 0 Bh
2 (New Gradient Swatch 1) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 1)
Pc
0.015686 0 0.490196 0 1 0.960784 0.6 Xa
(R=255 G=245 B=153 1)
Pc
0.533333 0.556863 0.603922 0.286274 0.407843 0.352941 0.321569 Xa
(R=104 G=90 B=82 1)
Pc
0.352941 0.360784 0.388235 0.007843 0.666667 0.607843 0.576471 Xa
(R=170 G=155 B=147 1)
Pc
(R=170 G=155 B=147 2)
Pc
0 0.129412 0.05098 0 1 0.890196 0.890196 Xa
(R=255 G=227 B=227 1)
Pc
0.090196 0 0.019608 0 0.894118 0.952941 0.968627 Xa
(R=228 G=243 B=247 1)
Pc
0.172549 0 0.678431 0 0.858824 0.988235 0.466667 Xa
(R=219 G=252 B=119 1)
Pc
0.05098 0 0.243137 0 0.956863 1 0.8 Xa
(R=244 G=255 B=204 1)
Pc
0.25098 0.87451 0.996078 0.196078 0.627451 0.227451 0.133333 Xa
(R=160 G=58 B=34 1)
Pc
0.039216 0.12549 0.827451 0 0.968627 0.839216 0.294118 Xa
(R=247 G=214 B=75 1)
Pc
0.027451 0.168627 0.968627 0 0.976471 0.807843 0.098039 Xa
(R=249 G=206 B=25 1)
Pc
0.760784 0.164706 1 0.031373 0.266667 0.6 0.113725 Xa
(R=68 G=153 B=29 1)
Pc
0 0 0 0 1 1 1 Xa
(R=255 G=255 B=255 1)
Pc
0.156863 0 0.407843 0 0.858824 0.937255 0.67451 Xa
(R=219 G=239 B=172 1)
Pc
0.6 0 0.980392 0 0.423529 0.768627 0.262745 Xa
(R=108 G=196 B=67 1)
Pc
0.003922 0.717647 1 0 0.94902 0.419608 0.058824 Xa
(R=242 G=107 B=15 1)
Pc
0 0.929412 1 0 0.937255 0.207843 0.066667 Xa
(R=239 G=53 B=17 1)
Pc
0.290196 0 0.015686 0 0.67451 0.898039 0.976471 Xa
(R=172 G=229 B=249 1)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 4 255 255 79 0 50 Lb
(BG) Ln
0 A
0 Ap
0 O
0 0 0 0 1 1 1 Xa
0 J 0 j 1 w 4 M []0 d0 XR
594.5 718.4995 m
-0.499512 718.4995 L
-0.499512 123.5 L
594.5 123.5 l
594.5 718.4995 L
f
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 3 79 79 255 0 50 Lb
(SHD) Ln
0 A
1 Ap
0 O
0 J 0 j 1 w 4 M []0 d1 XR
178.5957 569.9414 m
178.5957 563.5684 147.0337 558.4023 108.0996 558.4023 c
69.1655 558.4023 37.6035 563.5684 37.6035 569.9414 c
37.6035 576.3145 69.1655 581.4805 108.0996 581.4805 c
147.0337 581.4805 178.5957 576.3145 178.5957 569.9414 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 108.0996 124.0781 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 108.0996 569.9414 Bm
f
0 BB
370.0869 569.9414 m
370.0869 563.5684 338.5254 558.4023 299.5908 558.4023 c
260.6567 558.4023 229.0947 563.5684 229.0947 569.9414 c
229.0947 576.3145 260.6567 581.4805 299.5908 581.4805 c
338.5254 581.4805 370.0869 576.3145 370.0869 569.9414 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 299.5908 124.0781 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 299.5908 569.9414 Bm
f
0 BB
559.0781 569.9414 m
559.0781 563.5684 527.5166 558.4023 488.582 558.4023 c
449.6484 558.4023 418.0859 563.5684 418.0859 569.9414 c
418.0859 576.3145 449.6484 581.4805 488.582 581.4805 c
527.5166 581.4805 559.0781 576.3145 559.0781 569.9414 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 488.582 124.0781 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 488.582 569.9414 Bm
f
0 BB
370.0781 569.9414 m
370.0781 563.5684 338.5166 558.4023 299.582 558.4023 c
260.6484 558.4023 229.0859 563.5684 229.0859 569.9414 c
229.0859 576.3145 260.6484 581.4805 299.582 581.4805 c
338.5166 581.4805 370.0781 576.3145 370.0781 569.9414 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 299.582 124.0781 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 299.582 569.9414 Bm
f
0 BB
178.5957 437.9478 m
178.5957 431.5747 147.0337 426.4087 108.0996 426.4087 c
69.1655 426.4087 37.6035 431.5747 37.6035 437.9478 c
37.6035 444.3208 69.1655 449.4868 108.0996 449.4868 c
147.0337 449.4868 178.5957 444.3208 178.5957 437.9478 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 108.0996 -682.2363 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 108.0996 437.9478 Bm
f
0 BB
370.0869 437.9478 m
370.0869 431.5747 338.5254 426.4087 299.5908 426.4087 c
260.6567 426.4087 229.0947 431.5747 229.0947 437.9478 c
229.0947 444.3208 260.6567 449.4868 299.5908 449.4868 c
338.5254 449.4868 370.0869 444.3208 370.0869 437.9478 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 299.5908 -682.2363 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 299.5908 437.9478 Bm
f
0 BB
559.0781 437.9478 m
559.0781 431.5747 527.5166 426.4087 488.582 426.4087 c
449.6484 426.4087 418.0859 431.5747 418.0859 437.9478 c
418.0859 444.3208 449.6484 449.4868 488.582 449.4868 c
527.5166 449.4868 559.0781 444.3208 559.0781 437.9478 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 488.582 -682.2363 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 488.582 437.9478 Bm
f
0 BB
178.5957 304.4541 m
178.5957 298.0811 147.0337 292.915 108.0996 292.915 c
69.1655 292.915 37.6035 298.0811 37.6035 304.4541 c
37.6035 310.8271 69.1655 315.9932 108.0996 315.9932 c
147.0337 315.9932 178.5957 310.8271 178.5957 304.4541 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 108.0996 -1497.7139 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 108.0996 304.4541 Bm
f
0 BB
370.0869 304.4541 m
370.0869 298.0811 338.5254 292.915 299.5908 292.915 c
260.6567 292.915 229.0947 298.0811 229.0947 304.4541 c
229.0947 310.8271 260.6567 315.9932 299.5908 315.9932 c
338.5254 315.9932 370.0869 310.8271 370.0869 304.4541 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 299.5908 -1497.7139 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 299.5908 304.4541 Bm
f
0 BB
559.0781 304.4541 m
559.0781 298.0811 527.5166 292.915 488.582 292.915 c
449.6484 292.915 418.0859 298.0811 418.0859 304.4541 c
418.0859 310.8271 449.6484 315.9932 488.582 315.9932 c
527.5166 315.9932 559.0781 310.8271 559.0781 304.4541 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 488.582 -1497.7139 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 488.582 304.4541 Bm
f
0 BB
178.5957 155.9619 m
178.5957 149.5889 147.0337 144.4229 108.0996 144.4229 c
69.1655 144.4229 37.6035 149.5889 37.6035 155.9619 c
37.6035 162.335 69.1655 167.501 108.0996 167.501 c
147.0337 167.501 178.5957 162.335 178.5957 155.9619 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 108.0996 -2404.8135 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 108.0996 155.9619 Bm
f
0 BB
368.5957 155.9619 m
368.5957 149.5889 337.0332 144.4229 298.0996 144.4229 c
259.1655 144.4229 227.6035 149.5889 227.6035 155.9619 c
227.6035 162.335 259.1655 167.501 298.0996 167.501 c
337.0332 167.501 368.5957 162.335 368.5957 155.9619 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 298.0996 -2404.8135 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 298.0996 155.9619 Bm
f
0 BB
559.0781 155.9619 m
559.0781 149.5889 527.5166 144.4229 488.582 144.4229 c
449.6484 144.4229 418.0859 149.5889 418.0859 155.9619 c
418.0859 162.335 449.6484 167.501 488.582 167.501 c
527.5166 167.501 559.0781 162.335 559.0781 155.9619 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 13) 488.582 -2404.8135 0 70.4927 1 0 0 0.1637 0 6653.0039 Bg
70.4927 0 0 -11.5397 488.582 155.9619 Bm
f
0 BB
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(LOGO) Ln
0 A
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 5 255 79 255 0 50 Lb
(Layer 7) Ln
0 A
u
*u
0 Ap
1 D
0 O
0 J 0 j 1 w 4 M []0 d1 XR
0 g
276.2656 521.563 m
283.6738 521.563 289.6997 527.5874 289.6997 534.9937 c
289.6997 542.2769 283.6738 548.3022 276.2656 548.3022 c
268.8594 548.3022 262.834 542.2769 262.834 534.9937 c
262.834 527.5874 268.8594 521.563 276.2656 521.563 c
f
246.4937 525.2036 m
246.3667 525.2036 L
246.3667 498.9644 L
246.4937 498.9644 L
255.4077 498.9644 262.688 491.6831 262.688 482.771 C
262.688 476.1187 L
262.688 454.3687 275.0137 451.4917 289.8042 451.3911 C
289.8042 482.0171 L
289.8042 505.7446 270.3452 525.2036 246.4937 525.2036 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 127) 302.6631 561.541 -90 97.6367 1 0 0 1 0 0 Bg
-0.000004 -97.6367 -97.6367 0.000004 302.6631 561.541 Bm
f
0 BB
*U
*u
0 g
343.4941 534.9937 m
343.4941 542.2769 337.4688 548.3022 330.0625 548.3022 c
322.6543 548.3022 316.6289 542.2769 316.6289 534.9937 c
316.6289 527.5874 322.6543 521.563 330.0625 521.563 c
337.4688 521.563 343.4941 527.5874 343.4941 534.9937 c
f
316.6289 482.0171 m
316.6289 451.3911 L
331.4189 451.4917 343.7451 454.3687 343.7451 476.1187 C
343.7451 482.771 L
343.7451 491.6831 351.0254 498.9644 359.9395 498.9644 C
360.0664 498.9644 L
360.0664 525.2036 L
359.9395 525.2036 L
336.0879 525.2036 316.6289 505.7446 316.6289 482.0171 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 12) 325.0273 555.1665 -105.9845 133.148 -1 0 0 1 16432.8613 0 Bg
36.6659 -128 128 36.6659 318.834 555.1665 Bm
f
0 BB
*U
*u
0 g
303.083 521.563 m
310.4893 521.563 316.5156 527.5874 316.5156 534.9937 c
316.5156 542.2769 310.4893 548.3022 303.083 548.3022 c
295.6748 548.3022 289.7744 542.2769 289.7744 534.9937 c
289.7744 527.5874 295.6748 521.563 303.083 521.563 c
303.083 521.563 l
f
0 D
273.5811 525.2036 m
285.0049 525.2036 295.5498 520.6831 303.208 513.4019 C
310.9912 520.6831 321.5361 525.2036 332.96 525.2036 c
332.96 525.2036 l
333.0869 525.2036 L
333.0869 498.9644 L
332.96 498.9644 l
332.96 498.9644 l
324.0469 498.9644 316.7656 491.6831 316.7656 482.771 c
316.7656 451.3862 L
316.7656 451.3862 L
289.7744 451.3862 L
289.7744 451.3862 L
289.7744 482.771 l
289.7744 491.6831 282.4932 498.9644 273.5811 498.9644 c
273.5811 498.9644 l
273.4541 498.9644 273.4541 498.9644 Y
273.4541 525.2036 L
273.4541 525.2036 273.5811 525.2036 v
273.5811 525.2036 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 302.5098 561.542 -90 97.6414 1 0 0 1 0 0 Bg
-0.000004 -97.6414 -97.6414 0.000004 302.5098 561.542 Bm
f
0 BB
*U
U
u
336.416 262.3477 m
336.416 241.8047 L
336.416 220.6318 L
318.0762 210.085 L
299.7383 199.499 L
299.7383 242.4746 L
336.416 262.3477 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 304.6172 270.5 -90 54 1 0 0 1 0 0 Bg
-0.000002 -54 -54 0.000002 304.6172 270.5 Bm
f
0 BB
299.6807 199.4746 m
317.7529 209.9092 L
336.3818 220.6641 L
354.9766 209.8867 L
373.6074 199.1289 L
335.7959 177.2988 L
299.6807 199.4746 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 374.4863 173.417 145.4516 193.3419 1 0 0 1 0 0 Bg
-159.2455 109.6446 109.6446 159.2455 374.4863 173.417 Bm
f
0 BB
/BBAccumRotation (2.094395) XT
263.1865 262.3477 m
263.1865 241.8047 L
263.1865 220.6318 L
281.5264 210.085 L
299.8643 199.499 L
299.8643 242.4746 L
263.1865 262.3477 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 12) 285.2813 266.1025 -100.8403 62.47 1 0 0 1 0 0 Bg
-11.7489 -61.3552 -61.3552 11.7489 285.2813 266.1025 Bm
f
0 BB
299.9219 199.4746 m
281.8496 209.9092 L
263.2207 220.6641 L
244.626 209.8867 L
225.9951 199.1289 L
263.8066 177.2988 L
299.9219 199.4746 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 34) 241.7666 173.8516 39.5031 73.878 1 0 0 1 0 0 Bg
57.0035 46.9953 46.9953 -57.0035 241.7666 173.8516 Bm
f
0 BB
/BBAccumRotation (2.094395) XT
U
*u
0 g
237.3125 350.7676 m
242.9277 344.2158 259.1279 329.3838 271.0801 323.2637 C
286.416 323.2637 L
266.3281 331.4004 246.7441 346.6641 237.3125 359.6963 C
237.3125 350.7676 L
237.3125 350.7676 L
f
0 g
250.5605 401.3125 m
354.6719 401.3125 l
361.8721 401.3125 367.7041 393.8965 367.7041 384.8965 c
367.7041 349.6875 L
356.2559 360.7754 339.7676 371.2881 323.8555 379.0645 C
321.624 380.6484 L
332.8105 383.6445 L
318.3838 382.4482 L
305.8555 387.9199 L
315.5039 381.0078 L
310.3477 372.125 L
318.8164 379.1357 L
321.7676 377.8398 L
342.3594 365.8877 370.0078 344.5762 364.9678 331.1836 C
355.8965 316.3516 319.5361 327.4395 307.1523 331.6162 c
265.8242 345.6563 231.3359 375.8242 240.4805 395.1914 C
242.8555 398.9355 246.4561 401.3125 250.5605 401.3125 c
250.5605 401.3125 l
f
260.9277 323.2637 m
250.5605 323.2637 l
243.3594 323.2637 237.5273 330.6797 237.5273 339.6797 c
237.5273 343.3516 L
244.2959 336.6563 252.2158 329.96 260.9277 323.2637 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 12) 306.5 404.5 -45 124.4508 1 0 0 1 0 0 Bg
88 -88 -88 -88 306.5 404.5 Bm
f
0 BB
*U
u
*u
0 g
441.8662 238.4707 m
459.4678 236.1553 461.1689 228.4336 464.1006 210.3672 c
466.2617 196.7793 475.8379 188.75 488.1904 186.7412 C
492.5127 185.3525 492.5127 182.2637 492.668 179.0215 c
492.668 176.0869 491.2773 172.8447 487.2637 172.2275 C
460.5488 173.3086 439.085 195.3887 439.085 222.4121 c
439.085 227.9717 440.167 233.374 441.8662 238.4707 C
441.8662 238.4707 L
f
536.6748 205.7344 m
531.1152 189.9854 517.8379 177.6309 501.3135 173.6182 C
498.5361 173.7715 497.7627 176.2422 497.7627 179.0215 c
497.7627 179.0215 L
497.7627 179.1768 497.7627 179.1768 y
497.6074 183.1914 497.1455 185.5059 501.7783 186.5889 C
513.2051 188.2871 526.3291 195.3887 536.6748 205.7344 C
536.6748 205.7344 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 4) 480.5693 244.3457 -90 82.0008 1 0 0 1 0 0 Bg
-0.000004 -82.0008 -82.0008 0.000004 480.5693 244.3457 Bm
f
0 BB
*U
*u
1 D
0 g
471.5693 250.3486 m
467.3848 250.3486 464.0127 247.2109 464.1279 243.2578 c
464.1279 239.4209 467.7334 236.167 471.918 236.167 c
476.1035 236.167 479.4746 239.4209 479.3594 243.2578 c
479.2432 247.2109 475.7568 250.3486 471.5693 250.3486 c
f
0 D
538.8359 213.457 m
521.2354 216.2334 511.9697 229.6699 504.4023 246.3477 c
498.7373 259.0264 484.5869 263.4307 470.3096 259.9258 C
460.0723 257.4141 451.6328 251.7822 444.2783 244.4277 C
452.4648 261.083 469.5557 272.5957 489.4258 272.5957 c
517.0654 272.5957 539.6094 250.0518 539.6094 222.4121 c
539.6094 219.3232 539.3008 216.3887 538.8359 213.457 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 12) 489.5684 210.8447 79.4608 87.4776 1 0 0 1 0 0 Bg
16.0004 86.0019 86.0019 -16.0004 489.5684 210.8447 Bm
f
0 BB
*U
U
u
458.2031 608.2432 m
463.9072 607.9063 468.8926 603.188 469.6318 597.5747 c
470.123 591.6714 466.2305 586.4829 460.0137 586.5054 c
453.8184 586.2612 448.2285 591.7402 447.9824 597.9355 c
447.4688 604.1074 452.2324 608.5576 458.2031 608.2432 c
458.2031 608.2432 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 12) 445.7871 648.7017 -56.3785 123.0751 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0653 -95.1523 -95.1523 -78.0653 429.7871 681.5845 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
455.9473 632.1045 m
461.4043 631.479 466.0781 627.2739 466.5039 622.1758 c
467.1729 617.3672 463.4609 613.2734 457.7578 613.6104 c
452.0547 613.9458 446.7988 618.644 446.3525 624.0127 c
446.1973 629.1313 450.4902 632.7324 455.9473 632.1045 c
455.9473 632.1045 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 12) 445.7871 648.6968 -56.3785 123.0705 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0624 -95.1488 -95.1488 -78.0624 429.7881 681.5796 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
453.9824 652.4805 m
459.1699 651.8296 463.2852 647.8496 463.9102 643.5791 c
464.5352 639.3062 460.7559 636.02 455.5684 636.6689 c
450.1113 637.2954 445.4395 641.4995 445.0586 646.0615 c
444.9453 650.647 449.0391 653.4194 453.9824 652.4805 c
453.9824 652.4805 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 12) 445.7881 648.6943 -56.3785 123.0634 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0579 -95.1433 -95.1433 -78.0579 429.7891 681.5771 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
452.2168 670.4385 m
456.8906 669.4756 460.9844 665.7632 461.5625 662.0283 c
462.1465 658.2935 458.5898 655.564 453.6475 656.5054 c
448.7266 657.1768 444.0547 661.3813 444.0078 665.1602 c
443.6738 669.187 447.541 671.4019 452.2168 670.4385 c
452.2168 670.4385 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 12) 445.7891 648.6968 -56.3785 123.059 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0551 -95.1399 -95.1399 -78.0551 429.79 681.5801 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
482.3564 607.0103 m
487.2334 606.8765 492.1973 602.4258 493.2031 596.833 c
494.208 591.2427 490.8066 586.6353 485.4189 586.458 c
480.2754 586.5708 474.999 591.5356 474.2383 597.4185 c
473.501 603.0303 477.1914 607.3921 482.3564 607.0103 c
482.3564 607.0103 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 12) 445.7881 648.6953 -56.3785 123.066 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0596 -95.1453 -95.1453 -78.0596 429.7891 681.5781 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
478.5801 629.665 m
483.4766 629.2627 487.8838 625.0352 488.8223 620.249 c
489.4707 615.7104 486.5605 611.6841 481.3955 612.0649 c
476.4971 612.4673 471.5352 616.9194 470.8418 621.9961 c
470.1709 626.8047 473.9512 630.0918 478.5801 629.665 c
478.5801 629.665 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 12) 445.7881 648.6968 -56.3785 123.0677 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0606 -95.1466 -95.1466 -78.0606 429.7891 681.5796 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
475.3184 649.3916 m
479.7002 648.6743 483.8154 644.6948 484.6865 640.7139 c
485.5781 636.4639 482.582 633.5127 477.9541 633.937 c
473.0332 634.6089 468.6289 638.8369 468.002 643.1074 c
467.376 647.3789 470.6641 650.0854 475.3184 649.3916 c
475.3184 649.3916 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 12) 445.7822 648.6973 -56.3785 123.0736 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0644 -95.1512 -95.1512 -78.0644 429.7832 681.5796 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
472.2773 666.4316 m
476.6836 665.4487 480.4844 661.9819 481.332 658.2705 c
481.8926 654.8027 479.1406 652.1436 474.7578 652.8589 c
470.083 653.8203 465.9922 657.5322 465.4111 661.2686 c
464.8291 665.0039 468.1621 667.1709 472.2773 666.4316 c
472.2773 666.4316 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 12) 445.7852 648.6948 -56.3785 123.0665 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0599 -95.1457 -95.1457 -78.0599 429.7861 681.5776 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
469.6631 681.6172 m
473.5303 680.5898 477.332 677.123 477.8691 673.9253 c
478.6738 670.7485 475.8555 668.8931 471.7402 669.6318 c
467.6035 670.6367 463.5332 674.0815 462.9746 677.5479 c
462.4395 680.7471 465.5254 682.625 469.6631 681.6172 c
469.6631 681.6172 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 445.7842 648.6953 -56.3785 123.0722 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0635 -95.1501 -95.1501 -78.0635 429.7852 681.5781 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
503.5137 606.0684 m
508.1426 605.6436 512.5479 601.417 513.7773 596.3862 c
515.0293 591.0835 512.7031 586.5669 507.8486 586.4326 c
503.2422 586.5903 498.2578 591.3096 497.252 596.9004 c
495.998 602.2017 499.1738 606.248 503.5137 606.0684 c
503.5137 606.0684 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 12) 445.79 648.6992 -56.3785 123.0689 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0614 -95.1475 -95.1475 -78.0614 429.79 681.5825 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
498.752 627.5625 m
503.1357 626.8447 507.2266 623.1328 508.4121 618.6377 c
509.3281 614.1201 506.9355 610.4072 502.5967 610.5874 c
497.9668 611.0127 493.5625 615.2407 492.623 620.0249 c
491.416 624.7891 494.3906 628.0098 498.752 627.5625 c
498.752 627.5625 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 12) 445.7832 648.6982 -56.3785 123.0728 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0639 -95.1506 -95.1506 -78.0639 429.7832 681.5806 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
494.2363 646.103 m
498.3516 645.3638 502.4219 641.9185 503.2939 637.938 c
504.4316 633.9795 501.9727 631.0728 497.8809 631.542 c
493.5195 631.9897 489.1357 635.9482 488.2422 640.1987 c
487.3701 644.1802 490.3896 646.8623 494.2363 646.103 c
494.2363 646.103 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 445.7881 648.6973 -56.3785 123.0676 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0606 -95.1465 -95.1465 -78.0606 429.7891 681.5801 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
490.4375 662.5391 m
494.2822 661.7793 498.0615 658.582 498.9121 654.8672 c
499.7383 651.4229 497.502 649.0762 493.3867 649.813 c
489.541 650.5742 485.4707 654.019 484.6211 657.7324 c
483.7715 661.4448 486.5684 663.5693 490.4375 662.5391 c
490.4375 662.5391 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 445.7891 648.6968 -56.3785 123.0644 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0585 -95.1441 -95.1441 -78.0585 429.79 681.5801 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
486.7695 677.3682 m
490.6387 676.3384 494.127 673.3853 494.9326 670.2109 c
495.7363 667.0342 493.4775 664.9536 489.6328 665.7158 c
485.7617 666.7456 481.9619 670.2124 481.1572 673.3867 c
480.6201 676.5859 483.1914 678.1509 486.7695 677.3682 c
486.7695 677.3682 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 445.7891 648.6978 -56.3785 123.0643 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0585 -95.144 -95.144 -78.0585 429.79 681.5811 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
522.5225 604.9492 m
526.5938 604.748 530.707 600.7661 532.2051 595.7573 c
533.7031 590.748 531.8906 586.543 527.5762 586.4546 c
523.5039 586.6558 518.8086 591.1294 517.3105 596.1382 c
516.0605 601.4395 518.4531 605.1519 522.5225 604.9492 c
522.5225 604.9492 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 12) 445.7939 648.6938 -56.3785 123.0616 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0568 -95.1419 -95.1419 -78.0568 429.7949 681.5776 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
516.7783 625.2788 m
520.6035 624.7856 524.4258 621.0513 525.8564 616.8477 c
527.2861 612.6421 525.1621 608.9526 521.3369 609.4448 c
517.2676 609.645 512.8848 613.6045 511.7002 618.1006 c
510.5137 622.5962 512.9531 625.7705 516.7783 625.2788 c
516.7783 625.2788 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 12) 445.7969 648.6943 -56.3785 123.0582 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0546 -95.1393 -95.1393 -78.0546 429.7979 681.5781 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
511.501 643.2158 m
515.0566 642.7007 518.8574 639.2334 519.9766 635.5435 c
521.3857 631.6074 519.4609 628.7437 515.6367 629.2373 c
511.8125 629.7305 507.7197 633.4424 506.582 637.4004 c
505.4395 641.3579 507.9238 643.998 511.501 643.2158 c
511.501 643.2158 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 445.7822 648.6973 -56.3785 123.0733 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0642 -95.1509 -95.1509 -78.0642 429.7832 681.5796 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
506.6494 659.2944 m
510.2285 658.5127 514.0078 655.3145 514.835 651.8701 c
515.9316 648.4478 513.9609 646.1221 510.4063 646.6367 c
506.8262 647.4199 503.0254 650.8872 501.9297 654.3086 c
501.1035 657.7534 503.3613 659.8315 506.6494 659.2944 c
506.6494 659.2944 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 445.7754 648.6973 -56.3785 123.0828 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0702 -95.1583 -95.1583 -78.0702 429.7764 681.5791 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
502.4922 673.5415 m
505.8008 672.7358 509.3115 669.5156 510.3633 666.6299 c
511.1699 663.4541 509.4453 661.4199 505.8672 662.2017 c
502.2891 662.9873 498.7559 666.4761 497.7051 669.3604 c
496.9004 672.5352 499.1816 674.3467 502.4922 673.5415 c
502.4922 673.5415 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 445.7764 648.6963 -56.3785 123.0835 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0707 -95.1588 -95.1588 -78.0707 429.7773 681.5781 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
532.8789 623.376 m
536.4355 622.8604 540.2363 619.395 541.668 615.189 c
543.0996 610.9858 541.7324 607.8989 537.9316 608.1221 c
534.3984 608.3701 530.2832 612.3506 528.8535 616.5557 c
527.6914 620.7813 529.3223 623.8921 532.8789 623.376 c
532.8789 623.376 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 445.7852 648.6982 -56.3785 123.0706 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0625 -95.1488 -95.1488 -78.0625 429.7852 681.5811 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
527.1113 640.731 m
530.4199 639.9258 533.9307 636.7051 535.3184 633.0376 c
536.7031 629.3687 535.0479 626.5293 531.7617 627.0664 c
528.2051 627.5806 524.1123 631.2939 522.9951 634.9839 c
521.877 638.6743 523.8242 641.2686 527.1113 640.731 c
527.1113 640.731 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 445.79 648.6963 -56.3785 123.0651 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.059 -95.1446 -95.1446 -78.059 429.791 681.5796 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
521.7891 655.9614 m
524.8096 655.4014 528.3193 652.1821 529.6621 649.0508 c
530.7559 645.6294 529.3242 643.3472 525.7695 643.8623 c
522.4609 644.6685 518.9492 647.8896 517.8535 651.312 c
516.7568 654.7314 518.4805 656.7666 521.7891 655.9614 c
521.7891 655.9614 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 445.7871 648.6963 -56.3785 123.0658 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0594 -95.1451 -95.1451 -78.0594 429.7881 681.5791 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
516.8496 669.8726 m
520.1582 669.0684 523.3789 666.0918 524.4297 663.2085 c
525.4805 660.3213 524.0273 658.3101 520.7178 659.1143 c
517.4297 659.6514 513.9199 662.8735 513.1133 666.0483 c
512.0635 668.9346 513.8076 670.7002 516.8496 669.8726 c
516.8496 669.8726 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 445.791 648.6943 -56.3785 123.0605 0.995 -0.1001 0.1001 0.995 -771.4752 841.7983 Bg
78.0561 -95.141 -95.141 -78.0561 429.792 681.5776 Bm
f
0 BB
/BBAccumRotation (0.083040) XT
U
u
0 XR
457.2129 351.8789 m
462.2813 349.625 466.959 346.5752 471.1162 342.873 c
476.1504 338.3896 480.415 332.9531 483.6689 326.8184 c
486.0322 322.3643 487.8721 317.5498 489.0752 312.4619 C
490.2822 317.5654 492.1289 322.3926 494.502 326.8574 C
479.5869 358.0703 447.6543 373.8379 418.3672 364.9678 C
416.8672 360.6572 415.6689 356.1748 414.8047 351.5498 C
421.417 354.6123 428.707 356.3184 436.3721 356.3184 c
443.7568 356.3184 450.7939 354.7334 457.2129 351.8789 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 127) 487.5 381.5 -45 48.0833 1 0 0 1 0 0 Bg
34 -34 -34 -34 487.5 381.5 Bm
f
0 BB
446.793 404.7256 m
440.3281 399.876 434.5693 393.9209 429.7197 387.0986 C
459.9883 389.4941 490.1309 373.1387 507.0596 342.8965 C
511.2188 346.5957 515.8984 349.6436 520.9688 351.8945 C
504.3037 382.1826 476.5303 400.958 446.793 404.7256 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 127) 487.5 381.5 -45 48.0833 1 0 0 1 0 0 Bg
34 -34 -34 -34 487.5 381.5 Bm
f
0 BB
541.7754 356.3184 m
549.458 356.3184 556.7637 354.6045 563.3896 351.5273 C
562.5244 356.1602 561.3232 360.6494 559.8223 364.9678 C
530.5225 373.8418 498.5762 358.0566 483.6689 326.8184 C
486.0322 322.3643 487.8721 317.5498 489.0752 312.4619 C
495.0381 337.667 516.3682 356.3184 541.7754 356.3184 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 487.5 381.5 -45 48.0833 1 0 0 1 0 0 Bg
34 -34 -34 -34 487.5 381.5 Bm
f
0 BB
548.4697 387.0986 m
543.6191 393.9209 537.8613 399.876 531.3965 404.7256 C
501.6533 400.957 473.876 382.1768 457.2129 351.8789 C
462.2813 349.625 466.959 346.5752 471.1162 342.873 C
488.043 373.1299 518.1943 389.4951 548.4697 387.0986 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 487.5 381.5 -45 48.0833 1 0 0 1 0 0 Bg
34 -34 -34 -34 487.5 381.5 Bm
f
0 BB
U
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 6 79 255 255 0 50 Lb
(Layer 8) Ln
0 A
u
*u
1 D
0 O
0 J 0 j 1 w 4 M []0 d0 XR
0 g
318.8496 608.2134 m
319.54 609.5874 320.1895 611.0259 320.7969 612.5278 C
332.1973 616.9331 344.4023 625.2153 355.9043 636.3091 C
350.7051 647.1948 L
350.332 647.2124 349.9688 647.0942 349.6387 646.7622 c
341.5645 638.7407 333.2588 632.3208 325.1123 627.6118 C
326.9678 637.3286 327.5996 648.3901 326.9434 660.1313 C
315.2959 663.4497 L
315.0391 663.1675 314.8936 662.7993 314.9297 662.312 c
316.0176 646.8003 314.7666 632.8521 311.5537 621.3208 C
308.3594 620.2104 305.2246 619.3823 302.1826 618.8755 c
295.4624 617.7515 288.4512 618.4653 283.8652 621.9204 C
283.748 622.0151 283.6577 622.0874 283.5923 622.1411 C
283.5005 622.2251 283.4092 622.313 283.3193 622.397 C
283.2402 622.5024 282.9551 622.8442 282.7837 623.0552 C
282.8711 622.9829 282.1421 624.144 282.0845 624.2534 c
281.6958 624.9985 281.3477 625.7944 281.0298 626.6372 c
279.5469 630.5483 278.7788 635.2749 278.4814 640.4575 C
270.3325 649.2446 L
270.3218 649.1831 270.3096 649.1235 270.313 649.0444 c
270.9429 635.4067 275.2329 626.313 281.0986 619.4214 c
283.105 617.063 285.314 615.1108 287.6997 613.5454 C
282.9663 615.23 278.7021 617.2769 275.0068 619.6704 c
269.2856 623.3726 264.5889 628.6245 263.5298 634.269 C
263.5078 634.4185 263.4897 634.5327 263.4775 634.6157 C
263.4663 634.7397 263.458 634.8657 263.4482 634.9888 C
263.4614 635.1206 263.481 635.564 263.4966 635.8364 C
263.5127 635.7231 263.7559 637.0718 263.7881 637.1929 c
264.0029 638.0044 264.2827 638.8276 264.6157 639.6636 c
266.1577 643.5532 268.7764 647.561 272.0503 651.5894 C
273.604 662.9468 L
273.5537 662.9077 272.6523 662.0039 272.6021 661.9443 c
263.8735 651.4473 260.1162 643.3315 259.8018 634.2876 c
259.4844 625.1636 262.7568 617.4126 269.3535 611.3892 c
276.2759 605.0718 286.7837 600.6431 299.416 598.2759 C
296.8545 595.8276 293.9824 594.0396 290.9614 593.356 C
290.8125 593.3296 290.6987 593.3071 290.6167 593.2915 C
290.4922 593.2759 290.3672 593.2642 290.2441 593.2505 C
290.1123 593.2612 289.668 593.2681 289.3955 593.2759 C
289.5078 593.2964 288.1519 593.5112 288.0303 593.5415 c
287.2124 593.7417 286.3813 594.0103 285.5356 594.3345 c
281.6001 595.8315 277.5132 598.4507 273.3848 601.7534 C
261.4087 601.3081 L
261.4492 601.2583 261.4868 601.2075 261.5483 601.1577 c
272.3101 592.3462 282.0068 589.5308 291.0566 589.4634 c
298.624 589.4077 305.168 591.9048 310.498 596.7778 C
315.5996 596.3335 320.9365 596.1802 326.4395 596.3325 C
329.9355 607.8765 L
329.6738 608.1411 329.3252 608.2974 328.8574 608.2759 c
325.4326 608.1304 322.0996 608.1216 318.8496 608.2134 C
f
0 D
306.9746 609.1118 m
306.9746 609.1108 306.9736 609.1108 Y
306.9727 609.1108 l
306.9736 609.1108 306.9746 609.1118 V
Bb
0 0 0 0 Bh
1 (Unnamed gradient 4) 318.5264 605.3789 127.3855 40.1366 1 0 0 1 0 0 Bg
-24.3699 31.8913 31.8913 24.3699 318.5264 605.3789 Bm
f
0 BB
*U
*u
1 D
0 g
352.2285 648.2417 m
349.9531 652.231 346.7139 656.0522 342.6797 659.6362 C
342.0449 661.6001 341.2949 663.4507 340.4258 665.1763 c
336.4063 673.1538 329.8262 678.395 320.9551 680.5522 c
315.7158 681.8267 310.0254 682.2388 303.6484 681.1938 C
290.2778 681.9009 278.5742 679.9565 270.1445 675.1958 c
262.3682 670.8013 257.4443 663.98 255.7124 655.0151 c
254.8232 650.4194 254.6006 645.5122 255.437 640.1626 C
251.4497 629.8755 251.2808 621.229 252.9673 613.5005 c
254.9121 604.5796 259.9966 597.8784 267.876 593.6704 c
274.8647 589.939 284.0098 588.1577 294.4165 588.1919 C
300.8574 585.7388 306.833 585.0532 312.4902 585.3813 c
321.6055 585.9106 329.0195 589.8862 334.4053 597.0122 c
335.5576 598.5366 336.6172 600.2026 337.584 601.9966 C
346.6836 608.6489 351.541 615.9741 354.2715 623.5161 c
357.3809 632.1011 356.6514 640.481 352.2285 648.2417 c
f
0 D
0 g
293.5469 667.5757 m
294.54 668.269 295.5674 668.9106 296.6143 669.4956 C
307.0391 666.603 316.3027 662.8091 324.1719 658.3638 C
324.1875 658.3325 324.2051 658.3032 324.2227 658.2729 C
324.624 658.1128 L
327.4082 656.52 330.002 654.8403 332.4141 653.0923 C
332.8184 649.4878 333.0684 645.9741 333.1816 642.5552 C
332.959 642.9692 332.7412 643.3862 332.5059 643.7886 c
327.9004 651.6724 320.9941 656.4761 312.2012 658.0444 c
302.6602 659.7446 290.959 657.6938 278.564 652.5835 C
283.2148 658.8335 288.269 663.894 293.5469 667.5757 c
f
0 g
258.9663 652.6802 m
259.0122 652.9487 259.0923 653.3853 259.1094 653.5161 C
259.146 653.6343 259.1821 653.7554 259.2217 653.8745 C
259.2515 653.9517 259.2949 654.0591 259.3491 654.2007 C
261.645 659.4644 267.3984 663.5317 273.8022 665.8599 c
274.1606 665.9897 274.5371 666.1021 274.9019 666.2251 C
269.4619 660.6978 264.397 653.5591 259.9463 645.2319 C
259.6289 646.4106 259.374 647.5708 259.2012 648.6987 c
259.0635 649.5894 258.9751 650.4536 258.9468 651.2925 c
258.9434 651.4165 259.0068 652.7866 258.9663 652.6802 C
f
0 g
256.584 614.4028 m
256.5264 614.5415 256.4805 614.6489 256.4482 614.7251 C
256.4067 614.8433 256.3672 614.9644 256.3276 615.0806 C
256.3071 615.2104 256.2173 615.646 256.1655 615.9126 C
256.208 615.8091 256.1113 617.1753 256.1123 617.2993 c
256.1206 618.1401 256.1885 619.0063 256.3052 619.8979 c
256.5103 621.4937 256.8677 623.146 257.3511 624.8423 C
264.2017 616.4761 268.8579 611.8521 V
263.918 617.9507 259.9282 629.0347 267.4053 633.5503 C
283.3613 643.2466 298.8594 648.1724 311.8438 648.0239 c
318.6582 647.9517 325.4336 646.019 329.3438 641.813 C
329.4434 641.6987 329.5195 641.6118 329.5723 641.5474 C
329.6504 641.4497 329.7246 641.3462 329.7969 641.2485 C
329.8574 641.1304 330.0781 640.7446 330.209 640.5063 C
330.1357 640.5923 330.6504 639.3228 330.6875 639.2026 c
330.9395 638.4019 331.1426 637.5562 331.3066 636.6724 c
331.8477 633.8047 331.9746 630.6084 331.7939 627.1875 C
331.752 626.3926 331.4063 622.4448 y
329.917 615.7476 329.5283 614.3018 v
329.042 612.4961 326.9648 606.1855 326.7686 605.5859 C
326.0049 605.2344 324.2041 604.729 323.7773 604.6089 c
303.3018 598.8545 284.895 598.5059 271.3096 603.0903 c
264.8525 605.2651 259.0039 609.1958 256.584 614.4028 C
f
0 g
312.165 589.0942 m
312.0176 589.0581 311.9043 589.0298 311.8242 589.0103 C
311.7012 588.9888 311.5762 588.9683 311.4551 588.9468 C
311.3232 588.9478 310.8789 588.9253 310.6074 588.9165 C
310.7178 588.9429 309.3516 589.0601 309.2295 589.0806 c
308.9707 589.1245 308.707 589.1841 308.4453 589.2397 C
310.6855 589.5532 312.958 589.9341 315.2598 590.3853 C
314.2598 589.8364 313.2266 589.3979 312.165 589.0942 C
f
350.7305 624.6812 m
350.7051 624.5317 350.6875 624.4165 350.6738 624.3354 C
350.6465 624.2134 350.6152 624.0903 350.5859 623.9712 C
350.5342 623.8501 350.3789 623.4341 350.2793 623.1792 C
350.2988 623.2915 349.6523 622.0825 349.5859 621.979 c
349.1309 621.272 348.6113 620.5757 348.0371 619.8813 c
346.4805 617.9966 344.543 616.189 342.3457 614.4448 C
343.9473 620.5864 344.8613 627.4868 345.0889 634.8989 C
345.2207 636.9126 345.2939 638.8911 345.2949 640.8198 C
349.0332 635.7983 351.4014 629.9243 350.7305 624.6812 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 4) 279.4019 660.1777 -34.2007 74.9568 1 0 0 1 0 0 Bg
61.9948 -42.1327 -42.1327 -61.9948 279.4019 660.1777 Bm
f
0 BB
*U
U
u
1 XR
101.8516 234.0723 m
114.2612 229.5859 128.3403 236.1895 132.8257 248.5996 c
134.5703 253.4238 134.687 258.0596 133.4243 263.1924 c
130.7993 260.2432 126.2549 254.9365 116.2466 254.8477 c
110.8159 254.7998 105.4385 256.4502 101.1133 260.0615 c
102.0093 249.6055 111.4126 245.4248 119.3032 245.6934 c
115.0503 242.5527 110.1675 241.9795 105.3413 243.7236 c
97.7568 246.4658 93.5459 254.2236 96.2871 261.8057 c
99.0293 269.3906 107.4761 273.3516 115.0591 270.6094 c
118.5063 269.3652 121.4556 266.7393 123.2168 262.9854 c
126.0308 264.3076 128.6563 267.2549 130.3428 269.7627 c
128.1426 274.457 123.375 278.5176 118.5493 280.2637 c
106.1387 284.748 92.0596 278.1436 87.3247 265.0459 c
82.8398 252.6367 89.4414 238.5586 101.8516 234.0723 c
101.8516 234.0723 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 4) 110.6968 271.0732 -90 26.9862 0.940447 0.339941 -0.339941 0.940447 3317.8208 -2222.3506 Bg
-9.17372 -25.3791 -25.3791 9.17372 116.1909 268.8867 Bm
f
0 BB
139.5229 244.0068 m
150.5195 241.8066 159.3149 232.2803 159.3149 220.5498 c
159.3149 220.5498 l
159.3149 206.623 148.3193 196.3584 135.124 195.627 c
134.3911 182.4307 124.1279 171.4346 110.9341 171.4346 c
110.9341 171.4346 l
97.0049 171.4346 86.7427 182.4307 86.0098 195.627 c
72.8145 196.3584 61.8179 206.623 61.8179 220.5498 c
61.8179 220.5498 l
61.8179 231.5459 69.8813 241.0762 80.8774 244.0068 c
81.6104 240.3418 83.0767 237.4111 85.2759 235.2109 c
77.9453 234.4775 72.0815 227.8799 72.0815 220.5498 c
72.0815 220.5498 l
72.0815 211.7539 78.6792 205.1553 86.7427 205.1553 c
95.5386 205.1553 l
95.5386 197.0918 l
95.5386 188.2969 102.1362 181.6973 110.9341 181.6973 c
110.9341 181.6973 l
118.9966 181.6973 125.5952 188.2969 125.5952 197.0918 c
125.5952 205.1553 l
133.6577 205.1553 l
141.7217 205.1553 149.0522 211.7539 149.0522 220.5498 c
149.0522 220.5498 l
149.0522 227.8799 142.4546 234.4775 134.3911 235.2109 c
136.5913 238.1426 138.0562 241.0762 139.5229 244.0068 c
139.5229 244.0068 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 12) 100.3799 246.1045 -90 69.4852 1 0 0 1 0 0 Bg
-0.000003 -69.4852 -69.4852 0.000003 100.3799 246.1045 Bm
f
0 BB
U
u
99.7939 321.4297 m
94.0381 322.0488 80.7998 323.8203 86.2896 335.2012 C
76.1064 343.9219 68.1367 355.3008 68.1367 368.7607 c
68.1367 372.6582 69.1548 375.5342 71.2358 377.4834 c
73.3608 379.3867 76.5049 380.3613 80.7109 380.3613 c
83.2349 380.3613 85.9795 379.6982 88.9019 378.3242 c
91.8242 376.9082 95.4546 374.5605 99.8379 371.1963 C
92.8428 384.9658 80.0908 392.4053 67.4727 392.3154 c
56.7134 392.2275 49.0098 384.877 49.0098 372.125 c
49.0098 356.0537 65.0815 342.2402 81.1094 333.5176 C
77.6118 319.7031 94.5249 321.1201 99.7939 321.4297 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 104.3687 405.1738 -90 76.4958 1 0 0 1 0 0 Bg
-0.000003 -76.4958 -76.4958 0.000003 104.3687 405.1738 Bm
f
0 BB
107.4102 321.4297 m
105.5049 322.0488 101.0776 323.8203 102.9375 335.2012 C
99.5283 343.9219 96.8721 355.3008 96.8721 368.7607 C
96.8721 372.6582 97.2261 375.5342 97.9346 377.4834 C
98.5986 379.3867 99.6611 380.3613 101.0776 380.3613 C
101.9189 380.3613 102.8047 379.6982 103.7783 378.3242 C
104.7539 376.9082 105.9922 374.5605 107.4541 371.1963 C
105.1074 384.9658 100.856 392.4053 96.6504 392.3154 C
93.0645 392.2275 90.4956 384.877 90.4956 372.125 C
90.4956 356.0537 95.8535 342.2402 101.2109 333.5176 C
100.0596 319.7031 105.6816 321.1201 107.4102 321.4297 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 104.3687 405.1738 -90 76.4962 1 0 0 1 0 0 Bg
-0.000003 -76.4962 -76.4962 0.000003 104.3687 405.1738 Bm
f
0 BB
115.0684 321.4297 m
116.9736 322.0488 121.4004 323.8203 119.585 335.2012 C
122.9512 343.9219 125.6064 355.3008 125.6064 368.7607 C
125.6064 372.6582 125.251 375.5342 124.5879 377.4834 C
123.8799 379.3867 122.8174 380.3613 121.4443 380.3613 C
120.6035 380.3613 119.6729 379.6982 118.6992 378.3242 C
117.7256 376.9082 116.5303 374.5605 115.0684 371.1963 C
117.3721 384.9658 121.6211 392.4053 125.8291 392.3154 C
129.415 392.2275 131.9824 384.877 131.9824 372.125 C
131.9824 356.0537 126.625 342.2402 121.3115 333.5176 C
122.4629 319.7031 116.8408 321.1201 115.0684 321.4297 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 104.3687 405.1738 -90 76.4958 1 0 0 1 0 0 Bg
-0.000003 -76.4958 -76.4958 0.000003 104.3687 405.1738 Bm
f
0 BB
122.7295 321.4297 m
128.4414 322.0488 141.7246 323.8203 136.1895 335.2012 C
146.3721 343.9219 154.3857 355.3008 154.3857 368.7607 c
154.3857 372.6582 153.3232 375.5342 151.2432 377.4834 c
149.1611 379.3867 146.0176 380.3613 141.8125 380.3613 c
139.2441 380.3613 136.499 379.6982 133.6201 378.3242 c
130.6533 376.9082 127.0234 374.5605 122.6846 371.1963 C
129.6367 384.9658 142.3877 392.4053 155.0508 392.3154 c
165.7646 392.2275 173.4697 384.877 173.4697 372.125 c
173.4697 356.0537 157.3975 342.2402 141.4131 333.5176 C
144.8672 319.7031 127.9971 321.1201 122.7295 321.4297 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 104.3687 405.1738 -90 76.4961 1 0 0 1 0 0 Bg
-0.000003 -76.4961 -76.4961 0.000003 104.3687 405.1738 Bm
f
0 BB
111.0361 417.7246 m
121.6875 406.4795 117.9746 402.917 111.0361 391.0898 C
104.1533 402.917 100.439 406.4795 111.0361 417.7246 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 79.2251 550.2129 -90 105.5646 0.894046 0 0 0.502773 868.4317 4154.7559 Bg
-0.000004 -53.075 -94.3796 0.000002 102.8086 404.2441 Bm
f
0 BB
U
u
1 D
0 XR
445.4873 482.0327 m
448.7451 478.4634 452.6357 475.1108 456.9463 472.0386 C
457.8311 476.9683 459.1377 482.2534 460.9326 487.8921 C
455.918 490.8901 451.3975 494.0288 447.5088 497.1714 C
446.2744 491.9585 445.5996 486.8862 445.4873 482.0327 C
Bb
-13.3328 13.3327 117.2412 0.392128 Bh
1 (Unnamed gradient 12) 557.4678 379.8662 -62.7582 48.0872 0.9523 -0.305 0.305 0.9523 -2176.9351 2844.0876 Bg
34.0016 -34.0006 -34.0006 -34.0016 488.3271 506.3257 Bm
f
0 BB
/BBAccumRotation (0.309946) XT
459.5068 533.2241 m
464.3691 532.3354 469.7217 531.0327 475.2939 529.2358 C
478.3604 534.2476 481.5 538.77 484.5732 542.6577 C
479.4287 543.894 474.3574 544.5698 469.5029 544.7515 C
465.9326 541.4214 462.5791 537.5337 459.5068 533.2241 C
Bb
-13.3328 13.3327 117.2412 0.392128 Bh
1 (Unnamed gradient 12) 557.4678 379.8662 -62.7582 48.0871 0.9523 -0.305 0.305 0.9523 -2176.9351 2844.0876 Bg
34.0015 -34.0005 -34.0005 -34.0015 488.3271 506.3257 Bm
f
0 BB
/BBAccumRotation (0.309946) XT
452.4248 515.9429 m
450.2705 511.2866 448.6807 506.563 447.4395 501.9097 C
451.3291 498.7671 455.8506 495.5581 460.9365 492.4917 C
462.7334 497.8491 464.8818 503.4917 467.4521 509.1362 c
470.0225 514.7788 472.7354 520.0728 475.6611 525.0151 C
469.9512 526.7407 464.5967 528.0464 459.5986 528.8608 C
456.9463 524.9058 454.5068 520.5972 452.4248 515.9429 c
Bb
-13.3325 13.3324 117.2412 0.392128 Bh
1 (Unnamed gradient 12) 557.4688 379.8652 -62.7582 48.0861 0.9523 -0.305 0.305 0.9523 -2176.9351 2844.0876 Bg
34.0008 -33.9998 -33.9998 -34.0008 488.3281 506.3252 Bm
f
0 BB
/BBAccumRotation (0.309946) XT
*u
0 D
0 g
490.2803 448.519 m
487.6865 448.519 485.0869 448.7271 482.5352 449.1372 C
483.8389 450.2905 485.2051 451.6226 486.7725 453.2651 c
487.627 454.187 488.5811 455.2222 489.5313 456.3745 C
493.6709 455.353 497.9424 454.6694 502.542 454.2905 C
500.8086 452.8413 498.918 451.4565 496.7871 450.0835 c
496.1338 449.6577 495.4229 449.228 494.4883 448.6997 C
493.0918 448.5815 491.6748 448.519 490.2803 448.519 C
490.2803 448.519 L
f
0 g
501.2939 449.7651 m
503.1045 451.0942 504.8965 452.5601 506.6436 454.1382 C
507.1982 454.1216 507.75 454.1128 508.2959 454.1128 c
510.0283 454.1128 511.7969 454.1958 513.5781 454.3608 C
510.9336 452.9429 508.1729 451.771 505.3447 450.8657 c
504.0391 450.4487 502.6836 450.0815 501.2939 449.7651 C
501.2939 449.7651 L
f
0 g
479.0303 449.8354 m
472.5908 451.3647 466.6035 454.1304 461.2363 458.0601 C
461.1436 460.5054 461.2324 463.0601 461.5049 465.6509 c
461.5479 466.3999 461.6475 467.146 461.751 467.9351 c
461.7695 468.0796 461.7891 468.2212 461.8076 468.3647 C
465.5547 465.9282 469.5742 463.7476 473.7705 461.8745 c
477.6807 460.0405 481.9492 458.4546 486.4658 457.1528 C
486.3916 457.0698 486.3184 456.9858 486.2441 456.9019 c
485.7324 456.3198 485.2197 455.7378 484.71 455.2192 c
482.7148 453.0767 480.8574 451.314 479.0303 449.8354 C
479.0303 449.8354 L
f
0 g
509.5498 456.9331 m
512.7275 460.2358 515.543 463.6519 517.9404 467.1108 C
518.8076 466.9663 519.6494 466.8628 520.4658 466.7632 c
521.0117 466.6958 521.5469 466.6304 522.0742 466.5542 c
523.9521 466.3726 525.833 466.2808 527.6865 466.2808 c
527.8535 466.2808 528.0205 466.2808 528.1855 466.2837 C
525.6406 463.2163 522.7168 460.4595 519.4785 458.0796 C
518.5605 457.8892 517.6318 457.7261 516.7129 457.5933 c
514.3926 457.2202 511.9912 457.0005 509.5498 456.9331 C
509.5498 456.9331 L
f
0 g
505.5479 456.9712 m
501.04 457.0913 496.3154 457.7046 491.4902 458.7964 C
494.4629 462.5386 497.3584 466.7466 500.1084 471.3198 C
505.6582 469.6128 510.5 468.4038 514.8662 467.6372 C
512.085 463.7495 508.9512 460.1636 505.5479 456.9712 C
505.5479 456.9712 L
f
0 g
488.5117 459.5366 m
483.8955 460.7876 479.3076 462.4253 474.873 464.4116 c
470.4648 466.3823 466.2354 468.7417 462.2969 471.4282 C
463.084 476.0991 464.291 481.1421 465.8906 486.4438 C
471.0273 483.4995 476.1973 480.8354 481.2666 478.5278 c
486.2588 476.2534 491.6719 474.1235 497.3691 472.1919 C
494.623 467.688 491.6445 463.436 488.5117 459.5366 C
488.5117 459.5366 L
f
0 g
528.1006 469.0698 m
526.2627 469.0698 524.3438 469.1733 522.3975 469.3765 c
521.668 469.4624 520.9023 469.5503 520.1279 469.6382 C
519.6924 469.687 L
522.0869 473.3726 524.2334 477.2886 526.2412 481.6382 c
528.0752 485.6851 529.6406 489.981 530.9023 494.4233 C
531.2822 494.0854 531.6504 493.7427 532.0146 493.4019 c
532.3174 493.1187 532.6172 492.8394 532.918 492.5679 c
534.8682 490.7554 536.6367 488.8813 538.3145 486.8413 C
536.8545 480.4292 534.1855 474.4702 530.3691 469.1226 C
529.6348 469.0884 528.8799 469.0698 528.1006 469.0698 C
528.1006 469.0698 L
f
0 g
516.6201 470.1675 m
511.8203 470.9761 506.7744 472.2065 501.6045 473.8257 C
504.5264 478.8491 507.1875 484.022 509.5225 489.2104 c
511.8438 494.3071 513.9736 499.6997 515.8584 505.2397 C
520.3477 502.5034 524.5996 499.5269 528.5117 496.3843 C
527.291 491.8784 525.6514 487.314 523.6377 482.8159 c
521.6064 478.2739 519.2451 474.02 516.6201 470.1675 C
516.6201 470.1675 L
f
0 g
498.8711 474.6929 m
492.8887 476.6851 487.5137 478.7905 482.4482 481.1304 c
476.7031 483.7104 471.4482 486.4165 466.8154 489.1792 C
468.501 494.4233 470.6445 499.9468 473.1895 505.604 c
475.9668 511.6206 478.626 516.7397 481.3086 521.2358 C
486.3789 519.6021 491.7568 517.5142 497.7354 514.8569 c
503.373 512.2554 508.626 509.5239 513.3584 506.7417 C
511.4229 500.9507 509.3174 495.5747 506.9209 490.3198 c
504.458 484.8433 501.75 479.5874 498.8711 474.6929 C
498.8711 474.6929 L
f
0 g
538.9785 490.3452 m
537.6738 491.8433 536.2627 493.2876 534.7773 494.6519 C
534.6357 494.7827 L
533.7031 495.6401 532.7383 496.5269 531.6738 497.4038 C
532.7002 501.5552 533.3838 505.8413 533.7578 510.4614 C
535.4355 508.4351 536.8164 506.5308 537.9639 504.6694 c
538.3779 504.021 538.7969 503.3276 539.3154 502.4243 C
539.7021 498.396 539.5879 494.3413 538.9785 490.3452 C
538.9785 490.3452 L
f
0 g
529.25 499.4233 m
525.501 502.3413 521.291 505.2397 516.7256 508.0474 C
518.4053 513.5093 519.6436 518.4468 520.4111 522.7417 C
524.3037 519.9507 527.8877 516.8179 531.0771 513.4214 C
530.957 508.8804 530.3438 504.1782 529.25 499.4233 C
529.25 499.4233 L
f
0 g
538.1309 509.3745 m
536.8447 511.1128 535.4307 512.8354 533.9121 514.5151 C
533.9717 516.6069 533.9141 518.7397 533.7412 520.8823 C
535.1396 518.2612 536.2959 515.5278 537.1934 512.729 c
537.54 511.6479 537.8535 510.5269 538.1309 509.3745 C
538.1309 509.3745 L
f
0 g
514.2236 509.4858 m
509.5752 512.2427 504.5361 514.8335 498.8379 517.396 c
493.7246 519.7222 488.334 521.853 482.8086 523.7319 C
485.5498 528.2271 488.5264 532.48 491.6641 536.3882 C
496.168 535.2339 500.7285 533.5942 505.2285 531.5132 c
509.6836 529.519 513.9355 527.1821 517.8809 524.5591 C
517.0986 519.8706 515.8691 514.8042 514.2236 509.4858 C
514.2236 509.4858 L
f
0 g
531.1152 517.438 m
528.0693 520.4126 524.6523 523.2456 520.9404 525.8745 C
521.1855 527.2456 521.3721 528.6226 521.4961 529.9702 c
521.6787 531.8384 521.7676 533.6831 521.7646 535.5786 C
524.8936 532.9849 527.6943 530.0015 530.1006 526.6978 C
530.2354 526.0054 530.3584 525.3081 530.46 524.5864 c
530.8232 522.3462 531.0498 519.8979 531.1152 517.438 C
531.1152 517.438 L
f
518.3594 527.6206 m
514.2549 530.2368 510.335 532.3628 506.4043 534.1167 c
502.3535 535.9526 498.0586 537.519 493.6289 538.7769 C
493.9678 539.1577 494.3145 539.5308 494.6592 539.8979 c
494.9385 540.1968 495.2158 540.4927 495.4824 540.7905 c
497.2842 542.7261 499.0508 544.4175 500.7354 545.8062 C
507.3311 544.3745 513.4551 541.6646 518.9434 537.7495 C
519.0322 535.3394 518.9434 532.8237 518.6748 530.271 c
518.5684 529.4019 518.4648 528.5298 518.3594 527.6206 C
518.3594 527.6206 L
Bb
-13.3329 13.3329 135 0.392136 Bh
1 (Unnamed gradient 12) 488.3291 506.3247 -45 48.0843 1 0 0 1 0 0 Bg
34.0007 -34.0007 -34.0007 -34.0007 488.3291 506.3247 Bm
f
0 BB
*U
1 D
442.9619 505.687 m
444.1035 509.7798 445.5693 513.939 447.4277 518.0366 c
449.2822 522.2007 451.4658 526.0386 453.7793 529.6177 C
452.6768 529.7417 451.6377 529.9292 450.5986 529.9878 C
448.1328 530.2495 445.8633 530.314 443.7695 530.2456 C
439.9365 525.0659 437.2207 519.1216 435.8252 512.8071 C
437.1445 511.1626 438.7207 509.5112 440.5498 507.8159 c
441.3291 507.1069 442.1133 506.396 442.9619 505.687 C
Bb
-13.3331 13.333 117.2412 0.392128 Bh
1 (Unnamed gradient 12) 557.4688 379.8662 -62.7582 48.0882 0.9523 -0.305 0.305 0.9523 -2176.9351 2844.0876 Bg
34.0023 -34.0013 -34.0013 -34.0023 488.3281 506.3262 Bm
f
0 BB
/BBAccumRotation (0.309946) XT
445.8135 533.9644 m
448.2842 537.4761 450.9326 540.6343 453.7607 543.3784 C
451.3311 543.3628 448.9023 543.1704 446.6504 542.8618 c
446.2871 542.8003 445.9453 542.7222 445.5908 542.6558 C
442.3135 540.3989 439.4209 537.7065 436.958 534.6929 C
438.5732 534.6948 440.2959 534.5952 442.1377 534.4165 c
443.3232 534.3062 444.5693 534.1362 445.8135 533.9644 C
Bb
-13.3331 13.3329 117.2412 0.392128 Bh
1 (Unnamed gradient 12) 557.4678 379.8643 -62.7582 48.088 0.9523 -0.305 0.305 0.9523 -2176.9351 2844.0876 Bg
34.0022 -34.0011 -34.0011 -34.0022 488.3271 506.3237 Bm
f
0 BB
/BBAccumRotation (0.309946) XT
444.085 488.2153 m
444.2676 491.5522 444.8018 495.0444 445.6924 498.5854 C
444.8291 499.2886 444.0146 499.9917 443.3037 500.6948 C
442.1035 501.8003 441.0771 502.8706 440.1572 503.937 C
439.5986 500.7065 439.4736 497.3716 439.8418 494.0151 C
440.0332 493.6929 440.2119 493.3745 440.417 493.0444 c
441.4893 491.3843 442.7109 489.7739 444.085 488.2153 C
Bb
-13.3358 13.3357 117.2412 0.392128 Bh
1 (Unnamed gradient 12) 557.4785 379.8662 -62.7582 48.0979 0.9523 -0.305 0.305 0.9523 -2176.9351 2844.0876 Bg
34.0092 -34.0081 -34.0081 -34.0092 488.3369 506.3291 Bm
f
0 BB
/BBAccumRotation (0.309946) XT
492.2744 540.4448 m
493.0625 541.4077 493.8467 542.3188 494.6338 543.1694 c
495.8926 544.4917 497.1133 545.6489 498.3291 546.6899 C
494.6553 547.2944 490.8643 547.3901 487.0547 546.9224 C
486.7305 546.7261 486.4014 546.5483 486.082 546.3394 c
484.2256 545.1421 482.4258 543.7749 480.627 542.2397 C
484.4131 542.0366 488.3174 541.437 492.2744 540.4448 C
Bb
-13.3325 13.3324 117.2412 0.392128 Bh
1 (Unnamed gradient 12) 557.4688 379.8672 -62.7582 48.0861 0.9523 -0.305 0.305 0.9523 -2176.9351 2844.0876 Bg
34.0008 -33.9998 -33.9998 -34.0008 488.3271 506.3271 Bm
f
0 BB
/BBAccumRotation (0.309946) XT
459.54 470.6147 m
455.3701 473.4741 451.5527 476.689 448.2979 479.9771 C
448.3135 477.0913 448.542 474.2788 448.9814 471.5386 c
449.0771 470.8657 449.21 470.2007 449.334 469.5347 C
451.9756 465.7485 455.1123 462.4038 458.6123 459.5444 C
458.5889 461.6011 458.7041 463.8042 458.9326 466.1782 c
459.0654 467.5874 459.2686 469.0649 459.54 470.6147 C
Bb
-13.3328 13.3326 117.2412 0.392128 Bh
1 (Unnamed gradient 12) 557.4658 379.8672 -62.7582 48.0869 0.9523 -0.305 0.305 0.9523 -2176.9351 2844.0876 Bg
34.0014 -34.0004 -34.0004 -34.0014 488.3242 506.3262 Bm
f
0 BB
/BBAccumRotation (0.309946) XT
U
u
*u
0.243137 0.196078 0.207843 0 0.756863 0.752941 0.74902 Xa
1 XR
110.8145 679.0239 m
110.8145 653.707 L
137.7676 616.1416 L
137.7676 626.7744 L
110.8145 679.0239 L
f
110.8145 621.1528 m
137.7676 602.3628 L
137.7676 613.0527 L
110.8145 646.4697 L
110.8145 621.1528 L
f
110.7822 588.5947 m
137.7676 588.5737 L
137.7676 599.3003 L
110.7822 613.916 L
110.7822 588.5947 L
f
*U
*u
0 g
111.04 646.4697 m
56.8477 636.373 L
56.8477 615.4756 L
111.04 621.1528 L
111.04 646.4697 L
f
0 g
56.8477 609.4878 m
56.8477 588.5884 L
111.2544 588.5947 L
111.2544 613.916 L
56.8477 609.4878 L
f
111.04 679.0239 m
56.8477 663.2373 L
56.8477 642.3569 L
111.04 653.707 L
111.04 679.0239 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 12) 97.9668 687.2021 -61.5331 87.3802 1 0 0 1 0 0 Bg
41.6499 -76.8153 -76.8153 -41.6499 97.9668 687.2021 Bm
f
0 BB
*U
*u
0.243137 0.196078 0.207843 0 0.756863 0.752941 0.74902 Xa
165.5176 635.0151 m
165.5176 622.0156 L
179.3564 602.7285 L
179.3564 608.188 L
165.5176 635.0151 L
f
165.5176 605.3008 m
179.3564 595.6543 L
179.3564 601.1421 L
165.5176 618.2998 L
165.5176 605.3008 L
f
165.5005 588.584 m
179.3564 588.5737 L
179.3564 594.0806 L
165.5005 601.585 L
165.5005 588.584 L
f
*U
*u
0 g
165.6333 618.2998 m
137.8081 613.1162 L
137.8081 602.3862 L
165.6333 605.3008 L
165.6333 618.2998 L
f
0 g
137.8081 599.3105 m
137.8081 588.5801 L
165.7432 588.584 L
165.7432 601.585 L
137.8081 599.3105 L
f
165.6333 635.0151 m
137.8081 626.9092 L
137.8081 616.188 L
165.6333 622.0156 L
165.6333 635.0151 L
Bb
0 0 0 0 Bh
1 (Unnamed gradient 12) 158.9204 639.2148 -61.5331 44.8667 1 0 0 1 0 0 Bg
21.3858 -39.442 -39.442 -21.3858 158.9204 639.2148 Bm
f
0 BB
*U
U
u
0 D
63.2979 483.2637 m
63.2979 534.187 l
104.665 555.3042 l
104.9331 506.1558 l
63.2979 483.2637 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 12) 85.2085 551.0059 -90 65.9703 1 0 0 1 0 0 Bg
-0.000003 -65.9703 -65.9703 0.000003 85.2085 551.0059 Bm
f
0 BB
/BBAccumRotation (0.005469) XT
121.2979 446.9419 m
121.1719 469.897 l
143.4717 482.2334 l
143.332 507.8369 l
162.8418 519.1279 l
163.1108 469.9795 l
121.2979 446.9419 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) 154.7642 519.4546 -90 56.6477 1 0 0 1 0 0 Bg
-0.000002 -56.6477 -56.6477 0.000002 154.7642 519.4546 Bm
f
0 BB
/BBAccumRotation (0.005469) XT
91.9126 465.6172 m
91.7861 488.5723 l
114.0859 500.9082 l
113.9463 526.5122 l
133.4551 537.8037 l
133.7251 488.6543 l
91.9126 465.6172 l
Bb
0 0 0 0 Bh
1 (Unnamed gradient 4) 123.2129 541.6841 -90 78.8772 1 0 0 1 0 0 Bg
-0.000003 -78.8772 -78.8772 0.000003 123.2129 541.6841 Bm
f
0 BB
/BBAccumRotation (0.005469) XT
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
