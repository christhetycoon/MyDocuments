%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 13.0.2%%For: (Ian Barnard) ()%%Title: (keep-calm-and-carry-on.eps)%%CreationDate: 5/23/12 10:27 PM%%BoundingBox: 0 -596 596 0%%HiResBoundingBox: 0 -595.2754 595.2754 0%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 298.5 -298.5 298.5 -298.5%AI3_TileBox: 18.1377 -677.6377 577.1377 105.3623%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 595.2756 595.2756%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -912.3486 513.3691 0.6667 1642 941 26 1 0 50 75 0 0%AI5_OpenViewLayers: 7%%PageOrigin:-106 -636.2764%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 128 8%%BeginData: 28294 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD80938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D93938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938D9393938D9393938D9393938D9393938D%9393938D9393938D9393938D9393938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938D9393938D9393938D9393938D9393938D%9393938D9393938D9393938D9393938D9393938D93938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938CFD%81938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938CFD04938D9393938D9393938D9393938D9393938D93%93938D9393938D9393938D9393938D9393938D9393938D9393938D939393%8D9393938D9393938D9393938D9393938D9393938D9393938D9393938D93%93938D9393938D9393938D9393938D9393938D9393938D9393938D939393%8D9393938D9393938D9393938D9393938D8C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938DFD81938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D93938D9393938D9393938D9393938D9393938D9393938D939393%8D9393938D9393938D9393938D9393938D9393938D9393938D9393938D93%93938D9393938D939A9A8D9393938D9393938D9393938D9393938D939393%8D9393938D9393938D9393938D9393938D9393938D9393938D9393938D93%93938D9393938D9393938D93938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D9399FFA7938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938CFD3F93C9FFFFFD3F938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%9393CAA0938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938CFD04938D9393938D9393938D9393938D9393938D9393938D%9393938D9393938D9393938D9393938D9393938D9393938D9393938D9393%938D9393938D9393C3FFFF93938D9393938D9393938D9393938D9393938D%9393938D9393938D9393938D9393938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938D8C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D9993C3A0CFA7C3A09A93938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938DFD3993B599C9A1CACA%BCA1BCC3CACAC9A0FD3A938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D939AC9A7C9A0C2A0C3A0C99AC3A8CAA09993938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D93938D9393938D9393938D93%93938D9393938D9393938D9393938D9393938D9393938D9393938D939393%8D9393938D9393938D9393938DBBA0CAA7C293938DCAA1CA9A939399A1CA%C3C2FD04938D9393938D9393938D9393938D9393938D9393938D9393938D%9393938D9393938D9393938D9393938D9393938D9393938D93938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D99A0CAA0CA99938D9399C9%A0938C938DCAA0C9A7A08C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938CFD3393B593939ACA9A93FFFF939393BCFFC9939393C2FFC293C9A1%FD36938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C99A1A08C9393%CAFFC3A0939AFFC99399C3A1FF9A938D93A1C28D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938CFD04938D9393938D9393938D9393938D9393938D%9393938D9393938D9393938D9393938D9393938D9393938D9393938DFD04%93FFCA9AA1FD05FFA1FFFFFFA1CFFD05FFBCA0FFC99393938D9393938D93%93938D9393938D9393938D9393938D9393938D9393938D9393938D939393%8D9393938D9393938D9393938D8C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D93A8FFA1FFA8FFFFA0A8C9CAFFFFC9A8C3A1FFCAFFA7FFFFC368%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938DFD3593FFCACAFFBB9AFF%93BC93C2FFCA93BC93C2CA93A1FFCAFFA0FD34938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D939ACF93998CC2FFC28C93A1FFCAC28D93A8CF%8D9393C2CA938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D93938D%9393938D9393938D9393938D9393938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938D9393938D939399FFCA9AC3FD04FFCFFF%CFFD06FFCA99C2FFC993938D9393938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938D9393938D9393938D9393938D9393938D%93938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938DCAFFFFFFC3%6899FFFFFFC2A7FFFFC98D99FD04FF9A938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938CFD3693CAFFFFFFA1BCA0FD07FFCABC9AFD04FFC3FD35%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C9393CACAFFCAFFCA%CFA1C9A0C3A0C9A1CACAFFCAFFFFFF9A938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938CFD04938D9393938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938D9393938D9393938D9393938D9393938D%9399FFCACFCACACACFCACFCACFCAFFCACAC9CACAFFC3938D9393938D9393%938D9393938D9393938D9393938D9393938D9393938D9393938D9393938D%9393938D9393938D9393938D9393938D8C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938DC9FD10FF99938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938DFD3993C2C3CACAFD07FFCACAC3C399FD38938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938DFD%07938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D93938D9393938D9393938D9393938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938D9393938D9393938D9393938D9393938D%9393938D9393938D9393938D9393938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938D9393938D9393938D9393938D9393938D%9393938D9393938D93938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938CFD81938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D9393938D938C9393938C938D938C939393%8C9393938C9393938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938CFD0493%8D9393938D9393938D9393938D9393938D9393938D9393938D9393938D93%93938D9393938D9393938D93CAFF9993939399CFCFCA9393CACFCACFCACF%CAC993C9CACFCACFCAFFC993A1FFCACFCACAA0938D9393938D9393938D93%93938D9393938D9393938D9393938D9393938D9393938D9393938D939393%8D9393938D8C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D9393FFFFA0689393FFFFFF93%9393FD07FFA193CAFD07FF8DC9FD06FFA8938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8DFD2D93B5FFFF9A9393FFFFFF999393B5FFFFA1C29AC29ABC93CFFFCA9A%C29AC39A93C9FFCAC29ACAFFFFA0FD2C938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%9393FFFF9A8CCFFFFF93938D9393FFFF9A8C938D938C93CAFFA0938D938C%938DC9FFC38D938CCAFFC98C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D93938D939393%8D9393938D9393938D9393938D9393938D9393938D9393938D9393938D93%93938D9393938D939393CFFFA0CAFFFF9A938D939393CFFF9A938DFD0493%CFFFC38D9393938D93C9FFA0939393CAFFC9938D9393938D9393938D9393%938D9393938D9393938D9393938D9393938D9393938D9393938D9393938D%93938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C9393FD05FF99938D938C9393FFFFC9%9AC29AC39393A7FFA7A09AC3A09A8CCAFFCA99C2A1FFFFC38D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938CFD2E93CFFFFFFFCAFD0793CFFD06FFC393CFFD06FFCA93%C9FD06FFCFFD2D938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C9393FD05FFA1938D93%8C9393FFFFCAA1C9A1CA9A93A8FFCAC9A1CAA7C38CCAFFFFA8CAA1C29393%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938CFD04938D9393938D9393938D9393938D93%93938D9393938D9393938D9393938D9393938D9393938D9393938D93FFFF%9AC3FFFFC99393938D93FFFF9A9393938D9393CAFFC993938D939393A7FF%C3938D9393938D9393938D9393938D9393938D9393938D9393938D939393%8D9393938D9393938D9393938D9393938D9393938D8C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D9392FFFF9A68C3FFFFA1938D9392FFFF9A68938D938C93A8FFA0%938D938C938DC9FFC38D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938DFD2D%93B5FFFF9A9393C3FFFFCA9393B5FFFF9AFD0493B593CFFFC9939393B593%93C9FFC3FD32938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D9393FFFFA08C938DC3FF%FFCA938CFFFFFFCAFFCFFFA793CAFFFFFFCFFFFFFF93C9FFC98D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D93938D9393938D9393938D9393938D93%93938D9393938D9393938D9393938D9393938D9393938D9393938D939393%FFFF9A938D9393C3FFFFCA9ACAFD06FFCF93CFFD07FF93C9FFA19393938D%9393938D9393938D9393938D9393938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938D93938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D9A99938D938C938D99999A9399999A999A999A9393939A999A999A999A%8C9999998C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938CFD4F93B5FD3193%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938CFD04938D9393938D9393938D9393938D9393938D939393%8D9393938D9393938D9393938D9393938D9393938D9393938D9393938D93%93938D9393938D9393938D9393938D9393938D9393938D9393938D939393%8D9393938D9393938D9393938D9393938D9393938D9393938D9393938D93%93938D9393938D9393938D9393938D8C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D9393%9A9AC29A9A8D938C938D938C999A998C938D938C93999A8C938D938C9393%9A99938D938C938D93939A99938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938DFD2993B59393A0FD%07FF9AFD0593C9FFC9FD05939AFFFFBCFD0593BCFFFFA1FD0693CAFFFFFD%29938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C93CAFFFFFFCACACAFFFFFF8C938D9393FF%FFFF93938D938CBCFFFF93938D938C9399FFFFFF9A938C938DC3FFFFCF93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D93938D9393938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938D9393938D939393C9FFFFC9FD049399CA%CA938D9393C9FFFFFFC98D93939399FFFF998D9393938DBCFD04FF99938D%C3FD04FF93938D9393938D9393938D9393938D9393938D9393938D939393%8D9393938D9393938D9393938D93938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C9399FFFFC38D%938C938D9368998D938C93CAFFA8FFCF938C938D9AFFFF93938C938D9399%FD05FF8D99FFFFCAFFA8938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938CFD2993CAFFFFFD0C93A0%FFCFC2FFFFA093939399FFFFBCFD0593C2FFFF9AFFFFCACAFFCAC3FFFFFD%29938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C93CAFFA0938D938C938D938C938D938CCFFFC3%8CC3FFCF93938D9AFFFF93938C938D9399FFFF9399FD04FF9399FFCA938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938CFD04938D9393938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938DFD0493FFFFC38D9393938D9393938D93%93BCFFFF9A939AFFFFC28D9399FFFFBC93938D9393BCFFFF9393A1FFFFC2%8DC2FFFFFD04938D9393938D9393938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938D8C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D93A7FFA1938C93%8D938C938D938C93A1FD07FFA893689AFFFF93938D938C9399FFFF998D93%A1C38D9399FFCA938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938DFD2993C9FFFFFD0A9399FD09FF%99939AFFFFBCFD0593BCFFFFFD0793C2FFFFFD29938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%9393FFFFCA93938D938C9393C38CC3FFFF9399939993CAFFC98CBCFFFF93%938D938C9399FFFF998D938C938D939AFFCA938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D9393%8D9393938D9393938D9393938D9393938D9393938D9393938D9393938D93%93938D9393938D939393A0FFFFFFA1C29AC2A1FFFF99CAFFA1938D939393%9AFFFF9999FFFFC39AC29AC299BCFFFFFD04938D9393C2FFFF93938D9393%938D9393938D9393938D9393938D9393938D9393938D9393938D9393938D%9393938D93938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D939AFD08FFCAA0FFFF998D938C%938D93A8FFA099FD07FFCA99FFFF998C938D938C939AFFFF938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938CFD2C9399C9CAFFFFFFC9C393CACFC9FD0793C3CFCA9ACFCACFCA%CFCAFFA1BCCACFFD0793C2CACFFD29938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8DFD05938C9393938C938D938C938D938C9393938C9393938C9393938C93%93938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938CFD04938D9393938D93%93938D9393938D9393938D9393938D9393938D9393938D9393938D939393%8D9393938D9393938D9393938D9393938D9393938D9393938D9393938D93%93938D9393938D9393938D9393938D9393938D9393938D9393938D939393%8D9393938D9393938D9393938D9393938D9393938D9393938D9393938D8C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938DFD3D93B5FD0793B5939393B5FD37938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938CCA9A9399CA939393CA99CAA8%CFA1938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D9393%8D9393938D9393938D9393938D9393938D9393938D9393938D9393938D93%93938D9393938D9393938D9393938D9393938D9393938D9393BCFFCA93BC%FFFF9393CAC2FFBC93CFCA938D9393938D9393938D9393938D9393938D93%93938D9393938D9393938D9393938D9393938D9393938D9393938D939393%8D9393938D93938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C93A1C9A89A93CAA7CA93CA99CF939393FF93938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938CFD3993FFCAFFC3BCCAB5CACFCAC2CA93%93BCFFBCFD37938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938CC9A79399FFA0CA8C93CAFF99FF9AA0CAC98D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938CFD04938D9393938D9393938D9393938D%9393938D9393938D9393938D9393938D9393938D9393938D9393938D9393%938D9393938D939393A1BC9393A0C9A1938DBCC9BCA1CACAC38D9393938D%9393938D9393938D9393938D9393938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938D9393938D9393938D8C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938DFD%81938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D93938D9393938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938D9393938D9393938D9393938D9393938D%9393938D9393938D9393938D9393938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938D9393938D9393938D9393938D9393938D%9393938D9393938D9393938D9393938D93938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D936899A0C9%A1C99A998C938D938C9393C99A938D938C938DA09AC3A0C293938D938C93%9AC39AC39A9A8C938D99A0C399938C938D9393C3A09A8C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938CFD2793CAFD%07FFCAFD0593C9FFFFFD0693FD06FFC3FD0493FD06FFCA939393FFFFFF99%FD0493FFFFFFFD23938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C9393CAFFFFCAC3A0C9CAFFFF998D938C%99FFFFFFC38D938C9393FFFFCAA0CAFFFFA0938C93CAFFA7C3A7FFFFC38D%9393FFFFFF93938DCAFFFF99938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938CFD04938D9393938D9393938D9393%938D9393938D9393938D9393938D9393938D9393938DCAFFFFA09393938D%939ACAFD0493A0FFFFFFCA9393938D93FFFF9A9393CAFFCF939393CFFFC3%8D93C3FFCA93939399FFFFCA8DC9FFFF9A9393938D9393938D9393938D93%93938D9393938D9393938D9393938D9393938D9393938D8C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D99FF%FFA0938C938D938C938D938C938DCAFFCACAFF9A938D9392FFFFA06893A1%FFA8938D93A7FF9A9368C3FFFF93938D939AFFFFCACAFFA1938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%FD2493A0FFFF9993B5FD0793B593C2FFFF99CAFFCF939393B5FFFFA1B59A%FFFFCA939393CFFFC393C2FFFFCAFD0593C3FFFFFFCA9393B5FD23938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938DC9FFCA8D938C938D938C938D938C93A7FFA19399FFFFBC8D9393FD%07FF93938D93A8FD05FFCF9A8C938D938C93C9FFCA998D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%938D9393938D9393938D9393938D9393938D9393938D9393938D9393938D%9393938D93C9FFA79393938D9393938D93939399FFFFC999C2FFFFA19393%93CFFD05FFA0938D9393CAFD05FFC993938D9393938DC9FFCA8D9393938D%9393938D9393938D9393938D9393938D9393938D9393938D9393938D9393%938D93938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D9368C3FFFF93938D938C938D938C938DC3FD08FF939393%FFFFC399CAFFFF93938C93A8FFA09AA8FFFF9A8D938C938D93A0FFA8938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938CFD24939AFFFFC3FD0793B59399FFFFCFCFCACFCAFFFFC993%93FFFFA09393FFFFCF939393CFFFC39393CAFFCF9393B5939393C9FFCFFD%27938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C93A7FFFFC38D938C938D9AA79A9AFFCF998D938C93A0FF%CA938DFFFFC38D9399FFFFC38C93CAFF9A938D9AFFFFA1938C938D93A0FF%CA938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938CFD04938D9393938D9393938D9393938D9393938D93%93938D9393938D9393938D9393938DBBCFFFFFCFC3C3A1CFFFFF99CAFFC9%8D9393938DBBFFFFA093FFFFA0939393A1FFFF9A8DCFFFC38D9393C9FFFF%99938D9393C9FFCF93938D9393938D9393938D9393938D9393938D939393%8D9393938D9393938D9393938D9393938D8C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D936899A7FD07FFA1%C3FFFF93938C938D9368C3FFFF93FFFFC368938D93A8FFCA93A8FFA0938C%9393CFFFFF93938C93A1FFA8938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938DFD2593B5939399C9C9CA%C3C39A939ACAA0FD0893C9A1BCA0CA9AFD0493C2C3CA99C3C9BCFD049399%CAC9C2939393C2C3C3FD27938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D93938D9393938D9393938D%9393938D9393938D9393938D9393938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938D9393938D9393938D9393938D9393938D%9393938D9393938D9393938D9393938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938D9393938D9393938D9393938D93938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938CFD3993BC93B5939393B5939393BBFD3D938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938DA0A8FFFFFFCAC999938C938DC3FFC9%8D938C938D938CC9FFC38C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938CFD%04938D9393938D9393938D9393938D9393938D9393938D9393938D939393%8D9393938D9393938D9393938D9393938DFD0493CFFD08FFA0938D93C3FF%FFC993938D939393A7FFC3938D9393938D9393938D9393938D9393938D93%93938D9393938D9393938D9393938D9393938D9393938D9393938D939393%8D8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C9393CAFFFFA19A93999A%FFFFFF9A9368C3FFFFFFC28D938C938DC9FFC38D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938DFD3393C3FFFFA0FD0693FFFFFF9393C3FD04FFC2FD04%93C9FFC3FD32938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C93CAFFA1%938D938C938D9393FFFFC38CC9FFC9A7FFFF9A8C938DC9FFC98D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D93938D9393938D9393938D9393938D93%93938D9393938D9393938D9393938D9393938D9393938D9393938D939393%8D93939399FFFFC28D9393938D939393C9FFC993A1FFA093CFFFFF998D93%C9FFA19393938D9393938D9393938D9393938D9393938D9393938D939393%8D9393938D9393938D9393938D9393938D9393938D93938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D9AFFFF99938C938D938C938DC3FFCA8DC3FF%C38D9AFFFFCA9368CAFFC368938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%FD329399FFFFC2FD0893C9FFC993A1FFC39393C2FFFFCA93C3FFA1FD3293%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D93CAFFA1938C938D938C93%93FFFFC38DC3FFC98D938CC3FFFFA1CAFFC38C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938CFD04938D9393938D9393938D9393938D9393938D939393%8D9393938D9393938D9393938D9393938D9393938D9393938D9393C9FFFF%9A938D9393938DCAFFFF9393C3FFA19393938DC9FD04FFC3938D9393938D%9393938D9393938D9393938D9393938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938D8C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C9393FFFFFFA0998C9399CAFFFFA09368C3FFC368938D938CCAFFFF%FFC38D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938DFD349399FD09FFC393%9393C3FFA1FD0693CFFFFFC3FD32938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D9393C9CFFD04FFCA9A938D938CC3FFC38C938D938C9393CF%FFC38D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D93938D9393938D9393%938D9393938D9393938D9393938D9393938D9393938D9393938D9393938D%9393938D9393938D9393938D9393938D9999C299BC93938DFD0493BC9393%8D9393938D93939AFD04938D9393938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938D9393938D9393938D9393938D93938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938CFD81938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938CFD04938D9393938D9393938D939393%8D9393938D9393938D9393938D9393938D9393938D9393938D9393938D93%93938D9393938D9393938D9393938D9393938D9393938D9393938D939393%8D9393938D9393938D9393938D9393938D9393938D9393938D9393938D93%93938D9393938D9393938D9393938D9393938D9393938D8C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%FD81938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D93938D9393938D9393938D9393938D9393938D93%93938D9393938D9393938D9393938D9393938D9393938D9393938D939393%8D9393938D9393938D9393938D9393938D9393938D9393938D9393938D93%93938D9393938D9393938D9393938D9393938D9393938D9393938D939393%8D9393938D9393938D9393938D9393938D93938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938CFD81938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938C938D938C938D938C938D938C938D938C938D938C938D938C%938D938C938D938C938D938C938D938C938D938C938D938C938D938C938D%938C938D938CFD04938D9393938D9393938D9393938D9393938D9393938D%9393938D9393938D9393938D9393938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938D9393938D9393938D9393938D9393938D%9393938D9393938D9393938D9393938D9393938D9393938D9393938D9393%938D9393938D9393938D9393938D8C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D938C938D938C938D93%8C938D938C938D938C938D938C938D938C938D938C938D938C938D938C93%8D938C938D938C938D938C938D938C938D938C938D93%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 A0 O0.1 1 1 0.05 k0 J 0 j 1 w 4 M []0 d0 XR0 -595.2754 m595.2754 -595.2754 L595.2754 0 L0 0 l0 -595.2754 Lfu*u1 D0 0 0 0 k251.9644 -92.5298 m251.7617 -91.394 250.6309 -91.021 249.5615 -91.4214 c248.5806 -91.7886 248.4609 -92.3828 248.4531 -92.8994 c248.3984 -95.9526 252.3887 -94.8926 251.9644 -92.5298 CF0 D243.4614 -110.459 m244.3091 -110.8457 244.9238 -111.4624 245.311 -112.3081 c244.9453 -112.7441 244.875 -113.4741 244.7554 -114.1553 c243.9102 -113.769 243.2939 -113.1543 242.9067 -112.3081 c243.1855 -111.7832 243.3643 -111.1616 243.4614 -110.459 CF249.7476 -132.4551 m250.8262 -133.1006 251.7134 -133.938 252.5186 -134.8579 c252.2725 -136.0889 251.8057 -137.1025 251.5947 -138.3691 c250.5874 -137.6528 249.958 -136.5552 248.8223 -135.9668 c249.0698 -134.7349 249.5366 -133.7222 249.7476 -132.4551 CF260.8369 -129.498 m261.5918 -131.3276 259.5083 -132.5156 258.248 -131.3457 c257.1182 -129.3716 259.7026 -128.1333 260.8369 -129.498 CF260.2822 -138 m259.0449 -137.8765 258.4355 -135.9248 259.7266 -135.2275 c262.147 -133.9189 262.7129 -138.2427 260.2822 -138 CF272.2979 -125.2461 m276.9663 -124.5396 281.8633 -128.0234 278.3955 -132.0859 c275.4785 -135.5024 267.0596 -135.2832 266.752 -130.4219 c266.5439 -127.1523 269.5156 -125.6665 272.2979 -125.2461 CF284.6802 -124.5059 m285.6982 -124.2954 286.2134 -124.8755 286.3433 -125.4312 c286.8599 -127.6294 283.5239 -128.1465 283.3872 -125.9854 c283.3262 -125.0415 283.7378 -124.7026 284.6802 -124.5059 CF287.2656 -132.0859 m287.4238 -133.541 285.3809 -134.4277 284.3096 -133.0093 c283.7568 -130.0273 287.0928 -130.4419 287.2656 -132.0859 CF296.3242 -123.5825 m297.5752 -124.7939 298.2373 -126.5996 299.2813 -128.019 c298.5166 -129.7808 297.4297 -131.2173 296.5093 -132.8247 c295.4541 -131.3525 294.6372 -129.644 293.5522 -128.2036 c294.4961 -126.6812 295.4199 -125.1431 296.3242 -123.5825 CF297.4331 -106.3936 m297.5161 -107.0293 297.3608 -107.4287 297.2485 -107.8716 c297.0327 -107.8418 296.9199 -107.9131 296.8789 -108.0566 c294.3408 -108.3301 295.7656 -104.8076 297.4331 -106.3936 CF306.6738 -130.9761 m307.502 -130.6304 308.4678 -130.8691 308.707 -131.7148 c309.2588 -133.6514 306.335 -134.6997 305.751 -132.8247 c305.3301 -131.4736 305.8955 -131.3018 306.6738 -130.9761 CF309.2627 -126.9102 m308.8105 -127.3398 307.7012 -127.3945 307.0459 -127.0947 c304.7246 -124.3838 310.6934 -123.1587 309.2627 -126.9102 CF313.5137 -128.7578 m313.7236 -126.8809 315.2461 -125.6924 317.7646 -125.2461 c321.2305 -124.6304 327.124 -126.3965 326.082 -131.1606 c325.0029 -136.1001 312.7852 -135.2783 313.5137 -128.7578 CF333.4756 -135.2275 m334.4717 -136.0933 333.7988 -137.9658 332.5518 -138 c330.5332 -138.0532 330.2061 -133.9888 333.4756 -135.2275 CF332.7373 -129.1284 m335.3613 -127.7002 335.3711 -131.7212 333.6621 -131.9009 c332.7139 -131.999 330.918 -130.1177 332.7373 -129.1284 CF340.498 -135.0425 m340.708 -133.8159 342.2354 -133.4155 342.9033 -132.4551 c343.3447 -133.3813 344.1631 -134.666 344.0117 -135.5972 c343.8115 -136.8169 342.1484 -137.6177 341.2383 -138.1851 c341.3291 -136.8784 340.3369 -136.0117 340.498 -135.0425 CF349.1865 -110.459 m349.8916 -110.7383 349.5693 -112.0483 350.1113 -112.4912 c349.7148 -113.2041 348.96 -113.5601 348.4463 -114.1553 c347.9463 -113.7329 347.9434 -112.812 347.707 -112.1216 c347.9258 -111.293 348.9072 -111.2275 349.1865 -110.459 CF1 D242.168 -107.687 m242.0874 -109.4668 241.0532 -110.9043 241.4287 -112.8618 c241.751 -114.5352 243.9121 -115.895 244.7554 -117.4834 c245.3599 -118.6182 245.8472 -120.5337 246.2358 -122.1045 c247.3999 -126.8281 247.5498 -131.833 246.2358 -136.8901 c248.6982 -139.418 251.1284 -141.979 253.998 -144.0986 c276.0327 -134.6943 316.9717 -134.7495 339.0215 -144.0986 c341.7744 -141.8003 344.4697 -139.4438 346.7842 -136.707 c345.376 -131.9268 345.4746 -127.5117 346.6006 -122.8447 c347.0771 -120.8599 347.4941 -118.4805 348.2627 -117.1138 c349.0957 -115.6338 350.6309 -115.1465 351.2207 -113.7861 c352.2627 -111.3813 350.6563 -109.6904 350.666 -107.3164 c350.6748 -105.209 352.042 -103.2686 352.6992 -101.0332 c349.7012 -100.1499 346.6875 -99.2817 343.458 -98.6309 c344.5869 -101.3813 345.8096 -104.0425 346.9678 -106.7627 c345.1133 -105.5386 343.5098 -104.0605 341.6084 -102.8809 c340.7588 -107.5151 339.3652 -112.5894 338.8369 -116.9287 c340.8965 -115.7207 343.3242 -113.8994 345.3066 -113.2314 c343.293 -118.626 340.7139 -124.1235 334.4014 -124.5059 c332.0605 -124.6484 329.1045 -123.7544 327.5615 -122.8447 c324.3906 -120.9731 321.998 -113.9858 326.082 -111.1982 c330.6865 -108.0566 334.2705 -114.0278 332.9219 -118.9624 c336.6885 -117.3413 338.7119 -113.0767 338.0967 -108.7954 c337.3584 -103.6587 330.8867 -99.9995 325.8975 -103.0654 c328.1357 -98.6841 328.084 -90.7017 324.6045 -87.7246 c320.9297 -90.6445 317.8027 -95.0918 318.875 -102.1421 c317.084 -100.8491 315.4678 -99.4297 312.5889 -99.7388 c309.6221 -100.0562 307.4912 -103.3735 307.2295 -106.0225 c306.8838 -109.521 308.7168 -111.4561 310.3721 -112.8618 c310.7793 -113.2065 311.4795 -114.3047 311.666 -113.6011 c311.6787 -110.4331 312.5088 -108.2578 315.1768 -108.2407 c319.5977 -108.2139 320.2393 -114.7964 318.1357 -117.853 c316.3623 -120.4272 311.9766 -121.8286 307.5996 -121.1797 c305.6592 -120.8916 303.3584 -119.4966 302.0537 -118.0376 c300.4092 -116.1963 299.6133 -113.6992 299.0977 -110.459 c301.1387 -111.312 302.8438 -112.5034 304.8262 -113.4165 c304.5479 -109.0117 304.5322 -104.3457 304.457 -99.7388 c302.5439 -100.7217 300.7031 -102.7603 299.0977 -103.436 c299.8447 -100.0552 301.0215 -97.104 301.6846 -93.6396 C291.1494 -93.6396 l292.0537 -96.9854 293.0479 -100.2446 293.9219 -103.6201 c292.5576 -102.8901 291.0747 -101.3115 289.8545 -100.479 c289.561 -100.2764 288.7334 -99.624 288.5605 -100.1089 c288.4409 -104.3623 288.083 -109.3652 288.3765 -113.4165 c290.1035 -112.4922 292.144 -110.9009 293.9219 -110.6436 c293.1152 -115.6621 290.165 -120.52 285.0488 -121.1797 c281.3882 -121.6533 277.3496 -120.7505 275.2534 -118.4082 c272.5366 -115.3716 273.2012 -108.0337 278.0264 -108.2407 c280.7632 -108.3594 281.3589 -111.4185 281.354 -113.9702 c283.5117 -112.354 285.8281 -110.1182 285.7876 -106.7627 c285.75 -103.5059 283.4146 -100.0386 280.2446 -99.7388 c277.5225 -99.4819 275.6016 -101.0889 274.1436 -101.957 c274.9399 -95.2246 272.2729 -90.4165 268.23 -87.9102 c264.8057 -90.75 264.936 -98.7349 266.9351 -103.0654 c265.814 -102.5205 265 -102.0752 263.7944 -101.957 c253.5039 -100.9473 252.0342 -115.9648 259.9136 -118.9624 c259.3115 -114.0298 261.1841 -108.9834 266.0127 -110.6436 c268.3506 -111.4482 269.249 -114.4199 268.9688 -117.1138 c268.7373 -119.3438 267.0107 -121.728 265.457 -122.6582 c256.7837 -127.8481 249.0024 -120.6797 247.7139 -113.0469 c249.1987 -113.9458 251.2148 -115.1499 252.7046 -116.0044 c253.1538 -116.2607 254.0713 -117.167 254.1836 -116.5596 c253.3042 -111.9565 252.1934 -107.5811 251.4111 -102.8809 c249.417 -103.7871 247.6763 -105.9219 246.0503 -106.5771 c247.082 -103.9126 248.792 -100.9419 249.376 -98.4443 c246.4844 -99.3721 243.4883 -100.1982 240.3188 -100.8491 c240.8569 -103.5137 242.2861 -105.0981 242.168 -107.687 CF281.168 -75.5259 m281.4287 -73.269 279.8628 -72.3438 278.2119 -72.5674 c276.2422 -72.8364 275.7266 -73.9663 275.8091 -75.3403 c275.9927 -78.4663 280.8154 -78.5874 281.168 -75.5259 CF321.2783 -80.332 m324.8115 -80.48 324.6855 -74.4531 320.7227 -75.5259 c318.0605 -76.2461 318.6367 -80.2202 321.2783 -80.332 CF329.7793 -80.332 m329.5625 -78.9082 328.418 -78.377 327.0078 -78.6675 c325.3389 -79.0112 325.0654 -79.897 325.1592 -81.0708 c325.3809 -83.8872 330.3311 -83.938 329.7793 -80.332 CF302.2402 -91.791 m302.7861 -87.1616 303.6855 -82.8877 305.751 -79.7764 c320.3086 -82.7173 330.6807 -89.8418 340.3154 -97.7056 c340.6348 -96.8555 341.5244 -96.5742 341.7939 -95.6733 c331.5137 -87.1616 320.5947 -79.29 304.0859 -77.0039 c301.543 -80.8672 300.3477 -86.0791 299.4668 -91.6064 c300.5098 -91.5488 301.1104 -91.9341 302.2402 -91.791 CF310.002 -72.1978 m309.915 -71.9321 309.3057 -71.1206 309.4492 -71.2744 c308.9736 -70.7627 308.0098 -70.2759 306.6738 -70.5342 c305.4648 -70.7686 304.626 -71.5811 304.457 -72.1978 c302.9932 -77.5645 311.5898 -77.0039 310.002 -72.1978 CF317.21 -76.0806 m317.8984 -73.4805 315.9199 -72.3213 314.252 -72.5674 c312.9082 -72.7676 312.1982 -73.5864 312.0361 -74.0469 c310.582 -78.1704 316.4551 -78.9404 317.21 -76.0806 CF327.0078 -142.0654 m315.5527 -139.7275 300.9395 -139.2148 287.6377 -139.8477 c279.1475 -140.2529 269.6152 -140.6646 261.9458 -142.8057 c260.1255 -143.314 256.1689 -144.8403 256.2163 -146.502 c256.2729 -148.5688 261.1411 -149.7163 263.979 -150.3843 c267.4492 -151.2002 270.9409 -151.688 274.1436 -152.0474 c291.4683 -153.9844 313.0469 -154.0962 328.8545 -150.3843 c331.4922 -149.7637 336.708 -148.7715 336.6182 -146.3169 c336.5244 -143.7168 329.7725 -142.6309 327.0078 -142.0654 CF333.291 -86.8003 m335.9727 -86.9282 336.5117 -81.8384 332.9219 -82.7334 c330.2686 -83.3965 331.373 -86.708 333.291 -86.8003 CF343.0879 -94.748 m344.5996 -94.6406 345.2422 -92.5771 344.0117 -91.4214 c340.5469 -90.1294 340.4785 -94.9346 343.0879 -94.748 CF340.6836 -88.2798 m340.5166 -87.397 339.8623 -86.5732 338.2822 -86.9854 c337.1709 -87.2739 336.7676 -87.7598 336.8047 -88.834 c336.9004 -91.7363 341.2275 -91.1182 340.6836 -88.2798 CF271.7422 -80.332 m274.6709 -80.2656 275.2983 -74.3843 271.0029 -75.5259 c267.9263 -76.3428 269.3667 -80.3853 271.7422 -80.332 CF0 D295.3999 -65.1753 m296.2217 -65.5249 295.5522 -67.3623 295.7705 -68.3174 c295.062 -67.7925 294.168 -67.4536 293.3672 -67.0244 c293.9263 -66.291 294.9092 -65.9795 295.3999 -65.1753 CF299.6533 -72.5674 m298.127 -73.7729 293.3174 -74.2056 292.9971 -71.644 c295.1899 -70.8091 298.2803 -71.4438 299.6533 -72.5674 CF297.9888 -65.1753 m298.894 -65.439 299.3652 -66.1406 300.2061 -66.4683 c299.8037 -67.3604 298.8228 -67.6729 297.9888 -68.1328 c297.9888 -65.1753 Lf1 D296.6938 -75.3403 m299.7705 -75.2681 302.2578 -72.917 302.6094 -70.166 c303.0986 -66.3237 300.9082 -64.1338 297.8037 -62.772 c297.9233 -61.7222 297.5605 -60.1865 297.9888 -59.4443 c299.5752 -60.0127 300.8486 -60.895 302.6094 -61.293 C302.6094 -53.3452 l300.8076 -53.8853 299.7568 -55.1758 297.9888 -55.7485 c298.7524 -53.5562 299.8887 -51.7358 300.5762 -49.4644 c297.8643 -49.5864 294.6606 -49.2183 292.2578 -49.6479 c293.2334 -51.6929 294.1748 -53.769 295.0303 -55.9341 c293.4609 -55.1001 292.0957 -54.064 290.4106 -53.3452 C290.4106 -61.293 l292.1543 -60.8823 293.3794 -59.9502 295.0303 -59.4443 C295.0303 -63.1416 l287.9067 -64.459 289.3101 -75.5132 296.6938 -75.3403 CF288.7461 -72.7524 m288.5698 -71.2969 287.5381 -70.1704 285.4194 -70.5342 c283.7617 -70.8193 283.1152 -71.6465 283.0156 -72.938 c282.666 -77.5498 289.2402 -76.8154 288.7461 -72.7524 CF267.8613 -79.9624 m267.5215 -78.7983 266.4219 -78.4595 265.2734 -78.6675 c264.0557 -78.8867 263.5391 -79.5713 263.4238 -79.9624 c262.1816 -84.1582 269.0684 -84.0972 267.8613 -79.9624 CF253.6284 -90.6812 m256.8496 -91.5967 257.0854 -86.0498 253.8115 -86.9854 c252.0635 -87.4854 251.9395 -90.2031 253.6284 -90.6812 CF259.543 -86.8003 m262.3018 -86.9575 262.7617 -81.8086 259.1733 -82.7334 c256.5562 -83.4102 257.6719 -86.6938 259.543 -86.8003 CF295.7705 -83.4736 m292.8413 -84.3823 294.9888 -87.665 296.6938 -87.5405 c298.9985 -87.3726 299.5088 -82.312 295.7705 -83.4736 CF295.7705 -89.2036 m293.4268 -90.1191 295.4058 -92.5435 296.5093 -92.5298 c298.6226 -92.5049 298.9951 -87.9419 295.7705 -89.2036 CF288.3765 -77.0039 m273.5503 -79.5464 260.3774 -87.3228 251.2251 -95.8579 c251.8604 -96.3936 252.3267 -97.0967 252.8896 -97.7056 c262.5117 -89.769 272.8848 -82.5845 287.6377 -79.7764 c289.292 -83.2358 290.3633 -87.2803 290.9634 -91.791 c292.021 -91.9238 292.6167 -91.5933 293.5522 -91.6064 c293.3262 -88.7759 292.7329 -86.3833 291.8896 -83.6587 c291.3472 -81.9106 290.0151 -76.7236 288.3765 -77.0039 CF295.7705 -77.0039 m292.6665 -77.8496 294.1431 -81.9731 296.6938 -81.8101 c299.7617 -81.6133 299.7129 -75.9302 295.7705 -77.0039 CF*UU*u220.0996 -210.9653 m248.021 -238.0835 L262.9346 -238.0835 L230.1162 -206.2397 L256.4893 -177.5615 L242.8657 -177.5615 L220.0996 -202.312 L220.0996 -177.5615 L209.3721 -177.5615 L209.3721 -238.0835 L220.0996 -238.0835 L220.0996 -210.9653 Lf301.4434 -228.2104 m276.0347 -228.2104 L276.0347 -212.5039 L299.8242 -212.5039 L299.8242 -202.6309 L276.0347 -202.6309 L276.0347 -187.4331 L300.6768 -187.4331 L300.6768 -177.562 L265.3091 -177.562 L265.3091 -238.084 L301.4434 -238.084 L301.4434 -228.2104 Lf344.0781 -228.2109 m318.668 -228.2109 L318.668 -212.502 L342.459 -212.5039 L342.459 -202.6313 L318.668 -202.6313 L318.668 -187.4331 L343.3096 -187.4331 L343.3096 -177.5605 L307.9434 -177.5605 L307.9434 -238.084 L344.0781 -238.084 L344.0781 -228.2109 Lfu374.7988 -435.5576 m370.8359 -429.0938 367.7715 -423.9639 363.167 -420.3018 C368.6211 -417.4463 371.7705 -412.2666 371.7344 -405.8242 c371.7432 -400.5078 369.7607 -396.042 366.1816 -393.0059 c362.6045 -389.9629 357.5342 -388.3535 351.4512 -388.3535 C335.5986 -388.3535 L335.5986 -448.874 L346.3242 -448.874 L346.3242 -423.6348 L348.6357 -423.6348 L350.6504 -423.6563 352.1611 -423.8955 354.3477 -425.5625 c356.5254 -427.2402 359.2725 -430.4746 363.0742 -436.3945 C371.0957 -448.876 L384.042 -448.876 L382.6807 -446.9951 L378.665 -441.4434 377.25 -439.5303 374.7988 -435.5576 cf0 D360.7568 -405.7148 m360.748 -407.8975 360.168 -409.8408 358.7012 -411.2715 c357.2334 -412.7031 354.7285 -413.7588 350.5117 -413.7637 C346.3242 -413.7637 L346.3242 -397.8857 L350.5117 -397.8857 L354.4131 -397.8828 356.958 -398.6963 358.4766 -399.96 c359.9893 -401.2168 360.7021 -402.9854 360.7568 -405.502 C360.7568 -405.7148 LfUu1 D264.0078 -469.3018 m254.2988 -469.2969 246.167 -472.8535 240.499 -478.5273 c234.8276 -484.1982 231.6143 -491.9688 231.6143 -500.332 c231.6143 -508.5176 234.7383 -516.2822 240.3418 -521.998 c245.9429 -527.7158 254.0366 -531.3643 263.8384 -531.3604 C263.8481 -531.3604 L273.9751 -531.3613 282.1763 -527.6973 287.8008 -521.9658 c293.4297 -516.2354 296.4858 -508.4697 296.4858 -500.332 c296.4883 -491.9365 293.3423 -484.1611 287.686 -478.4971 c282.0352 -472.8291 273.8813 -469.2969 264.0078 -469.3018 cf0 D264.0078 -521.3184 m251.6411 -521.2822 242.6274 -512.4082 242.5952 -500.332 c242.6299 -488.167 251.6333 -479.3848 264.0078 -479.3447 c276.4688 -479.3848 285.4702 -488.167 285.5049 -500.332 c285.4727 -512.4082 276.4639 -521.2803 264.0078 -521.3184 cfU1 D343.0557 -309.9268 m316.792 -309.9268 L316.7939 -259.2773 L306.0664 -259.2773 L306.0664 -319.7988 L343.0557 -319.7988 L343.0557 -309.9268 Lfu360.8779 -212.9272 m368.3906 -212.9297 L375.3262 -212.9321 380.5527 -211.0791 384.0459 -207.8994 c387.5391 -204.7217 389.1934 -200.2783 389.1865 -195.4595 c389.1885 -190.6133 387.6484 -186.0938 384.3496 -182.8105 c381.0547 -179.52 376.0762 -177.5566 369.499 -177.5615 C350.1514 -177.5615 L350.1514 -238.085 L360.8779 -238.085 L360.8779 -212.9272 Lf0 D360.8779 -187.4331 m369.499 -187.4331 L373.0654 -187.4453 375.1387 -188.4854 376.4121 -189.8779 c377.6826 -191.2793 378.2041 -193.189 378.2041 -195.1177 c378.1172 -200.2813 374.9814 -202.9399 369.1572 -203.0581 C360.8779 -203.0581 L360.8779 -187.4331 LfU1 D358.4893 -276.5176 m374.8076 -297.0327 L377.3154 -297.0327 L393.6367 -276.5176 L393.6367 -319.8008 L404.3662 -319.8008 L404.3662 -259.2788 L394.8545 -259.2788 L376.0635 -282.4546 L357.3574 -259.2788 L347.7627 -259.2788 L347.7627 -319.8008 L358.4893 -319.8008 L358.4893 -276.5176 Lf422.585 -388.3545 m407.3906 -407.6543 L392.3604 -388.3545 L379.2793 -388.3545 L402.1074 -417.3174 L402.1074 -448.875 L412.835 -448.875 L412.835 -417.4033 L435.6572 -388.3545 L422.585 -388.3545 Lfu261.667 -431.7373 m269.4268 -448.876 L280.5435 -448.876 L253.48 -388.0117 L246.0439 -388.0117 L220.0479 -448.876 L231.1499 -448.876 L238.4844 -431.7373 L261.667 -431.7373 Lf0 D249.6816 -404.9912 m257.1978 -421.8643 L242.7144 -421.8643 L249.6816 -404.9912 LfUu1 D268.2686 -258.9355 m242.2739 -319.8018 L253.377 -319.8018 L260.708 -302.6611 L283.8921 -302.6611 L291.6523 -319.8018 L302.7676 -319.8018 L275.7051 -258.9355 L268.2686 -258.9355 Lf0 D264.939 -292.7881 m271.9072 -275.9141 L279.4229 -292.7881 L264.939 -292.7881 LfU1 D350.3105 -513.124 m312.6328 -470.0693 L304.2627 -470.0693 L304.2627 -530.5908 L314.4775 -530.5908 L314.4775 -487.8096 L351.6309 -530.5908 L360.5225 -530.5908 L360.5225 -470.0693 L350.3105 -470.0693 L350.3105 -513.124 Lfu311.5723 -436.3945 m319.5967 -448.876 L332.54 -448.876 L331.1777 -446.9951 L327.1631 -441.4434 325.7471 -439.5303 323.2969 -435.5576 c319.334 -429.0938 316.2686 -423.9639 311.665 -420.3018 C317.1201 -417.4463 320.2695 -412.2666 320.2344 -405.8242 c320.2441 -400.5078 318.2598 -396.042 314.6797 -393.0059 c311.1025 -389.9629 306.0352 -388.3535 299.9492 -388.3535 C284.0981 -388.3535 L284.0981 -448.874 L294.8242 -448.874 L294.8242 -423.6348 L297.1357 -423.6348 L299.1475 -423.6563 300.6582 -423.8955 302.8457 -425.5625 c305.0234 -427.2402 307.7705 -430.4746 311.5723 -436.3945 Cf0 D299.0088 -413.7637 m294.8242 -413.7637 L294.8242 -397.8857 L299.0088 -397.8857 L302.9102 -397.8828 305.4561 -398.6963 306.9766 -399.96 c308.4863 -401.2168 309.1992 -402.9854 309.2529 -405.502 C309.2529 -405.7148 L309.2461 -407.8975 308.665 -409.8408 307.1992 -411.2715 c305.7324 -412.7031 303.2266 -413.7588 299.0088 -413.7637 CfU1 D241.4165 -314.9834 m241.4165 -302.9619 L239.5869 -304.1504 L233.187 -308.3076 226.2261 -310.5283 219.9385 -310.5254 c206.4727 -310.457 197.6431 -302.042 197.5874 -289.624 c197.6167 -277.4834 206.8662 -268.5923 219.5972 -268.5537 c226.1064 -268.5605 231.9868 -270.3394 239.0376 -274.4453 C240.8188 -275.4849 L240.8188 -263.6831 L240.0942 -263.3784 L232.084 -260.019 225.8501 -258.5083 219.6821 -258.5107 c210.1548 -258.5083 201.8672 -261.856 195.9766 -267.541 c190.0801 -273.2183 186.603 -281.2256 186.606 -290.3926 c186.6128 -296.792 189.0894 -304.2842 194.4131 -310.25 c199.7295 -316.2129 207.9492 -320.5771 219.1699 -320.5664 C219.2314 -320.5664 L228.5073 -320.5664 234.9756 -318.3555 240.7798 -315.3154 C241.4165 -314.9834 Lf197.7119 -439.5996 m184.2451 -439.5322 175.4175 -431.1172 175.3623 -418.6982 c175.3901 -406.5586 184.6406 -397.668 197.3711 -397.6289 c203.8799 -397.6357 209.7617 -399.415 216.8125 -403.5225 C218.5947 -404.5596 L218.5947 -392.7549 L217.8677 -392.4512 L209.8604 -389.0908 203.6255 -387.583 197.457 -387.5859 c187.9287 -387.583 179.6421 -390.9307 173.751 -396.6143 c167.855 -402.293 164.3789 -410.3008 164.3813 -419.4678 c164.3862 -425.8652 166.8633 -433.3594 172.186 -439.3252 c177.5039 -445.2871 185.7241 -449.6533 196.9453 -449.6436 C196.9922 -449.6436 L206.2729 -449.6436 212.7476 -447.4336 218.5552 -444.3906 C219.1909 -444.0586 L219.1909 -432.0371 L217.3613 -433.2256 L210.9629 -437.3848 204.0015 -439.6035 197.7119 -439.5996 cfu255.9185 -365.875 m260.6396 -365.875 L263.7544 -358.5859 L273.606 -358.5859 L276.9058 -365.875 L281.6289 -365.875 L270.1274 -340.0039 L266.9678 -340.0039 L255.9185 -365.875 Lf0 D271.7065 -354.3926 m265.5513 -354.3926 L268.5127 -347.2227 L271.7065 -354.3926 LfU1 D302.5996 -358.4482 m286.5889 -340.1494 L283.0322 -340.1494 L283.0322 -365.8721 L287.3711 -365.8721 L287.3711 -347.6904 L303.1641 -365.8721 L306.9414 -365.8721 L306.9414 -340.1494 L302.5996 -340.1494 L302.5996 -358.4482 Lfu311.4043 -340.1494 m311.4043 -365.8721 L321.5498 -365.8721 L329.9707 -365.8584 335.1563 -359.6123 335.1719 -353.0117 c335.1689 -349.9795 334.1289 -346.7734 331.8867 -344.3047 c329.6465 -341.8379 326.1982 -340.1475 321.5137 -340.1494 C311.4043 -340.1494 Lf0 D330.5029 -353.0117 m330.4609 -355.9082 328.835 -361.6641 321.1133 -361.6768 C315.9639 -361.6768 L315.9639 -344.3467 L320.9316 -344.3467 L327.6318 -344.3887 330.457 -348.2666 330.5029 -353.0117 cfU*ULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF