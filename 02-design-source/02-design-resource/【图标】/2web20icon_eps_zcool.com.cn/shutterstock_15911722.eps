%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 13.0.2
%%For: (mike) ()
%%Title: (glossy icons 2 green.eps)
%%CreationDate: 8/8/2008 7:16 PM
%%BoundingBox: 75 0 725 600
%%HiResBoundingBox: 75 0 725 600
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 400.5 299.5 400.5 299.5
%AI3_TileBox: 4 -6 796 606
%AI3_DocumentPreview: Header
%AI5_ArtSize: 650 600
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 3
%AI8_OpenToView: -65.6665 655 1.5 1585 1038 18 1 0 50 79 0 0
%AI5_OpenViewLayers: 777
%%PageOrigin:75 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI5_End_NonPrinting--
8 Bn
%AI5_BeginGradient: (Unnamed gradient 1)
(Unnamed gradient 1) 1 3 Bd
[
<
9898979695959493929291908F8F8E8D8C8B8A898988878685848483828281807F7E7D7C7B7A7877
76757473727170706F6E6D6C6B6A6968676564636261605E5D5B5A59575655545352504F4E
>
<
83828181807F7E7E7D7C7B7A7A79787777767574737271706F6F6E6D6C6C6B6A6A69686766656362
6161605F5E5D5C5B5B5A595857565554535351504F4E4D4C4B4A4847464544434241403F3E
>
<
8181807F7F7E7D7C7B7B7A797878777675757473727271706F6F6E6D6C6C6B6A6A69686767666464
636261605F5E5D5D5C5B5A59585756555554535251504F4E4C4B4A4847464544434241403F
>
<
3332312F2E2C2B2A282725242221201E1D1C1B1A19181716151413121110100F0E0D0C0B0A0A0807
07060605050404030303030202020201010101010100000000000000000000000000000000
>
<
666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8D8E
8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
>
<
666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8D8E
8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
>
<
666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8D8E
8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3
>
4 %_Br
<
4E4D4C4B4A48474645444341403F3E3D3C3B393837363534333130302F2E2D2C2B2A292726252423
2121201F1E1D1C1C1B1A1919181716151413131211100F0D0D0C0B0A090909080707060505050403
030201010000000000
>
<
3E3D3C3B3A39383736353534333231302F2E2D2C2B2A2928272625252423222120201F1E1D1C1B1B
1A1A191817161514141312121110100F0E0D0D0D0C0B0A0A0A090807060606050404040303030202
020100000000000000
>
<
3F3E3D3C3B3A39383837363534333231302F2E2D2C2B2A2929282626252423222121201F1E1D1C1C
1B1B1A191817171615141313121211100F0E0E0D0C0B0B0A0A090807060606050404040303030202
020100000000000000
>
0
<
B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCDCECFD0D1D2D3D4D5D6D7D8D9
DADADBDCDDDEDFE0E1E2E3E3E4E5E6E7E8E9E9EAEBECEDEEEEEFF0F1F2F2F3F4F5F5F6F7F8F8F9FA
FAFBFCFCFDFEFEFFFF
>
<
B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCDCECFD0D1D2D3D4D5D6D7D8D9
DADADBDCDDDEDFE0E1E2E3E3E4E5E6E7E8E9E9EAEBECEDEEEEEFF0F1F2F2F3F4F5F5F6F7F8F8F9FA
FAFBFCFCFDFEFEFFFF
>
<
B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCDCECFD0D1D2D3D4D5D6D7D8D9
DADADBDCDDDEDFE0E1E2E3E3E4E5E6E7E8E9E9EAEBECEDEEEEEFF0F1F2F2F3F4F5F5F6F7F8F8F9FA
FAFBFCFCFDFEFEFFFF
>
4 %_Br
[
0.596078 0.513725 0.505882 0.2 0.4 0.4 0.4 2 50 1.2012 %_BS
%_0.596078 0.513725 0.505882 0.2 0.4 0.4 0.4 2 50 1.2012 Bs
0.305882 0.243137 0.247059 0 0.701961 0.701961 0.701961 2 44.7236 40.5405 %_BS
%_0.305882 0.243137 0.247059 0 0.701961 0.701961 0.701961 2 44.7236 40.5405 Bs
0 0 0 0 1 1 1 2 50 100 %_BS
%_0 0 0 0 1 1 1 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 15)
(Unnamed gradient 15) 0 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324
252627292A2B2C2D2E2F303133333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F50
52535455555657595A5B5D5E6061626364656768696A6B6C6C6D6E6F707071727374757677787979
7A7B7C7D7E7F80818282838484848586878889898A8B8B8C8D8E8F8F909192929293949595969798
9898999A9B9B9C9C9C9D9E9E9F9F9FA0A0A1A1A2A2A3A3A3A4A4A4A5
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B
1C1D1E1F2020212223242526272728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F40
4142434444454647484A4B4C4D4E4F50515353545556575858595A5B5B5C5D5E5F60616162636464
65666768696A6A6B6C6C6D6E6E6F6F7071727374757676777778797A7A7B7C7D7D7E7E7F80818182
8283838485868686878889898A8A8B8B8C8D8D8D8E8F8F8F90909091
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C
1D1E1F2021212223242526282929292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F4041
42434445454647484A4B4C4E4F5051525354555556575859595A5B5C5D5D5E5F6061626364646565
66676768696A6A6B6C6C6D6E6E6F6F70717272737475757576777878797A7B7B7B7C7D7E7F7F8081
818182838484858585868787888888898A8B8B8B8C8D8D8E8E8F8F8F
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000101010101010202020202030303030404050506060707080909
0A0A0B0C0D0E0F1010111213131415161718191A1B1C1C1D1E20212224252728282A2B2C2E2F3132
3233353638393B3B3D3E404143434546484A4A4C4D4F4F5153545456
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9A999897969594939291908F8E8D8C8C
8B8A89888786858483828180807F7E7D7C7B7A79787777767574737271706F6E6E6D6C6B6A696867
6766656463626161605F5E5D5C5C5B5A595858575655555453525251
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9A999897969594939291908F8E8D8C8C
8B8A89888786858483828180807F7E7D7C7B7A79787777767574737271706F6E6E6D6C6B6A696867
6766656463626161605F5E5D5C5C5B5A595858575655555453525251
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9A999897969594939291908F8E8D8C8C
8B8A89888786858483828180807F7E7D7C7B7A79787777767574737271706F6E6E6D6C6B6A696867
6766656463626161605F5E5D5C5C5B5A595858575655555453525251
>
4 %_Br
[
0.647059 0.568627 0.560784 0.337255 0.317647 0.317647 0.317647 2 50 100 %_BS
%_0.647059 0.568627 0.560784 0.337255 0.317647 0.317647 0.317647 2 50 100 Bs
0 0 0 0 1 1 1 2 47.4474 0 %_BS
%_0 0 0 0 1 1 1 2 47.4474 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 16)
(Unnamed gradient 16) 1 2 Bd
[
<
A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0B0B0B1B1B1B1B2B2B2B3B3B3B4B4
B4B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBBBCBCBCBCBDBDBDBDBEBEBEBEBFBFBF
BF
>
<
9192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A1A1A1A2A2A3A3A3A4A4A4
A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABABACACACACACACACACADADADADADADAD
AD
>
<
8F909091919192929393949595969697979899999A9A9B9B9C9D9D9D9E9E9E9F9FA0A0A0A1A1A2A2
A2A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8A8A8A9A9A9A9A9AAAAAAAAAAAAABAB
AB
>
<
56585A5C5D5F61636567696B6D6F71737577797C7E80838587898C8E90939597999C9EA0A2A4A6A9
ABAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4D5D7D8D9DADBDCDDDEDFE0E2E3E4E5
E6
>
<
51504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A
2927262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A090807060504030201
00
>
<
51504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A
2927262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A090807060504030201
00
>
<
51504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A
2927262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A090807060504030201
00
>
4 %_Br
[
0.647059 0.568627 0.560784 0.337255 0.317647 0.317647 0.317647 2 50 0 %_BS
%_0.647059 0.568627 0.560784 0.337255 0.317647 0.317647 0.317647 2 50 0 Bs
0.74902 0.678431 0.670588 0.901961 0 0 0 2 50 100 %_BS
%_0.74902 0.678431 0.670588 0.901961 0 0 0 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 2)
(Unnamed gradient 2) 1 2 Bd
[
<
313131313130303030302F2F2F2F2E2E2E2D2D2C2C2C2B2B2A2A2929272726262525242423212120
201F1E1E1D1C1C1C1B1A1A191818171615141413121110100F0D0C0B0A0909080807060505040302
01000000
>
<
26262626262525252525242424242323232222212121202020201F1F1E1E1D1D1C1C1B1B1B1A1A19
191817171615151414131312111110100F0E0E0D0D0C0B0B0A0A0908070606050504040303020201
00000000
>
<
282828282826262626262525252524242423232222222121212120201F1F1E1E1D1D1C1C1C1B1B1A
1A191818171717161514141312121211100F0F0E0D0C0B0B0B0A0908070606050504040303020201
00000000
>
0
<
CCCCCCCCCCCDCDCDCDCDCECECECECFCFCFD0D0D1D1D1D2D2D3D3D4D4D5D5D6D6D7D7D8D8D9DADADB
DBDCDDDDDEDFDFE0E1E2E2E3E4E4E5E6E7E8E8E9EAEBECECEDEEEFF0F1F2F3F4F4F5F6F7F8F9FAFB
FCFDFEFF
>
<
CCCCCCCCCCCDCDCDCDCDCECECECECFCFCFD0D0D1D1D1D2D2D3D3D4D4D5D5D6D6D7D7D8D8D9DADADB
DBDCDDDDDEDFDFE0E1E2E2E3E4E4E5E6E7E8E8E9EAEBECECEDEEEFF0F1F2F3F4F4F5F6F7F8F9FAFB
FCFDFEFF
>
<
CCCCCCCCCCCDCDCDCDCDCECECECECFCFCFD0D0D1D1D1D2D2D3D3D4D4D5D5D6D6D7D7D8D8D9DADADB
DBDCDDDDDEDFDFE0E1E2E2E3E4E4E5E6E7E8E8E9EAEBECECEDEEEFF0F1F2F3F4F4F5F6F7F8F9FAFB
FCFDFEFF
>
4 %_Br
[
0.192157 0.14902 0.156863 0 0.8 0.8 0.8 2 65.4655 0 %_BS
%_0.192157 0.14902 0.156863 0 0.8 0.8 0.8 2 65.4655 0 Bs
0 0 0 0 1 1 1 2 50 100 %_BS
%_0 0 0 0 1 1 1 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 5)
(Unnamed gradient 5) 0 2 Bd
[
<
00000001020304050506070809090A0B0C
>
<
0000000001020203030404050606070809
>
<
0000000001020203030404050606070809
>
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EF
>
4 %_Br
[
0.047059 0.035294 0.035294 0 0.937255 0.937255 0.937255 2 50 100 %_BS
%_0.047059 0.035294 0.035294 0 0.937255 0.937255 0.937255 2 50 100 Bs
0 0 0 0 1 1 1 2 47.4474 0 %_BS
%_0 0 0 0 1 1 1 2 47.4474 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 6)
(Unnamed gradient 6) 1 2 Bd
[
<
0C0D0F101112131415161718191A1B1C1C1D1E20212324252627292A2B2C2D2E2F3031333435
>
<
090A0A0B0C0D0D0E0F10101112131414151617191A1B1B1C1D1E1F2020212223242526272829
>
<
090A0B0B0C0D0E0F10111212131415161717181A1B1C1C1D1E1F20212122232425262829292A
>
0
<
EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9
>
<
EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9
>
<
EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9
>
4 %_Br
[
0.047059 0.035294 0.035294 0 0.937255 0.937255 0.937255 2 50 0 %_BS
%_0.047059 0.035294 0.035294 0 0.937255 0.937255 0.937255 2 50 0 Bs
0.207843 0.160784 0.164706 0 0.788235 0.788235 0.788235 2 50 100 %_BS
%_0.207843 0.160784 0.164706 0 0.788235 0.788235 0.788235 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 7)
(Unnamed gradient 7) 0 2 Bd
[
<
0000000001010202030304040404040505060607070809090A0A0A0B0B0C0D0D0E0E0F0F10101111
1112121313141516161717181818191A1A1B1C1C1D1D1E1E1E1F1F20202122232324242425262727
282829292A2B2B2C2C2D2D2E2E2F2F2F30303131323334343535353636373738383939393A3A3B3C
3C3D3E3E3E3F3F40404141424242434344444545454646474849494A4A4A4B4B4C4C4D4D4D4E4E4F
4F505051515152525353545454555556565757575858595A5B5B5B5C5C5D5D5D5E5E5F5F60606061
61626262636364646565656767676768686869696A6A6A6B6B6B6C6C6D6D6D6E6E6F6F6F70707171
71727273737374747476767777777777777878797979797A7A
>
0
<
00000102020305060708090B0B0D0E10111213151617181A1B1C1E1F202123242627282A2B2C2D2F
30313334353738393A3C3D3F4041434444464748494B4C4D4F505153545657595A5B5C5D5F606162
64656768696A6B6D6E6F71727475767678797B7C7E7F80828384858788898A8C8D8F909192939596
9698999B9C9E9FA0A2A3A4A6A7A8A9AAABACADAEAEB0B0B2B3B4B5B7B8B9BBBCBDBEC0C1C1C2C2C3
C4C5C6C8C9CACBCDCECFCFD0D1D2D3D4D5D6D7D8D9DADADCDEDEE0E1E3E5E6E7E9E9E9EBECEDEEF0
F1F2F4F3F4F5F7F8F9FAFBFBFBFDFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
0
<
FFFFFEFEFDFDFCFCFBFBFAFAF9F9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F2F1F1F0F0EFEFEEEEEDED
EDECECEBEBEAEAE9E9E8E8E7E7E7E6E6E5E5E4E4E3E3E2E2E2E1E1E0E0DFDFDEDEDDDDDDDCDCDBDB
DADAD9D9D8D8D8D7D7D6D6D5D5D4D4D4D3D3D2D2D1D1D0D0CFCFCFCECECDCDCCCCCBCBCBCACAC9C9
C8C8C7C7C7C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0C0BFBFBEBEBDBDBCBCBCBBBBBABAB9B9B9B8B8B7
B7B6B6B5B5B5B4B4B3B3B2B2B2B1B1B0B0AFAFAFAEAEADADACACACABABAAAAAAA9A9A8A8A7A7A7A6
A6A5A5A5A4A4A3A3A2A2A2A1A1A0A0A09F9F9E9E9E9D9D9C9C9C9B9B9A9A9A999998989897979696
96959594949493939392929191919090908F8F8F8E8E8E8D8D
>
<
FFFFFFFFFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFAFAFAFA
FAFAFAFAF9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F5F5F5
F5F5F5F5F5F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F0F0F0
F0F0F0F0F0F0EFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDECECECECECECECECEB
EBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E7E7E7E7E7E7
E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E5E5E4E4E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E3E2
E2E2E2E2E2E2E2E2E2E1E1E1E1E1E1E1E1E1E1E0E0E0E0E0E0
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADACABAAA9A8A7A6A5A4A3A2A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
8A898887868584838281807F7E7D7C7B7A79787777767574737271706F6E6D6C6B6A696868676665
64636261605F5E5D5C5B5B5A59585756555453525150504F4E4D4C4B4A4948474646454443424140
3F3E3D3D3C3B3A39383736353534333231302F2E2E2D2C2B2A2928272726252423222221201F1E1D
1D1C1B1A191818171615141413121110100F0E0D0D0C0B0B0A
>
4 %_Br
[
0.478431 0 1 0 0.552941 0.878431 0.039216 2 50 100 %_BS
%_0.478431 0 1 0 0.552941 0.878431 0.039216 2 50 100 Bs
0 0 0 0 1 1 1 2 47.4474 0 %_BS
%_0 0 0 0 1 1 1 2 47.4474 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 8)
(Unnamed gradient 8) 1 2 Bd
[
<
7A7B7B7C7D7E7E7F8080818284848586878889898A8B8D8D8E8F9091929393949596979899999B9D
9D9E9FA0A0A1A2A2A3A4A5A5A6A7A7A8A9A9AAABABABACADADAEAFB0B0B1B1B1B2B3B4B4B4
>
<
00000000000000000000000000000000000000000000000000000000000000000000010304050609
0A0C0D0E0F111213141617191A1B1C1D1E2021222325262728292A2B2D2E2F303132333536
>
1
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000001010101010101010102020202030304040405050606070808090A0B0B0C0D0E0F
>
<
8D8C8C8B8A8989888787868584848382828180807F7E7D7D7C7B7B7A797878777676757473737271
71706F6E6E6D6C6C6B6A6969686767666565646362626160605F5E5D5D5C5B5B5A59585857
>
<
E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB8
B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493
>
<
0A0A0A0A0A0909090909090909090908080808080808080807070707070707070707060606060606
06060605050505050505050505040404040404040404030303030303030303030202020202
>
4 %_Br
[
0.478431 0 1 0 0.552941 0.878431 0.039216 2 50 0 %_BS
%_0.478431 0 1 0 0.552941 0.878431 0.039216 2 50 0 Bs
0.705882 0.211765 1 0.058824 0.341176 0.576471 0.007843 2 50 100 %_BS
%_0.705882 0.211765 1 0.058824 0.341176 0.576471 0.007843 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
4 Bn
%AI5_BeginGradient: (Linear Gradient 1)
(Linear Gradient 1) 0 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F20212223
24252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F51
52535455555658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B
7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F9090919293949495969697989899
9A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAAB
ABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C
1D1D1E1F202122222324262728292A2B2C2D2E2F2F30313233343536373838393A3B3C3D3E3F4041
434445464748494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F6061626364646566676869
6A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A
8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3
A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C
1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142
434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566
676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F808181828383
8485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A
9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B
0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B
3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587
898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C
3B3A393837363534333231302F2E2D2C2B2A29282726252423
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A89
8887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261
605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
3837363534333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Linear Gradient 2)
(Linear Gradient 2) 0 6 Bd
[
<
C5C5C5C5C6C6C7C7C8C8C8C8C9C9C9CACBCBCCCCCCCCCCCCCDCDCECECFCFD0D0D1D1D1D1D1D2D2D2
D3D3D3D4D4D4D4D4D4D5D5D5D5D5D6D6D6D6D7D6D7D7D7D7D7D8D8D8D9D9D9DAD9DADADADADADADA
DADADBDBDADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDADBDBDADBDA
DADADADADADADADADADAD9D9D9D9D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D6
>
<
3032343436383A3B3D3F3F4143444648494B4D4F4F51535557595B5C5E6062646567686A6C6E7072
7476787A7D7F81838587898B8D8D8E9092949597999A9C9E9FA1A2A3A5A6A8A9ABACAEAFB0B1B2B3
B4B5B6B7B7B8B9BABBBCBDBEBFC0C0C1C2C2C3C4C4C5C6C7C7C8C9C9C9CACACBCCCCCDCDCECECFCF
CFD0D0D0D1D1D1D2D2D2D3D3D4D3D4D4D4D5D5D5D6D6D6D6D6D6D6D6D6D7D7
>
<
232120201F1E1C1B18171716141312100F0E0D0C0C09080706050402010000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000
>
0
<
0000010101020203030304040505060606070708080809090A0A0B0B0B0C0C0D0D0E0E0E0F0F1010
1111111212131314141415151616171718181819191A1A1B1B1C1C1C1D1D1E1E1F1F202020212122
22232324242425252626272728282829292A2A2B2B2C2C2D2D2D2E2E2F2F30303131323232333334
3435353636373737383839393A3A3B3B3C3C3C3D3D3E3E3F3F404041414242
>
<
A09F9E9E9D9C9B9A99989897969594939291908F8F8E8D8C8B8A89888786858483828281807F7E7D
7C7B7A79787776757473727170706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
555453525251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F
2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
>
<
C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9
C9C9C9C9C9C9C9CACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCF
D0D0D0D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2
>
4 %_Br
<
8282828383838384848485858586868686878787878788888989898A8A8A8B8B8C8C8C8D8D8D8D8E
8E8E8F8F8F8F90909091919292939394949595959696969697979898989899999A9A9A9A9B9B9C9C
9C9C9D9D9E9E9E9E9F9E9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A8A8A8A9A9
AAAAAAAAABABABABACACACADADADADADAEAEAFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5B6B6B7B7B7B9
B8B9B9BABABBBBBBBCBCBDBDBDBDBEBEBFBFBFBFBFC0C0C0C0C1C1C1C1C1C1C1C2C2C2C2C2C2C3C3
C3C3C3C3C3C3C3C3C3C4C3C4C4C4C4C4C4C5C5C5C5C5C5C5C5
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000001010203030405060608080A0A0B0C0C0E0E1010121213131616
18181A1B1B1C1C1E1E2020232325252828292A2B2C2E2E3030
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFEFEFCFBFAF9F9F7F5F4F1F1F0EEEDECEBEBEBEAE8E7E6E6E4E2E1DFDDDCDBDAD9D8D7D6D5D5
D3D2D1D0CECDCBCBCAC8C7C6C5C4C3C2C2C0BFBEBCBBBAB8B7B5B5B4B2B1B0AEADACAAA9A7A6A6A4
A3A1A09E9C9A9997959492908E8E8C8A88868582817E7D7A79767572706F6C6A6866646462605D5C
59575553514E4D4A484644413F3C3A373633312E2C29282523
>
0
<
737373727272727171717070706F6F6F6E6E6E6D6D6D6C6C6B6B6B6A6A6A69696868686767666665
656564646363626262616160605F5F5E5E5D5D5C5C5C5B5B5A5A5959585857575656555554545353
5252515150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464545444443434242414140403F3E3E
3D3D3C3C3B3B3A3A39383837373636353534333332323131302F2F2E2E2D2D2C2B2B2A2A29292827
272626252424232322222120201F1F1E1D1D1C1C1B1A1A191918171716161514141313121111100F
0F0E0E0D0C0C0B0B0A09090807070606050404030302010100
>
<
F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEE
EDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E2E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCCCCCCCBCBCACAC9C9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBFBE
BEBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADACAC
ABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A0
>
<
0F0F10101011111212131314141515161617171819191A1A1B1C1C1D1D1E1F1F2021212223232425
252627272829292A2B2C2C2D2E2E2F303131323334343536373738393A3A3B3C3D3D3E3F40414142
4344454546474849494A4B4C4D4D4E4F5051525253545556575758595A5B5C5D5D5E5F6061626363
6465666768696A6A6B6C6D6E6F70717272737475767778797A7B7B7C7D7E7F808182838485868687
88898A8B8C8D8E8F90919293949495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACAD
AEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6
>
4 %_Br
<
0001030405050608090A0B0D0E0F111213151618191A1C1D1E1F202123242627282A2B2C2D2F3031
32343536373838393B3C3D3E3F4141434445464748494A4B4C4D4F4F51525353535455565758595A
5B5C5C5D5E5F60616162626364656667676869696A6A6B6B6C6D6D6E6F7070707172737374757575
757576767778787879797A7B7B7B7C7C7D7D7D7D7E7E7F80808081818182828282
>
<
444341413F3E3E3C3C3A3939373634343232312F2E2C2C2B292927262624232120201E1D1B1B1A18
181515141212100F0F0C0C0B09090606060404020201000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000
>
1
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4B3B2
B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9E9D9C9B9A99989796959594939291908F8E8D
8D8C8B8A8988878786858483828281807F7E7D7D7C7B7A79797877767675747473
>
<
BFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C6C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECF
CFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDCDDDDDEDEDE
DFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E5E5E6E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBECECECEDED
EEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F7F8F8
>
<
00000000000101010101010101010102020202020202020203030303030303030304040404040404
04040405050505050505050505060606060606060606070707070707070707070808080808080808
0808090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F
>
4 %_Br
0
<
9E9D9B999896959392908F8E8C8B8A88878684838181807E7D7B7A79777675737272706F6D6C6B6A
6A68676564626261605E5D5D5C5A595757565555535251514F4E4E4D4B4B4A4A4848474745454444
>
1
0
1
<
7F808182838485868788898A8B8C8D8E8F90919293939495969798999A9B9C9D9E9E9FA0A1A2A3A4
A4A5A6A7A8A9A9AAABACADADAEAFB0B1B1B2B3B3B4B5B6B6B7B8B8B9BABABBBBBCBCBDBDBEBEBFBF
>
0
4 %_Br
0
<
FDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F8F8F8F7F7F6F6F5F5F5F5F4F4F3F3F2F2
F1F1F0F0EFEFEFEEEEEDEDECECECEBEBEAE9E9E9E8E7E7E7E6E6E5E5E4E3E3E3E2E1E0E0E0DFDEDE
DDDDDCDCDBDADAD9D8D8D7D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCDCCCCCBCACAC9C9C8C7C7C6C6
C5C5C4C3C3C2C2C1C1C0C0BEBEBDBDBCBCBBBBBABAB9B9B7B7B6B6B5B5B3B3B3B2B2B1B1B1B0B0AE
AEAEADADACACACABABABAAAAAAA9A9A9A8A8A8A6A6A6A6A5A5A5A5A4A4A4A4A2A2A2A2A2A1A1A1A1
A19F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E
>
1
0
1
<
000102030405060708090A0B0C0D0E0F10111112131415161718191A1B1C1D1D1E1F202122232424
25262728292A2A2B2C2D2E2F2F3031323334343536373838393A3B3B3C3D3E3E3F40414142434444
454647474849494A4B4B4C4D4E4E4F505051525253535455555657575858595A5A5B5B5C5D5D5E5E
5F5F606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6E6F6F707070717172
72727373747474757575767676777777787878797979797A7A7A7A7B7B7B7B7C7C7C7C7C7D7D7D7D
7D7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F
>
0
4 %_Br
[
0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 %_BS
%_0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 Bs
0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 %_BS
%_0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 Bs
0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 %_BS
%_0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 Bs
0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 %_BS
%_0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 Bs
0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 %_BS
%_0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 Bs
0 0.992157 1 0 1 0 0 2 33.3333 0 %_BS
%_0 0.992157 1 0 1 0 0 2 33.3333 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Radial Gradient 1)
(Radial Gradient 1) 1 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F20212223
24252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F51
52535455555658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B
7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F9090919293949495969697989899
9A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAAB
ABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C
1D1D1E1F202122222324262728292A2B2C2D2E2F2F30313233343536373838393A3B3C3D3E3F4041
434445464748494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F6061626364646566676869
6A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A
8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3
A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C
1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142
434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566
676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F808181828383
8485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A
9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B
0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B
3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587
898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C
3B3A393837363534333231302F2E2D2C2B2A29282726252423
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A89
8887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261
605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
3837363534333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
1 0 50 0 %_BS
%_1 0 50 0 Bs
0 0 50 100 %_BS
%_0 0 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Radial Gradient 2)
(Radial Gradient 2) 1 6 Bd
[
0
<
FDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F8F8F8F7F7F6F6F5F5F5F5F4F4F3F3F2F2
F1F1F0F0EFEFEFEEEEEDEDECECECEBEBEAE9E9E9E8E7E7E7E6E6E5E5E4E3E3E3E2E1E0E0E0DFDEDE
DDDDDCDCDBDADAD9D8D8D7D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCDCCCCCBCACAC9C9C8C7C7C6C6
C5C5C4C3C3C2C2C1C1C0C0BEBEBDBDBCBCBBBBBABAB9B9B7B7B6B6B5B5B3B3B3B2B2B1B1B1B0B0AE
AEAEADADACACACABABABAAAAAAA9A9A9A8A8A8A6A6A6A6A5A5A5A5A4A4A4A4A2A2A2A2A2A1A1A1A1
A19F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E
>
1
0
1
<
000102030405060708090A0B0C0D0E0F10111112131415161718191A1B1C1D1D1E1F202122232424
25262728292A2A2B2C2D2E2F2F3031323334343536373838393A3B3B3C3D3E3E3F40414142434444
454647474849494A4B4B4C4D4E4E4F505051525253535455555657575858595A5A5B5B5C5D5D5E5E
5F5F606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6E6F6F707070717172
72727373747474757575767676777777787878797979797A7A7A7A7B7B7B7B7C7C7C7C7C7D7D7D7D
7D7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F
>
0
4 %_Br
0
<
9E9D9B999896959392908F8E8C8B8A88878684838181807E7D7B7A79777675737272706F6D6C6B6A
6A68676564626261605E5D5D5C5A595757565555535251514F4E4E4D4B4B4A4A4848474745454444
>
1
0
1
<
7F808182838485868788898A8B8C8D8E8F90919293939495969798999A9B9C9D9E9E9FA0A1A2A3A4
A4A5A6A7A8A9A9AAABACADADAEAFB0B1B1B2B3B3B4B5B6B6B7B8B8B9BABABBBBBCBCBDBDBEBEBFBF
>
0
4 %_Br
<
0001030405050608090A0B0D0E0F111213151618191A1C1D1E1F202123242627282A2B2C2D2F3031
32343536373838393B3C3D3E3F4141434445464748494A4B4C4D4F4F51525353535455565758595A
5B5C5C5D5E5F60616162626364656667676869696A6A6B6B6C6D6D6E6F7070707172737374757575
757576767778787879797A7B7B7B7C7C7D7D7D7D7E7E7F80808081818182828282
>
<
444341413F3E3E3C3C3A3939373634343232312F2E2C2C2B292927262624232120201E1D1B1B1A18
181515141212100F0F0C0C0B09090606060404020201000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000
>
1
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4B3B2
B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9E9D9C9B9A99989796959594939291908F8E8D
8D8C8B8A8988878786858483828281807F7E7D7D7C7B7A79797877767675747473
>
<
BFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C6C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECF
CFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDCDDDDDEDEDE
DFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E5E5E6E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBECECECEDED
EEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F7F8F8
>
<
00000000000101010101010101010102020202020202020203030303030303030304040404040404
04040405050505050505050505060606060606060606070707070707070707070808080808080808
0808090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F
>
4 %_Br
<
8282828383838384848485858586868686878787878788888989898A8A8A8B8B8C8C8C8D8D8D8D8E
8E8E8F8F8F8F90909091919292939394949595959696969697979898989899999A9A9A9A9B9B9C9C
9C9C9D9D9E9E9E9E9F9E9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A8A8A8A9A9
AAAAAAAAABABABABACACACADADADADADAEAEAFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5B6B6B7B7B7B9
B8B9B9BABABBBBBBBCBCBDBDBDBDBEBEBFBFBFBFBFC0C0C0C0C1C1C1C1C1C1C1C2C2C2C2C2C2C3C3
C3C3C3C3C3C3C3C3C3C4C3C4C4C4C4C4C4C5C5C5C5C5C5C5C5
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000001010203030405060608080A0A0B0C0C0E0E1010121213131616
18181A1B1B1C1C1E1E2020232325252828292A2B2C2E2E3030
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFEFEFCFBFAF9F9F7F5F4F1F1F0EEEDECEBEBEBEAE8E7E6E6E4E2E1DFDDDCDBDAD9D8D7D6D5D5
D3D2D1D0CECDCBCBCAC8C7C6C5C4C3C2C2C0BFBEBCBBBAB8B7B5B5B4B2B1B0AEADACAAA9A7A6A6A4
A3A1A09E9C9A9997959492908E8E8C8A88868582817E7D7A79767572706F6C6A6866646462605D5C
59575553514E4D4A484644413F3C3A373633312E2C29282523
>
0
<
737373727272727171717070706F6F6F6E6E6E6D6D6D6C6C6B6B6B6A6A6A69696868686767666665
656564646363626262616160605F5F5E5E5D5D5C5C5C5B5B5A5A5959585857575656555554545353
5252515150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464545444443434242414140403F3E3E
3D3D3C3C3B3B3A3A39383837373636353534333332323131302F2F2E2E2D2D2C2B2B2A2A29292827
272626252424232322222120201F1F1E1D1D1C1C1B1A1A191918171716161514141313121111100F
0F0E0E0D0C0C0B0B0A09090807070606050404030302010100
>
<
F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEE
EDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E2E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCCCCCCCBCBCACAC9C9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBFBE
BEBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADACAC
ABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A0
>
<
0F0F10101011111212131314141515161617171819191A1A1B1C1C1D1D1E1F1F2021212223232425
252627272829292A2B2C2C2D2E2E2F303131323334343536373738393A3A3B3C3D3D3E3F40414142
4344454546474849494A4B4C4D4D4E4F5051525253545556575758595A5B5C5D5D5E5F6061626363
6465666768696A6A6B6C6D6E6F70717272737475767778797A7B7B7C7D7E7F808182838485868687
88898A8B8C8D8E8F90919293949495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACAD
AEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6
>
4 %_Br
<
C5C5C5C5C6C6C7C7C8C8C8C8C9C9C9CACBCBCCCCCCCCCCCCCDCDCECECFCFD0D0D1D1D1D1D1D2D2D2
D3D3D3D4D4D4D4D4D4D5D5D5D5D5D6D6D6D6D7D6D7D7D7D7D7D8D8D8D9D9D9DAD9DADADADADADADA
DADADBDBDADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDADBDBDADBDA
DADADADADADADADADADAD9D9D9D9D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D6
>
<
3032343436383A3B3D3F3F4143444648494B4D4F4F51535557595B5C5E6062646567686A6C6E7072
7476787A7D7F81838587898B8D8D8E9092949597999A9C9E9FA1A2A3A5A6A8A9ABACAEAFB0B1B2B3
B4B5B6B7B7B8B9BABBBCBDBEBFC0C0C1C2C2C3C4C4C5C6C7C7C8C9C9C9CACACBCCCCCDCDCECECFCF
CFD0D0D0D1D1D1D2D2D2D3D3D4D3D4D4D4D5D5D5D6D6D6D6D6D6D6D6D6D7D7
>
<
232120201F1E1C1B18171716141312100F0E0D0C0C09080706050402010000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000
>
0
<
0000010101020203030304040505060606070708080809090A0A0B0B0B0C0C0D0D0E0E0E0F0F1010
1111111212131314141415151616171718181819191A1A1B1B1C1C1C1D1D1E1E1F1F202020212122
22232324242425252626272728282829292A2A2B2B2C2C2D2D2D2E2E2F2F30303131323232333334
3435353636373737383839393A3A3B3B3C3C3C3D3D3E3E3F3F404041414242
>
<
A09F9E9E9D9C9B9A99989897969594939291908F8F8E8D8C8B8A89888786858483828281807F7E7D
7C7B7A79787776757473727170706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
555453525251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F
2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
>
<
C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9
C9C9C9C9C9C9C9CACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCF
D0D0D0D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2
>
4 %_Br
[
0 0.992157 1 0 1 0 0 2 33.3333 0 %_BS
%_0 0.992157 1 0 1 0 0 2 33.3333 0 Bs
0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 %_BS
%_0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 Bs
0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 %_BS
%_0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 Bs
0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 %_BS
%_0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 Bs
0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 %_BS
%_0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 Bs
0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 %_BS
%_0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Offset Squares Pattern)
(Offset Squares Pattern) 0 0 55.0781 55.0801 [
%AI3_Tile
(0 O 0 R 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa
 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
0 0 m
0 55.0801 L
55.0781 55.0801 L
55.0781 0 L
0 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.043137 0 0.713725 0 1 1 0.4 Xa
 0.043137 0 0.713725 0 1 1 0.4 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
26.1436 52.3262 m
26.1436 29.4307 L
3.03125 29.4307 L
3.03125 52.3262 L
26.1436 52.3262 L
f
25.0264 50.123 m
5.89063 50.123 L
5.89063 32.4961 L
25.0264 32.4961 L
25.0264 50.123 L
f
*U
*u
5.89063 50.123 m
25.0264 50.123 L
25.0264 32.4961 L
5.89063 32.4961 L
5.89063 50.123 L
n
10.0313 34.2578 m
24.1338 34.2578 L
24.1338 48.3613 L
10.0313 48.3613 L
10.0313 34.2578 L
n
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0.501961 0.984314 0 0.968627 0.576471 0.117647 Xa
 0 0.501961 0.984314 0 0.968627 0.576471 0.117647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
22.4082 48.793 m
8.30566 48.793 L
8.30566 34.6895 L
22.4082 34.6895 L
22.4082 48.793 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.003922 0.984314 0.976471 0 0.929412 0.12549 0.141176 Xa
 0.003922 0.984314 0.976471 0 0.929412 0.12549 0.141176 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
52.6943 24.7852 m
52.6943 1.67578 L
28.9355 1.67578 L
28.9355 24.7852 L
52.6943 24.7852 L
f
47.6777 22.582 m
30.0527 22.582 L
30.0527 4.95703 L
47.6777 4.95703 L
47.6777 22.582 L
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa
 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
30.0527 22.582 m
50.6982 22.582 L
50.6982 4.95703 L
30.0527 4.95703 L
30.0527 22.582 L
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.501961 0 0.992157 0 0.54902 0.776471 0.247059 Xa
 0.501961 0 0.992157 0 0.54902 0.776471 0.247059 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
47.4199 21.252 m
32.2393 21.252 L
32.2393 6.50293 L
47.4199 6.50293 L
47.4199 21.252 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.698039 0.14902 0 0 0.160784 0.670588 0.886275 Xa
 0.698039 0.14902 0 0 0.160784 0.670588 0.886275 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
27.5391 27.5391 m
27.5391 0 L
0 0 L
0 27.5391 L
27.5391 27.5391 L
f
25.4316 26.1445 m
2.75293 26.1445 L
2.75293 2.16992 L
25.4316 2.16992 L
25.4316 26.1445 L
f
*U
*u
4.95605 7.40039 m
22.582 7.40039 L
22.582 25.0273 L
4.95605 25.0273 L
4.95605 7.40039 L
n
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.188235 0 0.980392 0 0.85098 0.878431 0.129412 Xa
 0.188235 0 0.980392 0 0.85098 0.878431 0.129412 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
22.582 5.67383 m
4.95605 5.67383 L
4.95605 25.0273 L
22.582 25.0273 L
22.582 5.67383 L
f
20.3887 21.3281 m
7.58105 21.3281 L
7.58105 10.0313 L
20.3887 10.0313 L
20.3887 21.3281 L
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 Xa
 0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
6.93555 8.73633 m
21.0371 8.73633 L
21.0371 22.8379 L
6.93555 22.8379 L
6.93555 8.73633 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.623529 0 0.003922 0 0.2 0.776471 0.956863 Xa
 0.623529 0 0.003922 0 0.2 0.776471 0.956863 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
55.0781 55.0801 m
55.0781 27.5391 L
27.5391 27.5391 L
27.5391 55.0801 L
55.0781 55.0801 L
f
52.3252 50.9688 m
30.292 50.9688 L
30.292 28.9355 L
52.3252 28.9355 L
52.3252 50.9688 L
f
*U
*u
30.292 50.9688 m
52.3252 50.9688 L
52.3252 28.9355 L
30.292 28.9355 L
30.292 50.9688 L
n
32.4951 30.0527 m
50.1221 30.0527 L
50.1221 47.6777 L
32.4951 47.6777 L
32.4951 30.0527 L
n
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.043137 0 0.713725 0 1 1 0.4 Xa
 0.043137 0 0.713725 0 1 1 0.4 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
50.1221 30.0527 m
32.4951 30.0527 L
32.4951 48.9727 L
50.1221 48.9727 L
50.1221 30.0527 L
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0.901961 0 0 1 0.2 0.6 Xa
 0 0.901961 0 0 1 0.2 0.6 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
34.9063 33.749 m
49.0078 33.749 L
49.0078 47.8506 L
34.9063 47.8506 L
34.9063 33.749 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 1 1 1 Xa
(White)
Pc
0.74902 0.678431 0.670588 0.901961 0 0 0 Xa
(Black)
Pc
0 0.992157 1 0 1 0 0 Xa
(RGB Red)
Pc
0.062745 0 0.964706 0 1 1 0 Xa
(RGB Yellow)
Pc
0.627451 0 1 0 0 1 0 Xa
(RGB Green)
Pc
0.517647 0 0.12549 0 0 1 1 Xa
(RGB Cyan)
Pc
0.882353 0.768627 0 0 0 0 1 Xa
(RGB Blue)
Pc
0.270588 0.815686 0 0 1 0 1 Xa
(RGB Magenta)
Pc
0.168627 0.980392 0.92549 0.066667 0.756863 0.152941 0.176471 Xa
(R=193 G=39 B=45)
Pc
0.003922 0.992157 0.972549 0 0.929412 0.109804 0.141176 Xa
(R=237 G=28 B=36)
Pc
0 0.796078 0.968627 0 0.945098 0.352941 0.141176 Xa
(R=241 G=90 B=36)
Pc
0 0.501961 0.984314 0 0.968627 0.576471 0.117647 Xa
(R=247 G=147 B=30)
Pc
0 0.34902 0.870588 0 0.984314 0.690196 0.231373 Xa
(R=251 G=176 B=59)
Pc
0.047059 0 0.933333 0 0.988235 0.933333 0.129412 Xa
(R=252 G=238 B=33)
Pc
0.188235 0 0.980392 0 0.85098 0.878431 0.129412 Xa
(R=217 G=224 B=33)
Pc
0.501961 0 0.992157 0 0.54902 0.776471 0.247059 Xa
(R=140 G=198 B=63)
Pc
0.745098 0 0.996078 0 0.223529 0.709804 0.290196 Xa
(R=57 G=181 B=74)
Pc
0.862745 0.176471 1 0.039216 0 0.572549 0.270588 Xa
(R=0 G=146 B=69)
Pc
0.901961 0.333333 0.988235 0.258824 0 0.407843 0.215686 Xa
(R=0 G=104 B=55)
Pc
0.760784 0 0.74902 0 0.133333 0.709804 0.45098 Xa
(R=34 G=181 B=115)
Pc
0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa
(R=0 G=169 B=157)
Pc
0.698039 0.14902 0 0 0.160784 0.670588 0.886275 Xa
(R=41 G=171 B=226)
Pc
0.87451 0.52549 0 0 0 0.443137 0.737255 Xa
(R=0 G=113 B=188)
Pc
0.992157 0.964706 0.035294 0.003922 0.180392 0.192157 0.572549 Xa
(R=46 G=49 B=146)
Pc
1 1 0.262745 0.247059 0.105882 0.078431 0.392157 Xa
(R=27 G=20 B=100)
Pc
0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa
(R=102 G=45 B=145)
Pc
0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 Xa
(R=147 G=39 B=143)
Pc
0.34902 1 0.372549 0.109804 0.619608 0 0.364706 Xa
(R=158 G=0 B=93)
Pc
0.117647 1 0.494118 0.007843 0.831373 0.078431 0.352941 Xa
(R=212 G=20 B=90)
Pc
0 0.968627 0.203922 0 0.929412 0.117647 0.47451 Xa
(R=237 G=30 B=121)
Pc
0.227451 0.27451 0.4 0 0.780392 0.698039 0.6 Xa
(R=199 G=178 B=153)
Pc
0.4 0.427451 0.52549 0.066667 0.6 0.52549 0.458824 Xa
(R=153 G=134 B=117)
Pc
0.505882 0.529412 0.607843 0.235294 0.45098 0.388235 0.341176 Xa
(R=115 G=99 B=87)
Pc
0.576471 0.603922 0.639216 0.419608 0.32549 0.278431 0.254902 Xa
(R=83 G=71 B=65)
Pc
0.227451 0.384314 0.635294 0.011765 0.776471 0.611765 0.427451 Xa
(R=198 G=156 B=109)
Pc
0.317647 0.490196 0.741176 0.098039 0.65098 0.486275 0.321569 Xa
(R=166 G=124 B=82)
Pc
0.360784 0.572549 0.839216 0.227451 0.54902 0.384314 0.223529 Xa
(R=140 G=98 B=57)
Pc
0.392157 0.639216 0.933333 0.356863 0.458824 0.298039 0.141176 Xa
(R=117 G=76 B=36)
Pc
0.415686 0.698039 0.968627 0.490196 0.376471 0.219608 0.07451 Xa
(R=96 G=56 B=19)
Pc
0.478431 0.733333 0.835294 0.682353 0.258824 0.129412 0.043137 Xa
(R=66 G=33 B=11)
Pc
Bb
2 (Linear Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Linear Gradient 1)
Pc
Bb
0 0 0 0 Bh
2 (Radial Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Radial Gradient 1)
Pc
Bb
2 (Linear Gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Linear Gradient 2)
Pc
Bb
0 0 0 0 Bh
2 (Radial Gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Radial Gradient 2)
Pc
(Offset Squares Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Offset Squares Pattern)
Pc
0 g
(K=100)
Pc
0.1 g
(K=90)
Pc
0.2 g
(K=80)
Pc
0.3 g
(K=70)
Pc
0.4 g
(K=60)
Pc
0.5 g
(K=50)
Pc
0.6 g
(K=40)
Pc
0.7 g
(K=30)
Pc
0.8 g
(K=20)
Pc
0.9 g
(K=10)
Pc
0.95 g
(R=241 G=241  B=242)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(Shadows) Ln
0 A
1 Ap
0 O
0 J 0 j 1 w 4 M []0 d0 XR
719.667 42.3672 m
719.667 30.4082 659.7324 20.707 585.8086 20.707 c
511.8789 20.707 451.9473 30.4082 451.9473 42.3672 c
451.9473 54.333 511.8789 64.0264 585.8086 64.0264 c
659.7324 64.0264 719.667 54.333 719.667 42.3672 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 1) 585.8066 -2773.2822 0 133.8638 1 0 0 0.1618 0 6626.0723 Bg
133.8638 0 0 -21.6592 585.8066 42.3672 Bm
f
0 BB
496.8984 410.8301 m
496.8984 407.2603 479.0088 404.3647 456.9453 404.3647 c
434.8789 404.3647 416.9893 407.2603 416.9893 410.8301 c
416.9893 414.4014 434.8789 417.2949 456.9453 417.2949 c
479.0088 417.2949 496.8984 414.4014 496.8984 410.8301 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 456.9434 -496.0068 0 39.9561 1 0 0 0.1618 0 6626.0723 Bg
39.9561 0 0 -6.46489 456.9434 410.8301 Bm
f
0 BB
392.644 410.8301 m
392.644 407.2603 374.7549 404.3647 352.6904 404.3647 c
330.6235 404.3647 312.7354 407.2603 312.7354 410.8301 c
312.7354 414.4014 330.6235 417.2949 352.6904 417.2949 c
374.7549 417.2949 392.644 414.4014 392.644 410.8301 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 352.6895 -496.0068 0 39.9558 1 0 0 0.1618 0 6626.0723 Bg
39.9558 0 0 -6.46485 352.6895 410.8301 Bm
f
0 BB
288.3892 410.8301 m
288.3892 407.2603 270.5 404.3647 248.4355 404.3647 c
226.3691 404.3647 208.4805 407.2603 208.4805 410.8301 c
208.4805 414.4014 226.3691 417.2949 248.4355 417.2949 c
270.5 417.2949 288.3892 414.4014 288.3892 410.8301 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 248.4346 -496.0068 0 39.9558 1 0 0 0.1618 0 6626.0723 Bg
39.9558 0 0 -6.46485 248.4346 410.8301 Bm
f
0 BB
184.1343 410.8301 m
184.1343 407.2603 166.2451 404.3647 144.1807 404.3647 c
122.1138 404.3647 104.2261 407.2603 104.2261 410.8301 c
104.2261 414.4014 122.1138 417.2949 144.1807 417.2949 c
166.2451 417.2949 184.1343 414.4014 184.1343 410.8301 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 144.1802 -496.0068 0 39.9556 1 0 0 0.1618 0 6626.0723 Bg
39.9556 0 0 -6.46481 144.1802 410.8301 Bm
f
0 BB
496.8984 317.001 m
496.8984 313.4312 479.0088 310.5356 456.9453 310.5356 c
434.8789 310.5356 416.9893 313.4312 416.9893 317.001 c
416.9893 320.5723 434.8789 323.4658 456.9453 323.4658 c
479.0088 323.4658 496.8984 320.5723 496.8984 317.001 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 456.9434 -1075.915 0 39.9561 1 0 0 0.1618 0 6626.0723 Bg
39.9561 0 0 -6.46489 456.9434 317.001 Bm
f
0 BB
392.644 317.001 m
392.644 313.4312 374.7549 310.5356 352.6904 310.5356 c
330.6235 310.5356 312.7354 313.4312 312.7354 317.001 c
312.7354 320.5723 330.6235 323.4658 352.6904 323.4658 c
374.7549 323.4658 392.644 320.5723 392.644 317.001 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 352.6895 -1075.915 0 39.9558 1 0 0 0.1618 0 6626.0723 Bg
39.9558 0 0 -6.46485 352.6895 317.001 Bm
f
0 BB
288.3892 317.001 m
288.3892 313.4312 270.5 310.5356 248.4355 310.5356 c
226.3691 310.5356 208.4805 313.4312 208.4805 317.001 c
208.4805 320.5723 226.3691 323.4658 248.4355 323.4658 c
270.5 323.4658 288.3892 320.5723 288.3892 317.001 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 248.4346 -1075.915 0 39.9558 1 0 0 0.1618 0 6626.0723 Bg
39.9558 0 0 -6.46485 248.4346 317.001 Bm
f
0 BB
184.1343 317.001 m
184.1343 313.4312 166.2451 310.5356 144.1807 310.5356 c
122.1138 310.5356 104.2261 313.4312 104.2261 317.001 c
104.2261 320.5723 122.1138 323.4658 144.1807 323.4658 c
166.2451 323.4658 184.1343 320.5723 184.1343 317.001 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 144.1802 -1075.915 0 39.9556 1 0 0 0.1618 0 6626.0723 Bg
39.9556 0 0 -6.46481 144.1802 317.001 Bm
f
0 BB
392.644 129.3418 m
392.644 125.7725 374.7549 122.877 352.6904 122.877 c
330.6235 122.877 312.7354 125.7725 312.7354 129.3418 c
312.7354 132.9131 330.6235 135.8066 352.6904 135.8066 c
374.7549 135.8066 392.644 132.9131 392.644 129.3418 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 352.6895 -2235.7354 0 39.9553 1 0 0 0.1618 0 6626.0723 Bg
39.9553 0 0 -6.46477 352.6895 129.3418 Bm
f
0 BB
288.3892 129.3418 m
288.3892 125.7725 270.5 122.877 248.4355 122.877 c
226.3691 122.877 208.4805 125.7725 208.4805 129.3418 c
208.4805 132.9131 226.3691 135.8066 248.4355 135.8066 c
270.5 135.8066 288.3892 132.9131 288.3892 129.3418 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 248.4346 -2235.7354 0 39.9553 1 0 0 0.1618 0 6626.0723 Bg
39.9553 0 0 -6.46477 248.4346 129.3418 Bm
f
0 BB
184.1343 129.3418 m
184.1343 125.7725 166.2451 122.877 144.1807 122.877 c
122.1138 122.877 104.2261 125.7725 104.2261 129.3418 c
104.2261 132.9131 122.1138 135.8066 144.1807 135.8066 c
166.2451 135.8066 184.1343 132.9131 184.1343 129.3418 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 144.1802 -2235.7354 0 39.9551 1 0 0 0.1618 0 6626.0723 Bg
39.9551 0 0 -6.46473 144.1802 129.3418 Bm
f
0 BB
392.644 35.5127 m
392.644 31.9434 374.7549 29.0479 352.6904 29.0479 c
330.6235 29.0479 312.7354 31.9434 312.7354 35.5127 c
312.7354 39.084 330.6235 41.9775 352.6904 41.9775 c
374.7549 41.9775 392.644 39.084 392.644 35.5127 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 352.6895 -2815.6426 0 39.9553 1 0 0 0.1618 0 6626.0723 Bg
39.9553 0 0 -6.46477 352.6895 35.5127 Bm
f
0 BB
288.3892 35.5127 m
288.3892 31.9434 270.5 29.0479 248.4355 29.0479 c
226.3691 29.0479 208.4805 31.9434 208.4805 35.5127 c
208.4805 39.084 226.3691 41.9775 248.4355 41.9775 c
270.5 41.9775 288.3892 39.084 288.3892 35.5127 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 248.4346 -2815.6426 0 39.9553 1 0 0 0.1618 0 6626.0723 Bg
39.9553 0 0 -6.46477 248.4346 35.5127 Bm
f
0 BB
184.1343 35.5127 m
184.1343 31.9434 166.2451 29.0479 144.1807 29.0479 c
122.1138 29.0479 104.2261 31.9434 104.2261 35.5127 c
104.2261 39.084 122.1138 41.9775 144.1807 41.9775 c
166.2451 41.9775 184.1343 39.084 184.1343 35.5127 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 144.1802 -2815.6426 0 39.9551 1 0 0 0.1618 0 6626.0723 Bg
39.9551 0 0 -6.46473 144.1802 35.5127 Bm
f
0 BB
392.644 223.1709 m
392.644 219.6016 374.7549 216.7061 352.6904 216.7061 c
330.6235 216.7061 312.7354 219.6016 312.7354 223.1709 c
312.7354 226.7422 330.6235 229.6357 352.6904 229.6357 c
374.7549 229.6357 392.644 226.7422 392.644 223.1709 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 352.6895 -1655.8281 0 39.9548 1 0 0 0.1618 0 6626.0723 Bg
39.9548 0 0 -6.46469 352.6895 223.1709 Bm
f
0 BB
288.3892 223.1709 m
288.3892 219.6016 270.5 216.7061 248.4355 216.7061 c
226.3691 216.7061 208.4805 219.6016 208.4805 223.1709 c
208.4805 226.7422 226.3691 229.6357 248.4355 229.6357 c
270.5 229.6357 288.3892 226.7422 288.3892 223.1709 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 248.4346 -1655.8281 0 39.9548 1 0 0 0.1618 0 6626.0723 Bg
39.9548 0 0 -6.46469 248.4346 223.1709 Bm
f
0 BB
184.1343 223.1709 m
184.1343 219.6016 166.2451 216.7061 144.1807 216.7061 c
122.1138 216.7061 104.2261 219.6016 104.2261 223.1709 c
104.2261 226.7422 122.1138 229.6357 144.1807 229.6357 c
166.2451 229.6357 184.1343 226.7422 184.1343 223.1709 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 144.1802 -1655.8281 0 39.9546 1 0 0 0.1618 0 6626.0723 Bg
39.9546 0 0 -6.46465 144.1802 223.1709 Bm
f
0 BB
601.1533 410.8301 m
601.1533 407.2603 583.2646 404.3647 561.1992 404.3647 c
539.1328 404.3647 521.2451 407.2603 521.2451 410.8301 c
521.2451 414.4014 539.1328 417.2949 561.1992 417.2949 c
583.2646 417.2949 601.1533 414.4014 601.1533 410.8301 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 561.1992 -496.0068 0 39.9556 1 0 0 0.1618 0 6626.0723 Bg
39.9556 0 0 -6.46481 561.1992 410.8301 Bm
f
0 BB
601.1533 317.001 m
601.1533 313.4312 583.2646 310.5356 561.1992 310.5356 c
539.1328 310.5356 521.2451 313.4312 521.2451 317.001 c
521.2451 320.5723 539.1328 323.4658 561.1992 323.4658 c
583.2646 323.4658 601.1533 320.5723 601.1533 317.001 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 561.1992 -1075.915 0 39.9556 1 0 0 0.1618 0 6626.0723 Bg
39.9556 0 0 -6.46481 561.1992 317.001 Bm
f
0 BB
705.4082 317.001 m
705.4082 313.4312 687.5195 310.5356 665.4551 310.5356 c
643.3877 310.5356 625.5 313.4312 625.5 317.001 c
625.5 320.5723 643.3877 323.4658 665.4551 323.4658 c
687.5195 323.4658 705.4082 320.5723 705.4082 317.001 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 665.4541 -1075.915 0 39.9556 1 0 0 0.1618 0 6626.0723 Bg
39.9556 0 0 -6.46481 665.4541 317.001 Bm
f
0 BB
705.4082 410.8301 m
705.4082 407.2603 687.5195 404.3647 665.4551 404.3647 c
643.3877 404.3647 625.5 407.2603 625.5 410.8301 c
625.5 414.4014 643.3877 417.2949 665.4551 417.2949 c
687.5195 417.2949 705.4082 414.4014 705.4082 410.8301 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 665.4541 -496.0068 0 39.9556 1 0 0 0.1618 0 6626.0723 Bg
39.9556 0 0 -6.46481 665.4541 410.8301 Bm
f
0 BB
392.644 504.6592 m
392.644 501.0898 374.7549 498.1943 352.6904 498.1943 c
330.6235 498.1943 312.7354 501.0898 312.7354 504.6592 c
312.7354 508.2305 330.6235 511.1245 352.6904 511.1245 c
374.7549 511.1245 392.644 508.2305 392.644 504.6592 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 352.6895 83.9043 0 39.9563 1 0 0 0.1618 0 6626.0723 Bg
39.9563 0 0 -6.46493 352.6895 504.6597 Bm
f
0 BB
288.3892 504.6592 m
288.3892 501.0898 270.5 498.1943 248.4355 498.1943 c
226.3691 498.1943 208.4805 501.0898 208.4805 504.6592 c
208.4805 508.2305 226.3691 511.1245 248.4355 511.1245 c
270.5 511.1245 288.3892 508.2305 288.3892 504.6592 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 248.4346 83.9043 0 39.9563 1 0 0 0.1618 0 6626.0723 Bg
39.9563 0 0 -6.46493 248.4346 504.6597 Bm
f
0 BB
184.1343 504.6592 m
184.1343 501.0898 166.2451 498.1943 144.1807 498.1943 c
122.1138 498.1943 104.2261 501.0898 104.2261 504.6592 c
104.2261 508.2305 122.1138 511.1245 144.1807 511.1245 c
166.2451 511.1245 184.1343 508.2305 184.1343 504.6592 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 144.1802 83.9043 0 39.9561 1 0 0 0.1618 0 6626.0723 Bg
39.9561 0 0 -6.46489 144.1802 504.6597 Bm
f
0 BB
705.4082 504.6592 m
705.4082 501.0898 687.5195 498.1943 665.4551 498.1943 c
643.3877 498.1943 625.5 501.0898 625.5 504.6592 c
625.5 508.2305 643.3877 511.1245 665.4551 511.1245 c
687.5195 511.1245 705.4082 508.2305 705.4082 504.6592 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 665.4541 83.9043 0 39.9561 1 0 0 0.1618 0 6626.0723 Bg
39.9561 0 0 -6.46489 665.4541 504.6597 Bm
f
0 BB
601.1533 504.6592 m
601.1533 501.0898 583.2646 498.1943 561.1992 498.1943 c
539.1328 498.1943 521.2451 501.0898 521.2451 504.6592 c
521.2451 508.2305 539.1328 511.1245 561.1992 511.1245 c
583.2646 511.1245 601.1533 508.2305 601.1533 504.6592 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 561.1992 83.9043 0 39.9561 1 0 0 0.1618 0 6626.0723 Bg
39.9561 0 0 -6.46489 561.1992 504.6597 Bm
f
0 BB
496.8984 504.6592 m
496.8984 501.0898 479.0088 498.1943 456.9453 498.1943 c
434.8789 498.1943 416.9893 501.0898 416.9893 504.6592 c
416.9893 508.2305 434.8789 511.1245 456.9453 511.1245 c
479.0088 511.1245 496.8984 508.2305 496.8984 504.6592 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 2) 456.9434 83.9043 0 39.9565 1 0 0 0.1618 0 6626.0723 Bg
39.9565 0 0 -6.46497 456.9434 504.6597 Bm
f
0 BB
725 0 m
75 0 L
75 600 L
725 600 L
725 0 L
n
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Buttons) Ln
0 A
0 O
0 J 0 j 1 w 4 M []0 d0 XR
378.6064 444.8008 m
378.6064 425.2031 362.7197 409.3169 343.1221 409.3169 c
323.5254 409.3169 307.6387 425.2031 307.6387 444.8008 c
307.6387 464.3975 323.5254 480.2837 343.1221 480.2837 c
362.7197 480.2837 378.6064 464.3975 378.6064 444.8008 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 16) 321.5415 456.3906 -52.2957 73.4714 1 0 0 1 0 0 Bg
44.9341 -58.1289 -58.1289 -44.9341 321.5415 456.3906 Bm
f
0 BB
374.6997 454.3486 m
374.6997 441.269 360.5625 438.917 343.1221 438.917 c
325.6826 438.917 311.5449 441.269 311.5449 454.3486 c
311.5449 467.4277 325.6826 480.0332 343.1221 480.0332 c
360.5625 480.0332 374.6997 467.4277 374.6997 454.3486 c
Bb
1 (Unnamed gradient 15) 343.1226 479.7769 -90 40.8599 1 0 0 1 0 0 Bg
-0.000002 -40.8599 -67.1548 0.000003 376.6997 479.7769 Xm
-0.000356 -8137.3789 -67.1548 0.000003 376.7002 8617.1553 Bc
-0.000002 -40.8599 -67.1548 0.000003 376.6997 479.7769 Bm
-0.000356 -8137.3789 -67.1548 0.000003 376.6997 438.917 Bc
f
0 BB
170.48 350.9712 m
170.48 331.374 154.5933 315.4878 134.9956 315.4878 c
115.3994 315.4878 99.5127 331.374 99.5127 350.9712 c
99.5127 370.5684 115.3994 386.4546 134.9956 386.4546 c
154.5933 386.4546 170.48 370.5684 170.48 350.9712 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 16) 113.415 362.5615 -52.2957 73.4714 1 0 0 1 0 0 Bg
44.9341 -58.1289 -58.1289 -44.9341 113.415 362.5615 Bm
f
0 BB
166.5737 360.519 m
166.5737 347.4395 152.436 345.0879 134.9956 345.0879 c
117.5566 345.0879 103.4189 347.4395 103.4189 360.519 c
103.4189 373.5986 117.5566 386.2036 134.9956 386.2036 c
152.436 386.2036 166.5737 373.5986 166.5737 360.519 c
Bb
1 (Unnamed gradient 15) 134.9966 385.9473 -90 40.8594 1 0 0 1 0 0 Bg
-0.000002 -40.8594 -67.1548 0.000003 168.5737 385.9473 Xm
-0.000347 -7929.2534 -67.1548 0.000003 168.5742 8315.2002 Bc
-0.000002 -40.8594 -67.1548 0.000003 168.5737 385.9473 Bm
-0.000347 -7929.2534 -67.1548 0.000003 168.5737 345.0879 Bc
f
0 BB
274.6328 444.8003 m
274.6328 425.2026 258.7461 409.3169 239.1489 409.3169 c
219.5522 409.3169 203.6655 425.2026 203.6655 444.8003 c
203.6655 464.3979 219.5522 480.2837 239.1489 480.2837 c
258.7461 480.2837 274.6328 464.3979 274.6328 444.8003 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) -2716.373 2449.9834 -52.2957 322.0998 0.2281 0 0 0.2281 6851.0459 6656.6538 Bg
44.9338 -58.1286 -58.1286 -44.9338 217.5684 456.3906 Bm
f
0 BB
270.7266 454.3481 m
270.7266 441.2686 256.5889 438.917 239.1489 438.917 c
221.7095 438.917 207.5718 441.2686 207.5718 454.3481 c
207.5718 467.4287 221.7095 480.0332 239.1489 480.0332 c
256.5889 480.0332 270.7266 467.4287 270.7266 454.3481 c
Bb
1 (Unnamed gradient 5) 239.1489 479.7769 -90 40.8599 1 0 0 1 0 0 Bg
-0.000002 -40.8599 -67.1548 0.000003 272.7266 479.7769 Xm
-0.000351 -8033.4053 -67.1548 0.000003 272.7271 8513.1816 Bc
-0.000002 -40.8599 -67.1548 0.000003 272.7266 479.7769 Bm
-0.000351 -8033.4053 -67.1548 0.000003 272.7266 438.917 Bc
f
0 BB
169.875 444.8003 m
169.875 425.2026 153.9883 409.3149 134.3911 409.3149 c
114.7939 409.3149 98.9072 425.2026 98.9072 444.8003 c
98.9072 464.397 114.7939 480.2847 134.3911 480.2847 c
153.9883 480.2847 169.875 464.397 169.875 444.8003 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 8) 112.8101 456.3906 -52.2957 73.4726 1 0 0 1 0 0 Bg
44.9348 -58.1299 -58.1299 -44.9348 112.8101 456.3906 Bm
f
0 BB
165.9688 454.3481 m
165.9688 441.2676 151.8306 438.917 134.3906 438.917 c
116.9507 438.917 102.8135 441.2676 102.8135 454.3481 c
102.8135 467.4277 116.9507 480.0332 134.3906 480.0332 c
151.8306 480.0332 165.9688 467.4277 165.9688 454.3481 c
Bb
1 (Unnamed gradient 7) 134.3911 479.7769 -90 40.8599 1 0 0 1 0 0 Bg
-0.000002 -40.8599 -67.1553 0.000003 167.9688 479.7769 Xm
-0.000347 -7928.6475 -67.1553 0.000003 167.9692 8408.4248 Bc
-0.000002 -40.8599 -67.1553 0.000003 167.9688 479.7769 Bm
-0.000347 -7928.6475 -67.1553 0.000003 167.9688 438.917 Bc
f
0 BB
483.1436 350.9712 m
483.1436 331.374 467.2559 315.4878 447.6592 315.4878 c
428.0625 315.4878 412.1748 331.374 412.1748 350.9712 c
412.1748 370.5684 428.0625 386.4546 447.6592 386.4546 c
467.2559 386.4546 483.1436 370.5684 483.1436 350.9712 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 16) 426.0781 362.5615 -52.2957 73.4717 1 0 0 1 0 0 Bg
44.9343 -58.1292 -58.1292 -44.9343 426.0781 362.5615 Bm
f
0 BB
479.2363 360.519 m
479.2363 347.4395 465.0986 345.0879 447.6592 345.0879 c
430.2197 345.0879 416.082 347.4395 416.082 360.519 c
416.082 373.5986 430.2197 386.2036 447.6592 386.2036 c
465.0986 386.2036 479.2363 373.5986 479.2363 360.519 c
Bb
1 (Unnamed gradient 15) 447.6592 385.9473 -90 40.8594 1 0 0 1 0 0 Bg
-0.000002 -40.8594 -67.1543 0.000003 481.2363 385.9473 Xm
-0.00036 -8241.915 -67.1543 0.000003 481.2363 8627.8623 Bc
-0.000002 -40.8594 -67.1543 0.000003 481.2363 385.9473 Bm
-0.00036 -8241.915 -67.1543 0.000003 481.2363 345.0879 Bc
f
0 BB
378.8877 350.9707 m
378.8877 331.3735 363.0015 315.4878 343.4033 315.4878 c
323.8066 315.4878 307.9204 331.3735 307.9204 350.9707 c
307.9204 370.5688 323.8066 386.4546 343.4033 386.4546 c
363.0015 386.4546 378.8877 370.5688 378.8877 350.9707 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) -2259.3154 2038.6367 -52.2957 322.0998 0.2281 0 0 0.2281 6851.0459 6656.6543 Bg
44.9338 -58.1286 -58.1286 -44.9338 321.8232 362.5615 Bm
f
0 BB
374.981 360.5186 m
374.981 347.4395 360.8438 345.0874 343.4033 345.0874 c
325.9644 345.0874 311.8271 347.4395 311.8271 360.5186 c
311.8271 373.5996 325.9644 386.2036 343.4033 386.2036 c
360.8438 386.2036 374.981 373.5996 374.981 360.5186 c
Bb
1 (Unnamed gradient 5) 343.4038 385.9473 -90 40.8599 1 0 0 1 0 0 Bg
-0.000002 -40.8599 -67.1538 0.000003 376.981 385.9473 Xm
-0.000356 -8137.6597 -67.1538 0.000003 376.9814 8523.6074 Bc
-0.000002 -40.8599 -67.1538 0.000003 376.981 385.9473 Bm
-0.000356 -8137.6597 -67.1538 0.000003 376.981 345.0874 Bc
f
0 BB
274.7275 350.9707 m
274.7275 331.3735 258.8408 315.4858 239.2446 315.4858 c
219.6465 315.4858 203.7598 331.3735 203.7598 350.9707 c
203.7598 370.5679 219.6465 386.4556 239.2446 386.4556 c
258.8408 386.4556 274.7275 370.5679 274.7275 350.9707 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 8) 217.6626 362.5615 -52.2957 73.4726 1 0 0 1 0 0 Bg
44.9348 -58.1299 -58.1299 -44.9348 217.6626 362.5615 Bm
f
0 BB
270.8213 360.5186 m
270.8213 347.4385 256.6831 345.0874 239.2441 345.0874 c
221.8032 345.0874 207.666 347.4385 207.666 360.5186 c
207.666 373.5986 221.8032 386.2036 239.2441 386.2036 c
256.6831 386.2036 270.8213 373.5986 270.8213 360.5186 c
Bb
1 (Unnamed gradient 7) 239.2437 385.9473 -90 40.8599 1 0 0 1 0 0 Bg
-0.000002 -40.8599 -67.1553 0.000003 272.8213 385.9473 Xm
-0.000351 -8033.5 -67.1553 0.000003 272.8218 8419.4473 Bc
-0.000002 -40.8599 -67.1553 0.000003 272.8213 385.9473 Bm
-0.000351 -8033.5 -67.1553 0.000003 272.8213 345.0874 Bc
f
0 BB
483.1436 444.8003 m
483.1436 425.2026 467.2559 409.3149 447.6602 409.3149 c
428.0625 409.3149 412.1748 425.2026 412.1748 444.8003 c
412.1748 464.397 428.0625 480.2847 447.6602 480.2847 c
467.2559 480.2847 483.1436 464.397 483.1436 444.8003 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 8) 426.0781 456.3906 -52.2957 73.473 1 0 0 1 0 0 Bg
44.9351 -58.1302 -58.1302 -44.9351 426.0781 456.3906 Bm
f
0 BB
479.2373 454.3481 m
479.2373 441.2676 465.0986 438.917 447.6602 438.917 c
430.2197 438.917 416.082 441.2676 416.082 454.3481 c
416.082 467.4277 430.2197 480.0332 447.6602 480.0332 c
465.0986 480.0332 479.2373 467.4277 479.2373 454.3481 c
Bb
1 (Unnamed gradient 7) 447.6602 479.7769 -90 40.8599 1 0 0 1 0 0 Bg
-0.000002 -40.8599 -67.1553 0.000003 481.2373 479.7769 Xm
-0.00036 -8241.916 -67.1553 0.000003 481.2373 8721.6934 Bc
-0.000002 -40.8599 -67.1553 0.000003 481.2373 479.7769 Bm
-0.00036 -8241.916 -67.1553 0.000003 481.2373 438.917 Bc
f
0 BB
274.7485 257.1426 m
274.7485 237.5449 258.8618 221.6582 239.2642 221.6582 c
219.668 221.6582 203.7813 237.5449 203.7813 257.1426 c
203.7813 276.7383 219.668 292.625 239.2642 292.625 c
258.8618 292.625 274.7485 276.7383 274.7485 257.1426 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 16) 217.6836 268.7324 -52.2957 73.4717 1 0 0 1 0 0 Bg
44.9343 -58.1292 -58.1292 -44.9343 217.6836 268.7324 Bm
f
0 BB
270.8423 266.6895 m
270.8423 253.6113 256.7046 251.2588 239.2642 251.2588 c
221.8252 251.2588 207.6875 253.6113 207.6875 266.6895 c
207.6875 279.7686 221.8252 292.375 239.2642 292.375 c
256.7046 292.375 270.8423 279.7686 270.8423 266.6895 c
Bb
1 (Unnamed gradient 15) 239.2651 292.1191 -90 40.8599 1 0 0 1 0 0 Bg
-0.000002 -40.8599 -67.1548 0.000003 272.8423 292.1191 Xm
-0.000351 -8033.521 -67.1548 0.000003 272.8428 8325.6406 Bc
-0.000002 -40.8599 -67.1548 0.000003 272.8423 292.1191 Bm
-0.000351 -8033.521 -67.1548 0.000003 272.8423 251.2588 Bc
f
0 BB
587.3975 444.8003 m
587.3975 425.2026 571.5117 409.3169 551.9131 409.3169 c
532.3154 409.3169 516.4297 425.2026 516.4297 444.8003 c
516.4297 464.3979 532.3154 480.2837 551.9131 480.2837 c
571.5117 480.2837 587.3975 464.3979 587.3975 444.8003 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) -1345.2017 2449.9834 -52.2957 322.1013 0.2281 0 0 0.2281 6851.0459 6656.6538 Bg
44.934 -58.1288 -58.1288 -44.934 530.332 456.3906 Bm
f
0 BB
583.4902 454.3481 m
583.4902 441.2686 569.3535 438.917 551.9131 438.917 c
534.4736 438.917 520.3369 441.2686 520.3369 454.3481 c
520.3369 467.4287 534.4736 480.0332 551.9131 480.0332 c
569.3535 480.0332 583.4902 467.4287 583.4902 454.3481 c
Bb
1 (Unnamed gradient 5) 551.9141 479.7769 -90 40.8599 1 0 0 1 0 0 Bg
-0.000002 -40.8599 -67.1533 0.000003 585.4902 479.7769 Xm
-0.000365 -8346.1699 -67.1533 0.000003 585.4902 8825.9463 Bc
-0.000002 -40.8599 -67.1533 0.000003 585.4902 479.7769 Bm
-0.000365 -8346.1699 -67.1533 0.000003 585.4902 438.917 Bc
f
0 BB
378.6416 163.3125 m
378.6416 143.7158 362.7549 127.8291 343.1577 127.8291 c
323.561 127.8291 307.6743 143.7158 307.6743 163.3125 c
307.6743 182.9092 323.561 198.7959 343.1577 198.7959 c
362.7549 198.7959 378.6416 182.9092 378.6416 163.3125 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 16) 321.5771 174.9033 -52.2957 73.4713 1 0 0 1 0 0 Bg
44.934 -58.1288 -58.1288 -44.934 321.5771 174.9033 Bm
f
0 BB
374.7354 172.8604 m
374.7354 159.7813 360.5977 157.4297 343.1577 157.4297 c
325.7183 157.4297 311.5806 159.7813 311.5806 172.8604 c
311.5806 185.9395 325.7183 198.5449 343.1577 198.5449 c
360.5977 198.5449 374.7354 185.9395 374.7354 172.8604 c
Bb
1 (Unnamed gradient 15) 343.1577 198.2891 -90 40.859 1 0 0 1 0 0 Bg
-0.000002 -40.859 -67.1548 0.000003 376.7354 198.2891 Xm
-0.000356 -8137.4141 -67.1548 0.000003 376.7358 8335.7031 Bc
-0.000002 -40.859 -67.1548 0.000003 376.7354 198.2891 Bm
-0.000356 -8137.4141 -67.1548 0.000003 376.7354 157.4297 Bc
f
0 BB
675.7637 159.3066 m
675.7637 93.6504 622.5391 40.4268 556.8789 40.4268 c
491.2256 40.4268 438 93.6504 438 159.3066 c
438 224.9619 491.2256 278.1855 556.8789 278.1855 c
622.5391 278.1855 675.7637 224.9619 675.7637 159.3066 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 16) 484.5791 198.1377 -52.2957 246.151 1 0 0 1 0 0 Bg
150.5426 -194.7492 -194.7492 -150.5426 484.5791 198.1377 Bm
f
0 BB
662.6768 191.2949 m
662.6768 147.4766 615.3105 139.5977 556.8789 139.5977 c
498.4521 139.5977 451.0889 147.4766 451.0889 191.2949 c
451.0889 235.1162 498.4521 277.3477 556.8789 277.3477 c
615.3105 277.3477 662.6768 235.1162 662.6768 191.2949 c
Bb
1 (Unnamed gradient 15) 556.8828 276.4893 -90 136.8914 1 0 0 1 0 0 Bg
-0.000006 -136.8914 -215.5879 0.000009 664.6768 276.4893 Xm
-0.000365 -8351.7412 -215.5879 0.000009 664.6768 8628.2305 Bc
-0.000006 -136.8914 -215.5879 0.000009 664.6768 276.4893 Bm
-0.000365 -8351.7412 -215.5879 0.000009 664.6768 139.5977 Bc
f
0 BB
274.8193 163.3125 m
274.8193 143.7148 258.9326 127.8291 239.335 127.8291 c
219.7383 127.8291 203.8516 143.7148 203.8516 163.3125 c
203.8516 182.9102 219.7383 198.7959 239.335 198.7959 c
258.9326 198.7959 274.8193 182.9102 274.8193 163.3125 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) -2715.5576 1215.9336 -52.2957 322.1019 0.2281 0 0 0.2281 6851.0459 6656.6543 Bg
44.9341 -58.129 -58.129 -44.9341 217.7544 174.9033 Bm
f
0 BB
270.9126 172.8604 m
270.9126 159.7813 256.7754 157.4287 239.335 157.4287 c
221.8955 157.4287 207.7583 159.7813 207.7583 172.8604 c
207.7583 185.9404 221.8955 198.5449 239.335 198.5449 c
256.7754 198.5449 270.9126 185.9404 270.9126 172.8604 c
Bb
1 (Unnamed gradient 5) 239.3354 198.2891 -90 40.8599 1 0 0 1 0 0 Bg
-0.000002 -40.8599 -67.1543 0.000003 272.9126 198.2891 Xm
-0.000351 -8033.5918 -67.1543 0.000003 272.9131 8231.8809 Bc
-0.000002 -40.8599 -67.1543 0.000003 272.9126 198.2891 Bm
-0.000351 -8033.5918 -67.1543 0.000003 272.9126 157.4287 Bc
f
0 BB
170.6016 163.3125 m
170.6016 143.7148 154.7148 127.8271 135.1187 127.8271 c
115.5205 127.8271 99.6338 143.7148 99.6338 163.3125 c
99.6338 182.9092 115.5205 198.7969 135.1187 198.7969 c
154.7148 198.7969 170.6016 182.9092 170.6016 163.3125 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 8) 113.5366 174.9033 -52.2957 73.4729 1 0 0 1 0 0 Bg
44.935 -58.1301 -58.1301 -44.935 113.5366 174.9033 Bm
f
0 BB
166.6958 172.8604 m
166.6958 159.7803 152.5571 157.4287 135.1182 157.4287 c
117.6777 157.4287 103.54 159.7803 103.54 172.8604 c
103.54 185.9395 117.6777 198.5449 135.1182 198.5449 c
152.5571 198.5449 166.6958 185.9395 166.6958 172.8604 c
Bb
1 (Unnamed gradient 7) 135.1177 198.2891 -90 40.8599 1 0 0 1 0 0 Bg
-0.000002 -40.8599 -67.1558 0.000003 168.6958 198.2891 Xm
-0.000347 -7929.374 -67.1558 0.000003 168.6963 8127.6631 Bc
-0.000002 -40.8599 -67.1558 0.000003 168.6958 198.2891 Bm
-0.000347 -7929.374 -67.1558 0.000003 168.6958 157.4287 Bc
f
0 BB
587.3975 350.9707 m
587.3975 331.3735 571.5117 315.4858 551.915 315.4858 c
532.3164 315.4858 516.4307 331.3735 516.4307 350.9707 c
516.4307 370.5679 532.3164 386.4556 551.915 386.4556 c
571.5117 386.4556 587.3975 370.5679 587.3975 350.9707 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 8) 530.333 362.5615 -52.2957 73.4722 1 0 0 1 0 0 Bg
44.9346 -58.1296 -58.1296 -44.9346 530.333 362.5615 Bm
f
0 BB
583.4922 360.5186 m
583.4922 347.4385 569.3545 345.0874 551.915 345.0874 c
534.4736 345.0874 520.3369 347.4385 520.3369 360.5186 c
520.3369 373.5986 534.4736 386.2036 551.915 386.2036 c
569.3545 386.2036 583.4922 373.5986 583.4922 360.5186 c
Bb
1 (Unnamed gradient 7) 551.9141 385.9473 -90 40.8599 1 0 0 1 0 0 Bg
-0.000002 -40.8599 -67.1553 0.000003 585.4922 385.9473 Xm
-0.000365 -8346.1699 -67.1553 0.000003 585.4922 8732.1172 Bc
-0.000002 -40.8599 -67.1553 0.000003 585.4922 385.9473 Bm
-0.000365 -8346.1699 -67.1553 0.000003 585.4922 345.0874 Bc
f
0 BB
170.5542 69.4824 m
170.5542 49.8867 154.6675 34 135.0693 34 c
115.4731 34 99.5864 49.8867 99.5864 69.4824 c
99.5864 89.0791 115.4731 104.9668 135.0693 104.9668 c
154.6675 104.9668 170.5542 89.0791 170.5542 69.4824 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 16) 113.4893 81.0742 -52.2957 73.4717 1 0 0 1 0 0 Bg
44.9343 -58.1292 -58.1292 -44.9343 113.4893 81.0742 Bm
f
0 BB
166.6475 79.0303 m
166.6475 65.9521 152.5098 63.6006 135.0693 63.6006 c
117.6304 63.6006 103.4932 65.9521 103.4932 79.0303 c
103.4932 92.1104 117.6304 104.7158 135.0693 104.7158 c
152.5098 104.7158 166.6475 92.1104 166.6475 79.0303 c
Bb
1 (Unnamed gradient 15) 135.0703 104.46 -90 40.859 1 0 0 1 0 0 Bg
-0.000002 -40.859 -67.1543 0.000003 168.6475 104.46 Xm
-0.000347 -7929.3267 -67.1543 0.000003 168.6479 8033.7866 Bc
-0.000002 -40.859 -67.1543 0.000003 168.6475 104.46 Bm
-0.000347 -7929.3267 -67.1543 0.000003 168.6475 63.6006 Bc
f
0 BB
378.6348 69.4824 m
378.6348 49.8857 362.748 34 343.1504 34 c
323.5537 34 307.667 49.8857 307.667 69.4824 c
307.667 89.0801 323.5537 104.9668 343.1504 104.9668 c
362.748 104.9668 378.6348 89.0801 378.6348 69.4824 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) -2260.4263 804.5786 -52.2957 322.1013 0.2281 0 0 0.2281 6851.0459 6656.6538 Bg
44.934 -58.1288 -58.1288 -44.934 321.5698 81.0732 Bm
f
0 BB
374.728 79.0303 m
374.728 65.9512 360.5908 63.5996 343.1504 63.5996 c
325.7114 63.5996 311.5732 65.9512 311.5732 79.0303 c
311.5732 92.1113 325.7114 104.7158 343.1504 104.7158 c
360.5908 104.7158 374.728 92.1113 374.728 79.0303 c
Bb
1 (Unnamed gradient 5) 343.1509 104.46 -90 40.8599 1 0 0 1 0 0 Bg
-0.000002 -40.8599 -67.1548 0.000003 376.728 104.46 Xm
-0.000356 -8137.4072 -67.1548 0.000003 376.7285 8241.8672 Bc
-0.000002 -40.8599 -67.1548 0.000003 376.728 104.46 Bm
-0.000356 -8137.4072 -67.1548 0.000003 376.728 63.5996 Bc
f
0 BB
274.8633 69.4824 m
274.8633 49.8857 258.9771 33.998 239.3804 33.998 c
219.7827 33.998 203.8965 49.8857 203.8965 69.4824 c
203.8965 89.0791 219.7827 104.9678 239.3804 104.9678 c
258.9771 104.9678 274.8633 89.0791 274.8633 69.4824 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 8) 217.7993 81.0732 -52.2957 73.4715 1 0 0 1 0 0 Bg
44.9342 -58.129 -58.129 -44.9342 217.7993 81.0732 Bm
f
0 BB
270.958 79.0303 m
270.958 65.9502 256.8188 63.5996 239.3799 63.5996 c
221.9399 63.5996 207.8018 65.9502 207.8018 79.0303 c
207.8018 92.1104 221.9399 104.7158 239.3799 104.7158 c
256.8188 104.7158 270.958 92.1104 270.958 79.0303 c
Bb
1 (Unnamed gradient 7) 239.3799 104.46 -90 40.8599 1 0 0 1 0 0 Bg
-0.000002 -40.8599 -67.1563 0.000003 272.958 104.46 Xm
-0.000351 -8033.6357 -67.1563 0.000003 272.9585 8138.0957 Bc
-0.000002 -40.8599 -67.1563 0.000003 272.958 104.46 Bm
-0.000351 -8033.6357 -67.1563 0.000003 272.958 63.5996 Bc
f
0 BB
691.6523 350.9707 m
691.6523 331.3735 675.7656 315.4878 656.167 315.4878 c
636.5703 315.4878 620.6846 331.3735 620.6846 350.9707 c
620.6846 370.5688 636.5703 386.4546 656.167 386.4546 c
675.7656 386.4546 691.6523 370.5688 691.6523 350.9707 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) -888.144 2038.6367 -52.2957 322.1013 0.2281 0 0 0.2281 6851.0459 6656.6543 Bg
44.934 -58.1288 -58.1288 -44.934 634.5869 362.5615 Bm
f
0 BB
687.7451 360.5186 m
687.7451 347.4395 673.6074 345.0874 656.167 345.0874 c
638.7285 345.0874 624.5918 347.4395 624.5918 360.5186 c
624.5918 373.5996 638.7285 386.2036 656.167 386.2036 c
673.6074 386.2036 687.7451 373.5996 687.7451 360.5186 c
Bb
1 (Unnamed gradient 5) 656.168 385.9473 -90 40.8599 1 0 0 1 0 0 Bg
-0.000002 -40.8599 -67.1533 0.000003 689.7451 385.9473 Xm
-0.000369 -8450.4238 -67.1533 0.000003 689.7451 8836.3711 Bc
-0.000002 -40.8599 -67.1533 0.000003 689.7451 385.9473 Bm
-0.000369 -8450.4238 -67.1533 0.000003 689.7451 345.0874 Bc
f
0 BB
691.6523 444.8003 m
691.6523 425.2036 675.7656 409.3169 656.168 409.3169 c
636.5713 409.3169 620.6855 425.2036 620.6855 444.8003 c
620.6855 464.3975 636.5713 480.2837 656.168 480.2837 c
675.7656 480.2837 691.6523 464.3975 691.6523 444.8003 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 16) 634.5879 456.3906 -52.2957 73.471 1 0 0 1 0 0 Bg
44.9339 -58.1286 -58.1286 -44.9339 634.5879 456.3906 Bm
f
0 BB
687.7461 454.3486 m
687.7461 441.2695 673.6084 438.9175 656.168 438.9175 c
638.7285 438.9175 624.5918 441.2695 624.5918 454.3486 c
624.5918 467.4277 638.7285 480.0332 656.168 480.0332 c
673.6084 480.0332 687.7461 467.4277 687.7461 454.3486 c
Bb
1 (Unnamed gradient 15) 656.1689 479.7769 -90 40.8594 1 0 0 1 0 0 Bg
-0.000002 -40.8594 -67.1543 0.000003 689.7461 479.7769 Xm
-0.000369 -8450.4248 -67.1543 0.000003 689.7461 8930.2021 Bc
-0.000002 -40.8594 -67.1543 0.000003 689.7461 479.7769 Bm
-0.000369 -8450.4248 -67.1543 0.000003 689.7461 438.9175 Bc
f
0 BB
170.3955 257.1426 m
170.3955 237.5439 154.5088 221.6582 134.9111 221.6582 c
115.3149 221.6582 99.4282 237.5439 99.4282 257.1426 c
99.4282 276.7393 115.3149 292.625 134.9111 292.625 c
154.5088 292.625 170.3955 276.7393 170.3955 257.1426 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) -3173.3545 1627.2842 -52.2957 322.1004 0.2281 0 0 0.2281 6851.0459 6656.6543 Bg
44.9339 -58.1287 -58.1287 -44.9339 113.3306 268.7324 Bm
f
0 BB
166.4893 266.6895 m
166.4893 253.6104 152.3516 251.2578 134.9111 251.2578 c
117.4722 251.2578 103.3345 253.6104 103.3345 266.6895 c
103.3345 279.7695 117.4722 292.375 134.9111 292.375 c
152.3516 292.375 166.4893 279.7695 166.4893 266.6895 c
Bb
1 (Unnamed gradient 5) 134.9116 292.1191 -90 40.8609 1 0 0 1 0 0 Bg
-0.000002 -40.8609 -67.1548 0.000003 168.4893 292.1191 Xm
-0.000347 -7929.168 -67.1548 0.000003 168.4897 8221.2871 Bc
-0.000002 -40.8609 -67.1548 0.000003 168.4893 292.1191 Bm
-0.000347 -7929.168 -67.1548 0.000003 168.4893 251.2578 Bc
f
0 BB
378.8887 257.1426 m
378.8887 237.5439 363.002 221.6563 343.4048 221.6563 c
323.8076 221.6563 307.9209 237.5439 307.9209 257.1426 c
307.9209 276.7383 323.8076 292.626 343.4048 292.626 c
363.002 292.626 378.8887 276.7383 378.8887 257.1426 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 8) 321.8237 268.7314 -52.2957 73.4723 1 0 0 1 0 0 Bg
44.9347 -58.1296 -58.1296 -44.9347 321.8237 268.7314 Bm
f
0 BB
374.9829 266.6895 m
374.9829 253.6094 360.8442 251.2578 343.4048 251.2578 c
325.9648 251.2578 311.8276 253.6094 311.8276 266.6895 c
311.8276 279.7686 325.9648 292.375 343.4048 292.375 c
360.8442 292.375 374.9829 279.7686 374.9829 266.6895 c
Bb
1 (Unnamed gradient 7) 343.4053 292.1191 -90 40.8609 1 0 0 1 0 0 Bg
-0.000002 -40.8609 -67.1553 0.000003 376.9829 292.1191 Xm
-0.000356 -8137.6621 -67.1553 0.000003 376.9834 8429.7813 Bc
-0.000002 -40.8609 -67.1553 0.000003 376.9829 292.1191 Bm
-0.000356 -8137.6621 -67.1553 0.000003 376.9829 251.2578 Bc
f
0 BB
274.8086 538.6299 m
274.8086 519.0327 258.9219 503.146 239.3242 503.146 c
219.7275 503.146 203.8408 519.0327 203.8408 538.6299 c
203.8408 558.2266 219.7275 574.1128 239.3242 574.1128 c
258.9219 574.1128 274.8086 558.2266 274.8086 538.6299 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 16) 217.7437 550.2197 -52.2957 73.4714 1 0 0 1 0 0 Bg
44.9341 -58.1289 -58.1289 -44.9341 217.7437 550.2197 Bm
f
0 BB
270.9023 548.1782 m
270.9023 535.0986 256.7646 532.7471 239.3242 532.7471 c
221.8853 532.7471 207.7476 535.0986 207.7476 548.1782 c
207.7476 561.2568 221.8853 573.8623 239.3242 573.8623 c
256.7646 573.8623 270.9023 561.2568 270.9023 548.1782 c
Bb
1 (Unnamed gradient 15) 239.3247 573.606 -90 40.859 1 0 0 1 0 0 Bg
-0.000002 -40.859 -67.1548 0.000003 272.9023 573.606 Xm
-0.000351 -8033.5811 -67.1548 0.000003 272.9028 8607.1875 Bc
-0.000002 -40.859 -67.1548 0.000003 272.9023 573.606 Bm
-0.000351 -8033.5811 -67.1548 0.000003 272.9023 532.7471 Bc
f
0 BB
170.2061 538.6299 m
170.2061 519.0317 154.3193 503.146 134.7222 503.146 c
115.125 503.146 99.2383 519.0317 99.2383 538.6299 c
99.2383 558.2271 115.125 574.1128 134.7222 574.1128 c
154.3193 574.1128 170.2061 558.2271 170.2061 538.6299 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) -3174.186 2861.3345 -52.2957 322.1009 0.2281 0 0 0.2281 6851.0459 6656.6538 Bg
44.934 -58.1288 -58.1288 -44.934 113.1411 550.2197 Bm
f
0 BB
166.2998 548.1777 m
166.2998 535.0977 152.1621 532.7461 134.7222 532.7461 c
117.2822 532.7461 103.145 535.0977 103.145 548.1777 c
103.145 561.2578 117.2822 573.8623 134.7222 573.8623 c
152.1621 573.8623 166.2998 561.2578 166.2998 548.1777 c
Bb
1 (Unnamed gradient 5) 134.7222 573.606 -90 40.8599 1 0 0 1 0 0 Bg
-0.000002 -40.8599 -67.1548 0.000003 168.2998 573.606 Xm
-0.000347 -7928.9785 -67.1548 0.000003 168.3003 8502.585 Bc
-0.000002 -40.8599 -67.1548 0.000003 168.2998 573.606 Bm
-0.000347 -7928.9785 -67.1548 0.000003 168.2998 532.7461 Bc
f
0 BB
378.8887 538.6299 m
378.8887 519.0317 363.002 503.144 343.4048 503.144 c
323.8076 503.144 307.9209 519.0317 307.9209 538.6299 c
307.9209 558.2261 323.8076 574.1138 343.4048 574.1138 c
363.002 574.1138 378.8887 558.2261 378.8887 538.6299 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 8) 321.8237 550.2197 -52.2957 73.4726 1 0 0 1 0 0 Bg
44.9348 -58.1299 -58.1299 -44.9348 321.8237 550.2197 Bm
f
0 BB
374.9829 548.1777 m
374.9829 535.0967 360.8442 532.7461 343.4048 532.7461 c
325.9648 532.7461 311.8276 535.0967 311.8276 548.1777 c
311.8276 561.2568 325.9648 573.8623 343.4048 573.8623 c
360.8442 573.8623 374.9829 561.2568 374.9829 548.1777 c
Bb
1 (Unnamed gradient 7) 343.4053 573.606 -90 40.8599 1 0 0 1 0 0 Bg
-0.000002 -40.8599 -67.1553 0.000003 376.9829 573.606 Xm
-0.000356 -8137.6616 -67.1553 0.000003 376.9834 8711.2676 Bc
-0.000002 -40.8599 -67.1553 0.000003 376.9829 573.606 Bm
-0.000356 -8137.6616 -67.1553 0.000003 376.9829 532.7461 Bc
f
0 BB
587.3975 538.6299 m
587.3975 519.0327 571.5117 503.146 551.9141 503.146 c
532.3164 503.146 516.4307 519.0327 516.4307 538.6299 c
516.4307 558.2266 532.3164 574.1128 551.9141 574.1128 c
571.5117 574.1128 587.3975 558.2266 587.3975 538.6299 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 16) 530.333 550.2197 -52.2957 73.471 1 0 0 1 0 0 Bg
44.9339 -58.1286 -58.1286 -44.9339 530.333 550.2197 Bm
f
0 BB
583.4912 548.1782 m
583.4912 535.0986 569.3545 532.7471 551.9141 532.7471 c
534.4736 532.7471 520.3369 535.0986 520.3369 548.1782 c
520.3369 561.2568 534.4736 573.8623 551.9141 573.8623 c
569.3545 573.8623 583.4912 561.2568 583.4912 548.1782 c
Bb
1 (Unnamed gradient 15) 551.9141 573.606 -90 40.859 1 0 0 1 0 0 Bg
-0.000002 -40.859 -67.1543 0.000003 585.4912 573.606 Xm
-0.000365 -8346.1699 -67.1543 0.000003 585.4912 8919.7754 Bc
-0.000002 -40.859 -67.1543 0.000003 585.4912 573.606 Bm
-0.000365 -8346.1699 -67.1543 0.000003 585.4912 532.7471 Bc
f
0 BB
482.9375 538.6299 m
482.9375 519.0317 467.0508 503.146 447.4521 503.146 c
427.8555 503.146 411.9697 519.0317 411.9697 538.6299 c
411.9697 558.2271 427.8555 574.1128 447.4521 574.1128 c
467.0508 574.1128 482.9375 558.2271 482.9375 538.6299 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 6) -1803.1587 2861.3384 -52.2957 322.1013 0.2281 0 0 0.2281 6851.0459 6656.6543 Bg
44.934 -58.1288 -58.1288 -44.934 425.8721 550.2197 Bm
f
0 BB
479.0313 548.1777 m
479.0313 535.0977 464.8936 532.7461 447.4531 532.7461 c
430.0146 532.7461 415.877 535.0977 415.877 548.1777 c
415.877 561.2578 430.0146 573.8623 447.4531 573.8623 c
464.8936 573.8623 479.0313 561.2578 479.0313 548.1777 c
Bb
1 (Unnamed gradient 5) 447.4541 573.606 -90 40.8599 1 0 0 1 0 0 Bg
-0.000002 -40.8599 -67.1543 0.000003 481.0313 573.606 Xm
-0.00036 -8241.71 -67.1543 0.000003 481.0313 8815.3154 Bc
-0.000002 -40.8599 -67.1543 0.000003 481.0313 573.606 Bm
-0.00036 -8241.71 -67.1543 0.000003 481.0313 532.7461 Bc
f
0 BB
691.5059 538.6299 m
691.5059 519.0317 675.6182 503.144 656.0215 503.144 c
636.4248 503.144 620.5371 519.0317 620.5371 538.6299 c
620.5371 558.2261 636.4248 574.1138 656.0215 574.1138 c
675.6182 574.1138 691.5059 558.2261 691.5059 538.6299 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 8) 634.4404 550.2197 -52.2957 73.473 1 0 0 1 0 0 Bg
44.9351 -58.1302 -58.1302 -44.9351 634.4404 550.2197 Bm
f
0 BB
687.5996 548.1777 m
687.5996 535.0967 673.4609 532.7461 656.0215 532.7461 c
638.582 532.7461 624.4434 535.0967 624.4434 548.1777 c
624.4434 561.2568 638.582 573.8623 656.0215 573.8623 c
673.4609 573.8623 687.5996 561.2568 687.5996 548.1777 c
Bb
1 (Unnamed gradient 7) 656.0215 573.606 -90 40.8599 1 0 0 1 0 0 Bg
-0.000002 -40.8599 -67.1563 0.000003 689.5996 573.606 Xm
-0.000369 -8450.2773 -67.1563 0.000003 689.5996 9023.8828 Bc
-0.000002 -40.8599 -67.1563 0.000003 689.5996 573.606 Bm
-0.000369 -8450.2773 -67.1563 0.000003 689.5996 532.7461 Bc
f
0 BB
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 2 79 255 79 0 50 Lb
(icons) Ln
0 A
*u
u
0 Ap
0 O
0 0 0 0 1 1 1 Xa
0 J 0 j 1 w 4 M []0 d0 XR
526.9209 111.3379 m
529.2451 115.1494 533.7324 116.6299 537.2129 115.2246 C
555.9795 107.25 579.1963 111.6875 593.6406 126.1074 C
589.0313 130.8564 L
588.2881 131.627 587.9238 132.583 587.957 133.4512 C
587.9912 134.3184 588.5283 134.8877 589.3125 135.0947 C
597.6025 137.042 606.2217 141.9619 613.2041 149.8867 C
613.9297 150.7256 615.1113 151.1221 616.2422 150.8818 C
617.374 150.6426 618.2598 149.7637 618.5176 148.583 C
620.8525 137.4902 620.0605 124.6016 615.3262 111.9375 C
614.8906 110.6934 613.8086 109.6885 612.6172 109.2344 C
611.4238 108.7813 610.2129 109.04 609.4834 109.792 C
604.876 114.5381 L
585.9629 95.7051 555.6436 89.8584 531.0732 100.3174 C
526.293 102.2734 524.5977 107.5518 526.9209 111.3379 C
f
U
u
1 D
515.3027 217.9512 m
493.9727 201.9395 483.8691 172.7236 490.6914 146.9443 C
484.2744 145.332 L
483.2402 145.0762 482.4502 144.1641 482.2393 142.8955 C
482.0146 141.6299 482.3643 140.1934 483.2246 139.1885 C
491.8398 128.7158 502.6221 121.6436 513.3848 118.124 C
514.5293 117.748 515.7266 118.0693 516.5049 118.9277 C
517.2813 119.7861 517.5293 121.0137 517.1738 122.0674 C
513.7969 132.0713 513.7969 142.0293 516.2852 150.1445 C
516.498 150.9258 516.2559 151.6621 515.543 152.1299 C
514.8213 152.5947 513.7686 152.7451 512.7461 152.4912 C
506.3291 150.877 L
501.124 170.6514 508.8115 192.8965 525.1582 205.1885 C
528.123 207.502 529.0605 212.1504 526.9209 216.0576 C
524.7881 219.9658 519.3828 221.1045 515.3027 217.9512 C
f
U
u
625.0605 172.7969 m
621.8369 199.3301 601.6221 222.6152 575.8594 229.6191 C
577.6621 235.9863 L
577.9521 237.0049 577.5557 238.1416 576.5723 238.9941 C
575.5811 239.8008 574.1553 240.1816 572.8662 239.9863 C
559.5049 237.6836 548.0283 231.9766 539.5547 224.4004 C
538.6514 223.6143 538.3398 222.3955 538.6982 221.2871 C
539.0527 220.1904 539.9824 219.3848 541.0762 219.1465 C
551.4033 217.0732 560.0469 212.0195 565.8662 205.8691 C
566.4258 205.2471 567.1904 205.123 567.959 205.5254 C
568.71 205.8818 569.3652 206.7207 569.6592 207.7412 C
571.4639 214.1074 L
591.1191 208.7793 606.6465 190.8975 609.0752 170.6748 C
609.5879 166.9502 613.1348 163.7988 617.6191 163.6963 C
622.0361 163.5898 625.7402 167.6846 625.0605 172.7969 C
f
U
*U
u
0 D
439.6592 336.6846 m
439.5918 337.2979 440.0332 337.8516 440.6475 337.9204 C
440.6475 337.9204 L
454.5723 339.4673 L
455.1875 339.5352 455.7412 339.0928 455.8086 338.479 C
455.8086 338.479 L
455.877 337.8638 455.4336 337.3101 454.8193 337.2422 C
454.8193 337.2422 L
440.8945 335.6953 L
440.8535 335.6909 440.8105 335.687 440.7705 335.687 C
440.7705 335.687 L
440.207 335.687 439.7227 336.1118 439.6592 336.6846 C
439.6592 336.6846 L
f
439.6592 332.8994 m
439.5918 333.5146 440.0332 334.0674 440.6465 334.1357 C
440.6465 334.1357 L
454.5723 335.6826 L
455.1865 335.751 455.7412 335.3076 455.8086 334.6934 C
455.8086 334.6934 L
455.877 334.0786 455.4336 333.5244 454.8193 333.457 C
454.8193 333.457 L
440.8945 331.9106 L
440.8535 331.9058 440.8105 331.9033 440.7705 331.9033 C
440.7705 331.9033 L
440.2061 331.9033 439.7227 332.3267 439.6592 332.8994 C
439.6592 332.8994 L
f
442.3975 329.3564 m
442.3281 329.9702 442.7695 330.5259 443.3838 330.5947 C
443.3838 330.5947 L
451.8301 331.5581 L
452.4453 331.6289 453 331.187 453.0703 330.5728 C
453.0703 330.5728 L
453.1387 329.9585 452.6982 329.4038 452.085 329.3335 C
452.085 329.3335 L
443.6377 328.3711 L
443.5938 328.3662 443.5508 328.3633 443.5088 328.3633 C
443.5088 328.3633 L
442.9473 328.3633 442.4619 328.7852 442.3975 329.3564 C
442.3975 329.3564 L
f
u
*u
1 D
447.7334 376.1118 m
439.0879 376.1118 432.0781 369.1382 432.0781 360.5361 c
432.0781 354.8564 437.3174 349.5713 y
438.6279 348.249 439.7002 345.644 439.7002 343.7813 c
439.7002 343.2983 l
439.7002 341.4365 441.2236 339.9126 443.085 339.9126 c
452.3818 339.9126 l
454.2441 339.9126 455.7656 341.4365 455.7656 343.2983 c
455.7656 343.7813 l
455.7656 345.644 456.8389 348.249 458.1504 349.5713 c
463.3887 354.8564 463.3887 360.5361 v
463.3887 369.1382 456.3799 376.1118 447.7334 376.1118 c
f
0 D
447.1885 369.7075 m
444.9307 369.7075 442.9014 368.7993 441.4219 367.3232 c
439.9473 365.8438 439.0381 363.8145 439.0371 361.5566 c
439.0371 360.877 438.4854 360.3262 437.8066 360.3262 c
437.126 360.3262 436.5762 360.877 436.5762 361.5571 c
436.5762 367.4209 441.3223 372.1689 447.1885 372.1689 c
447.8662 372.1689 448.418 371.6187 448.418 370.9395 c
448.418 370.2588 447.8672 369.7075 447.1885 369.7075 c
f
*U
U
U
u
u
*u
1 D
561.0303 340.9878 m
561.1992 341.54 561.4434 342.0708 561.5498 342.6416 C
562.7979 342.6675 564.084 342.7808 565.3516 342.9917 C
565.5957 344.5103 565.6475 346.0576 565.4873 347.5864 C
564.2383 347.8721 562.957 348.061 561.7148 348.1611 C
561.6299 348.7334 561.4434 349.2856 561.2881 349.8403 C
561.0811 350.3804 560.9004 350.9321 560.625 351.4424 C
561.5703 352.2681 562.4883 353.1841 563.3057 354.1504 C
562.5576 355.4922 561.5518 356.6758 560.4658 357.7563 C
559.3135 357.1636 558.2266 356.5039 557.2119 355.7847 C
556.7461 356.1255 556.2988 356.5005 555.7939 356.7837 C
555.3027 357.0879 554.7959 357.3667 554.2598 357.5879 C
554.458 358.8423 554.5645 360.1157 554.5723 361.3848 C
553.1416 361.9341 551.6074 362.1929 550.0801 362.3262 C
549.5781 361.1304 549.1699 359.9253 548.8545 358.7207 C
548.2793 358.6904 547.6982 358.6792 547.1289 358.5781 C
546.5547 358.4961 545.9883 358.3799 545.4346 358.21 C
544.7773 359.3027 544.0459 360.3276 543.2305 361.3145 C
541.7861 360.7979 540.4316 360.0479 539.1943 359.1436 C
539.5791 357.9053 540.0205 356.7441 540.5674 355.5977 C
540.1426 355.207 539.7051 354.8262 539.3369 354.3779 C
538.9316 353.9629 538.6104 353.4795 538.2656 353.0146 C
537.0674 353.4263 535.8613 353.7305 534.5879 353.9688 C
533.8213 352.6392 533.2529 351.2065 532.8955 349.7139 C
533.9844 349.0127 535.0713 348.4063 536.2256 347.8809 C
536.1553 347.3071 536.0576 346.7349 536.0654 346.1553 C
536.0273 345.5767 536.082 344.9995 536.123 344.4233 C
534.9375 343.9668 533.8193 343.4253 532.6895 342.7896 C
532.9678 341.2827 533.4375 339.8062 534.1318 338.439 C
535.4023 338.5967 536.6387 338.8389 537.8662 339.1816 C
538.1523 338.6777 538.4834 338.2046 538.8457 337.7515 C
539.1885 337.2871 539.6045 336.8789 540.002 336.4619 C
539.4043 335.3696 538.8721 334.2134 538.416 333 C
539.6182 332.0483 540.9102 331.1826 542.3271 330.5991 C
543.1943 331.5264 543.9902 332.5254 544.708 333.5723 C
545.25 333.3652 545.8086 333.2207 546.377 333.1035 C
546.9375 332.9624 547.5205 332.9277 548.0928 332.8569 C
548.3359 331.6367 548.6729 330.4097 549.1025 329.1875 C
550.6348 329.2275 552.1787 329.3965 553.6445 329.8584 C
553.7139 331.1221 553.6758 332.4185 553.5557 333.6685 C
554.1064 333.8501 554.6162 334.1265 555.1367 334.3765 C
555.6318 334.6743 556.1465 334.9468 556.6006 335.3047 C
557.5732 334.5239 558.6328 333.7817 559.7373 333.1304 C
560.9043 334.1318 561.9297 335.292 562.7959 336.5635 C
562.0195 337.5874 561.1611 338.5537 560.2715 339.4292 C
560.5869 339.9175 560.7744 340.4702 561.0303 340.9878 C
f
0 D
547.1699 336.9204 m
545.0869 337.3193 543.21 338.5332 541.9063 340.166 c
540.5811 341.8062 539.8906 343.9478 539.9629 346.041 c
540.0049 348.1328 540.8398 350.2358 542.248 351.7856 c
543.6318 353.3555 545.6045 354.4385 547.6953 354.7202 c
549.7637 355.0112 551.9619 354.605 553.75 353.4639 c
555.5322 352.3623 556.9297 350.6279 557.5869 348.6133 c
558.2471 346.6016 558.1738 344.4053 557.4082 342.4287 c
556.6074 340.4663 555.1533 338.8193 553.29 337.8096 c
551.4297 336.7979 549.2227 336.4976 547.1699 336.9204 c
f
*U
U
u
*u
1 D
569.9863 364.2451 m
570.0098 365.3618 L
570.6328 365.6064 571.1768 365.9048 571.7363 366.2651 C
571.6035 367.2505 571.252 368.1919 570.7871 369.0591 C
570.1162 368.9946 569.4707 368.876 568.8555 368.7075 C
568.6719 369.0352 568.3984 369.291 568.1426 369.563 C
567.8975 369.8472 567.6084 370.0791 567.2949 370.2847 C
567.4756 370.9014 567.6055 371.5513 567.6816 372.2261 C
566.8018 372.6904 565.875 373.0513 564.8936 373.2026 C
564.5313 372.6699 564.2217 372.0859 563.9668 371.478 C
563.5967 371.4785 563.2207 371.5146 562.8535 371.4683 C
561.751 371.2632 L
561.3848 371.7783 560.9639 372.2646 560.4883 372.7305 C
559.5596 372.3931 558.7139 371.8389 557.9863 371.1831 C
558.1924 370.5464 558.4492 369.9463 558.7461 369.3887 C
558.4814 369.1274 558.2939 368.7974 558.0713 368.499 C
557.834 368.208 557.7217 367.8428 557.5586 367.5083 C
556.9229 367.5439 556.2217 367.5371 555.5918 367.4473 C
555.3066 366.4956 555.1895 365.5146 555.2422 364.522 C
555.834 364.2866 556.5146 364.1143 557.1406 364 C
557.2197 363.6367 557.2422 363.2554 557.4043 362.916 C
557.5498 362.5737 557.6553 362.209 557.8486 361.8931 C
557.4297 361.4209 557.04 360.8975 556.6895 360.3281 C
557.2422 359.519 557.9336 358.7813 558.7568 358.2354 C
559.3291 358.5757 559.8525 358.9492 560.3301 359.3633 C
561.3516 358.9048 L
561.6982 358.7725 562.0723 358.7202 562.4336 358.6328 C
562.5381 357.9814 562.7002 357.3418 562.9287 356.7383 C
563.917 356.6543 564.9023 356.7871 565.8652 357.0313 C
565.9521 357.7046 565.9785 358.3672 565.9492 359.0083 C
566.3008 359.1353 566.6387 359.292 566.9424 359.5112 C
567.2549 359.7148 567.5811 359.8989 567.8359 360.1743 C
568.3945 359.8657 568.9941 359.5981 569.6318 359.3774 C
570.2871 360.1108 570.8516 360.9429 571.2109 361.8696 C
570.752 362.3516 570.293 362.7695 569.7471 363.1538 C
569.9863 364.2451 L
f
0 D
562.792 362.9443 m
562.1846 363.1709 561.6797 363.6904 561.4619 364.3071 c
561.2246 364.9102 561.3135 365.6616 561.6865 366.1919 c
562.043 366.7393 562.6563 367.126 563.2998 367.2026 c
563.9688 367.3003 564.6377 367.0156 565.0889 366.5518 c
565.5527 366.0752 565.7959 365.4214 565.7285 364.7529 c
565.6377 364.0884 565.2461 363.5103 564.6836 363.1563 c
564.1348 362.8125 563.418 362.6934 562.792 362.9443 c
f
*U
U
U
u
u
u
0.596078 0.513725 0.505882 0.2 0.4 0.4 0.4 Xa
548.3623 458.7739 m
547.1094 458.7739 546.083 457.748 546.083 456.4941 c
546.083 450.9546 l
546.083 449.7012 545.0566 448.6753 543.8027 448.6753 c
537.5586 448.6753 l
536.3057 448.6753 535.9756 447.9214 536.8252 446.9985 c
550.3516 432.3232 l
551.2021 431.3999 552.5908 431.3999 553.4424 432.3232 c
566.9678 446.9985 l
567.8164 447.9214 567.4873 448.6753 566.2324 448.6753 c
559.9902 448.6753 l
558.7363 448.6753 557.7109 449.7012 557.7109 450.9546 c
557.7109 456.4941 l
557.7109 457.748 556.6836 458.7739 555.4307 458.7739 c
548.3623 458.7739 l
f
U
557.7109 460.9121 m
557.7109 461.4775 l
557.7109 462.7314 556.6836 463.7573 555.4307 463.7573 c
548.3623 463.7573 l
547.1094 463.7573 546.082 462.7314 546.082 461.4775 c
546.082 460.9121 l
557.7109 460.9121 l
f
U
536.5547 424.9829 m
533.2793 424.9834 530.626 427.6362 530.626 430.9131 C
530.626 430.9131 L
530.626 434.2642 L
530.626 434.8335 531.0859 435.2954 531.6572 435.2954 C
531.6572 435.2954 L
532.2256 435.2954 532.6885 434.8335 532.6885 434.2642 C
532.6885 434.2642 L
532.6885 430.9131 L
532.6914 428.7764 534.4199 427.0493 536.5547 427.0449 C
536.5547 427.0449 L
567.2373 427.0449 L
569.3721 427.0493 571.1006 428.7764 571.1045 430.9131 C
571.1045 430.9131 L
571.1045 434.2642 L
571.1045 434.8335 571.5664 435.2954 572.1357 435.2954 C
572.1357 435.2954 L
572.7061 435.2954 573.167 434.8335 573.167 434.2642 C
573.167 434.2642 L
573.167 430.9131 L
573.167 427.6362 570.5117 424.9834 567.2373 424.9829 C
567.2373 424.9829 L
536.5547 424.9829 L
536.5547 424.9829 L
f
U
u
*u
1 D
0 0 0 0 1 1 1 Xa
671.3086 442.5781 m
670.0859 443.3154 668.7148 444.082 667.2275 444.8574 C
667.9902 445.2524 668.7109 445.6436 669.4063 446.0303 C
670.0479 445.3105 671.0928 445.0283 672.0342 445.417 c
673.2031 445.8975 673.7637 447.2158 673.3271 448.3901 C
674.7207 449.3184 675.833 450.1836 676.6191 450.9658 c
677.5059 451.8921 678.1318 452.7173 677.7988 453.7168 C
677.7979 453.7158 L
677.333 454.6611 676.3057 454.8057 675.0234 454.8374 c
672.3027 454.8428 667.6914 453.7993 662.1973 451.9556 C
659.6426 454.0679 656.0381 454.7393 652.7588 453.3882 c
651.8994 453.0342 651.125 452.5635 650.4395 452.0059 C
648.1787 452.771 646.0605 453.4048 644.1758 453.8784 c
644.0391 453.9121 643.9131 453.939 643.7813 453.9707 C
643.7549 454.1758 643.7119 454.3799 643.6299 454.5796 c
643.1396 455.7715 641.7734 456.3408 640.583 455.8501 c
640.0654 455.6372 639.6748 455.2544 639.4268 454.7979 C
637.8848 454.978 636.668 454.9478 635.834 454.6284 c
635.4531 454.4717 635.0986 454.2061 634.9307 453.7969 c
634.7598 453.3892 634.8213 452.9536 634.9795 452.5728 c
635.6533 451.0454 637.9365 449.2915 641.3848 447.1821 c
642.6064 446.4443 643.9785 445.6782 645.4629 444.9019 C
643.4658 443.8662 641.6797 442.8511 640.1689 441.8931 c
638.3936 440.7637 637.002 439.7236 636.0723 438.7925 c
635.1846 437.8662 634.5586 437.042 634.8945 436.0439 C
635.3594 435.0981 636.3848 434.9521 637.668 434.9204 c
640.3584 434.9155 644.9014 435.938 650.3164 437.7441 C
652.873 435.5898 656.5117 434.8931 659.8164 436.2559 c
660.7314 436.6318 661.5508 437.1411 662.2695 437.7471 C
664.5234 436.9834 666.6367 436.3525 668.5166 435.8804 c
672.4453 434.9189 675.2979 434.5342 676.8574 435.1309 C
676.8604 435.1313 676.8623 435.1328 676.8643 435.1333 C
677.2422 435.2886 677.5947 435.5522 677.7617 435.9585 c
677.9297 436.3677 677.873 436.8032 677.7139 437.1851 c
677.04 438.7129 674.7559 440.4673 671.3086 442.5781 c
f
0 D
675.0195 453.6724 m
675.6006 453.6689 676.0557 453.606 676.3408 453.5098 c
676.6377 453.4092 676.7061 453.3066 676.7178 453.272 C
676.7168 453.271 L
676.7305 453.2373 676.7588 453.1152 676.6191 452.8379 c
676.2568 452.0723 674.8262 450.793 672.6553 449.3438 C
672.0098 449.8931 671.0928 450.0796 670.2568 449.7344 c
669.1885 449.2944 668.627 448.1563 668.8721 447.0679 C
667.9541 446.5576 666.9805 446.0386 665.9453 445.5137 C
665.8037 445.5864 665.6504 445.6587 665.5068 445.7305 C
665.4189 446.6104 665.208 447.4907 664.8545 448.3506 c
664.4346 449.3701 663.8457 450.2676 663.1445 451.04 C
665.7559 451.8975 668.1465 452.5664 670.1816 453.0127 c
672.1826 453.4536 673.8516 453.6777 675.0195 453.6724 c
f
641.9902 448.1797 m
638.6152 450.1895 636.3945 452.0957 636.0596 453.0166 C
635.9727 453.2319 635.9941 453.3188 636.0068 453.3472 C
635.4697 453.5747 L
636.0098 453.3506 L
636.0234 453.3833 636.0684 453.4585 636.2803 453.5488 c
636.7412 453.7622 637.751 453.8003 639.1416 453.6528 C
639.1465 453.3687 639.1982 453.0811 639.3125 452.8027 c
639.8027 451.6108 641.167 451.042 642.3604 451.5332 c
642.9629 451.7808 643.4053 452.252 643.6318 452.811 C
643.7188 452.7891 643.8027 452.769 643.8906 452.7471 c
645.5781 452.3228 647.4639 451.7642 649.4805 451.0938 C
648.1133 449.6079 647.2637 447.7148 647.0674 445.7109 C
646.9619 445.6592 646.8506 445.6064 646.7461 445.5547 C
644.9922 446.4497 643.3848 447.3369 641.9902 448.1797 c
f
637.6729 436.0879 m
637.0918 436.0898 636.6348 436.1523 636.3516 436.2505 c
636.0557 436.3496 635.9863 436.4526 635.9746 436.4873 C
635.959 436.521 635.9336 436.644 636.0742 436.9214 c
636.543 437.917 638.8076 439.7759 642.1689 441.749 c
643.5225 442.5532 645.0664 443.3926 646.7461 444.2451 C
646.8438 444.1953 646.9512 444.1445 647.0527 444.0938 C
647.126 443.1543 647.3438 442.2109 647.7197 441.2925 c
648.1309 440.2993 648.7002 439.4238 649.376 438.6646 C
646.832 437.834 644.5 437.1836 642.5098 436.7471 c
640.5078 436.3062 638.8389 436.0806 637.6729 436.0879 c
f
676.6836 436.4038 m
676.6738 436.3755 676.626 436.2993 676.4121 436.2109 C
675.5234 435.7983 672.6035 436.0317 668.8018 437.0127 c
667.1113 437.437 665.2217 437.9966 663.2031 438.668 C
664.5215 440.1509 665.333 442.0205 665.5117 443.9937 C
665.6553 444.064 665.8057 444.1353 665.9453 444.2051 C
667.7002 443.3076 669.3076 442.4219 670.7051 441.5786 c
674.0791 439.5693 676.2998 437.6621 676.6348 436.7402 c
676.7197 436.5283 676.6982 436.4414 676.6836 436.4038 c
f
*U
U
u
u
638.9727 527.1528 m
641.2744 523.8867 644.4854 521.3076 648.2363 519.7847 C
646.8174 522.082 645.6426 524.5449 644.7451 527.1387 C
638.9727 527.1528 L
f
655.0156 527.1172 m
647.0352 527.1338 L
648.1484 524.125 649.665 521.312 651.5186 518.7578 C
652.6455 518.5054 653.8086 518.3423 654.9971 518.2788 C
655.0156 527.1172 L
f
635.1777 538.1831 m
635.333 534.9839 636.207 531.9756 637.6396 529.3101 C
644.0713 529.2954 L
643.2822 532.1304 642.8213 535.1011 642.7324 538.166 C
635.1777 538.1831 L
f
655.04 538.1392 m
644.8887 538.1606 L
644.9863 535.0879 645.4766 532.1147 646.3164 529.291 C
655.0215 529.2715 L
655.04 538.1392 L
f
655.0693 551.3613 m
655.0869 560.1987 L
653.8447 560.1387 652.6309 559.9697 651.4512 559.7021 C
649.6201 557.1621 648.1211 554.3662 647.0186 551.3784 C
655.0693 551.3613 L
f
639.0254 551.3965 m
644.7334 551.3838 L
645.6182 553.9492 646.7754 556.3872 648.1709 558.6626 C
644.4766 557.1475 641.3105 554.6094 639.0254 551.3965 C
f
637.6816 549.2441 m
636.2393 546.585 635.3516 543.5806 635.1816 540.3818 C
642.7295 540.3652 L
642.8184 543.4287 643.2793 546.3975 644.0654 549.23 C
637.6816 549.2441 L
f
655.0654 549.2061 m
646.3066 549.2246 L
645.4697 546.4038 644.9805 543.4336 644.8857 540.3613 C
655.0449 540.3389 L
655.0654 549.2061 L
f
U
u
673.0176 527.0776 m
670.7012 523.8218 667.4775 521.2588 663.7178 519.751 C
665.1484 522.0425 666.335 524.5 667.2441 527.0913 C
673.0176 527.0776 L
f
656.9736 527.1128 m
664.9561 527.0962 L
663.8262 524.0908 662.2979 521.2847 660.4336 518.7388 C
659.3047 518.4912 658.1426 518.332 656.9531 518.2749 C
656.9736 527.1128 L
f
676.8594 538.0918 m
676.6904 534.8931 675.8027 531.8892 674.3594 529.2295 C
667.9248 529.2437 L
668.7295 532.0762 669.2012 535.0439 669.3047 538.1084 C
676.8594 538.0918 L
f
656.998 538.1343 m
667.1475 538.1128 L
667.041 535.0386 666.5342 532.0693 665.6816 529.249 C
656.9775 529.2676 L
656.998 538.1343 L
f
657.0264 551.3569 m
657.0459 560.1943 L
658.2881 560.1289 659.5039 559.9551 660.6777 559.6816 C
662.499 557.1333 663.9863 554.3315 665.0752 551.3398 C
657.0264 551.3569 L
f
673.0703 551.3213 m
667.3594 551.3345 L
666.4893 553.9033 665.3398 556.3467 663.9531 558.6284 C
667.6396 557.0967 670.7988 554.5435 673.0703 551.3213 C
f
674.4023 549.1641 m
675.834 546.498 676.71 543.4902 676.8643 540.291 C
669.3164 540.3076 L
669.2422 543.3711 668.793 546.3418 668.0186 549.1777 C
674.4023 549.1641 L
f
657.0205 549.2026 m
665.7793 549.1826 L
666.6035 546.3569 667.0811 543.3848 667.1611 540.313 C
657.0039 540.334 L
657.0205 549.2026 L
f
U
U
*u
u
0.596078 0.513725 0.505882 0.2 0.4 0.4 0.4 Xa
672.6074 348.7104 m
672.6055 339.8018 665.3877 332.583 656.4795 332.582 c
647.5723 332.583 640.3535 339.8018 640.3516 348.7104 c
640.3535 356.2642 645.5439 362.6025 652.5547 364.356 C
652.5547 359.438 L
650.9805 358.8623 649.5723 357.9497 648.4043 356.7847 c
646.334 354.7114 645.0625 351.8701 645.0596 348.7104 c
645.0625 345.5488 646.334 342.7095 648.4043 340.6362 c
650.4775 338.5654 653.3184 337.292 656.4795 337.2915 c
659.6406 337.292 662.4795 338.5654 664.5547 340.6362 c
666.625 342.7095 667.8965 345.5488 667.8984 348.7104 c
667.8965 351.8701 666.625 354.7114 664.5547 356.7847 c
663.3867 357.9497 661.9766 358.8623 660.4053 359.438 C
660.4053 364.3564 L
667.4141 362.6035 672.6055 356.2642 672.6074 348.7104 c
f
U
1 D
654.125 352.4399 m
654.125 351.1382 655.1797 350.0845 656.4795 350.0845 C
656.4795 350.0845 L
657.7803 350.0845 658.833 351.1382 658.833 352.4399 C
658.833 369.9419 L
658.833 369.9419 L
658.833 371.2412 657.7803 372.2959 656.4795 372.2959 C
656.4795 372.2959 L
655.1797 372.2959 654.125 371.2412 654.125 369.9419 C
654.125 352.4399 L
654.125 352.4399 L
f
*U
u
*u
0 D
331.2964 331.8706 m
326.9883 331.8721 323.4995 335.3628 323.498 339.6704 C
323.498 339.6704 L
323.498 352.2148 L
323.4995 356.5229 326.9883 360.0122 331.2964 360.0137 C
331.2964 360.0137 L
355.9829 360.0137 L
360.2905 360.0122 363.7798 356.5229 363.7813 352.2148 C
363.7813 352.2148 L
363.7813 339.6704 L
363.7798 335.3628 360.2905 331.8721 355.9829 331.8706 C
355.9829 331.8706 L
331.2964 331.8706 L
331.2964 331.8706 L
f
1 D
326.9556 352.2148 m
326.9556 339.6704 L
326.96 337.2729 328.8994 335.333 331.2964 335.3291 C
331.2964 335.3291 L
355.9829 335.3291 L
358.3794 335.333 360.3208 337.2729 360.3252 339.6704 C
360.3252 339.6704 L
360.3252 352.2148 L
360.3208 354.6133 358.3794 356.5532 355.9829 356.5571 C
355.9829 356.5571 L
331.2964 356.5571 L
328.8994 356.5532 326.96 354.6133 326.9556 352.2148 C
326.9556 352.2148 L
f
*U
0 D
343.6401 366.8682 m
340.6064 366.8682 338.1411 364.4629 338.0313 361.4551 C
349.249 361.4551 L
349.1396 364.4629 346.6733 366.8682 343.6401 366.8682 c
f
u
338.894 364.4878 m
332.2935 371.0874 L
332.0571 371.3252 332.0571 371.708 332.2935 371.9443 C
332.2935 371.9443 L
332.5317 372.1821 332.915 372.1831 333.1509 371.9458 C
333.1509 371.9458 L
339.7515 365.3457 L
339.9888 365.1084 339.9893 364.7236 339.7515 364.4863 C
339.7515 364.4863 L
339.5137 364.25 339.1304 364.251 338.894 364.4878 C
338.894 364.4878 L
f
/BBAccumRotation (0.785398) XT
1 Ap
333.0454 372.6963 m
333.4604 372.2817 333.4604 371.6094 333.0454 371.1938 c
332.6299 370.7793 331.958 370.7793 331.543 371.1938 c
331.1284 371.6094 331.1284 372.2817 331.543 372.6963 c
331.958 373.1108 332.6299 373.1108 333.0454 372.6963 c
f
/BBAccumRotation (0.785398) XT
0 Ap
347.5293 365.3467 m
354.1289 371.9458 L
354.3662 372.1831 354.748 372.1831 354.9863 371.9458 C
354.9863 371.9458 L
355.2227 371.7095 355.2236 371.3257 354.9868 371.0879 C
354.9868 371.0879 L
348.3872 364.4883 L
348.1494 364.2515 347.7656 364.251 347.5283 364.4883 C
347.5283 364.4883 L
347.291 364.7251 347.2925 365.1084 347.5293 365.3467 C
347.5293 365.3467 L
f
1 Ap
355.7378 371.1948 m
355.3228 370.7793 354.6504 370.7793 354.2358 371.1948 c
353.8208 371.6094 353.8208 372.2817 354.2358 372.6963 c
354.6504 373.1113 355.3228 373.1113 355.7378 372.6963 c
356.1528 372.2817 356.1528 371.6094 355.7378 371.1948 c
f
U
U
u
*u
0 Ap
1 D
258.4717 452.8711 m
258.4707 459.2056 253.3374 464.3398 247.0029 464.3408 c
240.668 464.3398 235.5337 459.2056 235.5327 452.8711 c
235.5337 450.6631 236.1592 448.6021 237.2393 446.8516 C
237.1372 446.7798 237.0332 446.6968 236.9316 446.5952 C
222.7173 432.3809 L
221.6694 431.3325 221.6694 429.6333 222.7173 428.5864 c
223.2402 428.062 223.9272 427.8008 224.6143 427.8008 c
225.3008 427.8008 225.9873 428.062 226.5107 428.5864 C
240.7256 442.8013 L
240.8276 442.9019 240.9111 443.0044 240.9854 443.1074 C
242.7349 442.0278 244.7949 441.4028 247.0029 441.4028 c
253.3374 441.4028 258.4707 446.5376 258.4717 452.8711 c
f
0 D
240.4102 446.2798 m
238.7217 447.9702 237.6802 450.2935 237.6792 452.8711 c
237.6802 455.4492 238.7217 457.7739 240.4102 459.4639 c
242.1011 461.1523 244.4248 462.1943 247.0029 462.1943 c
249.5811 462.1943 251.9048 461.1523 253.5942 459.4639 c
255.2837 457.7739 256.3257 455.4492 256.3257 452.8711 c
256.3257 450.2935 255.2837 447.9702 253.5942 446.2798 c
251.9048 444.5903 249.5811 443.5488 247.0029 443.5488 c
244.4248 443.5488 242.1011 444.5903 240.4102 446.2798 c
f
*U
242.98 456.8945 m
244.2695 458.1816 246.0396 458.9756 248.0098 458.9756 c
248.6021 458.9756 249.0811 459.4556 249.0811 460.0479 c
249.0811 460.6411 248.6006 461.1221 248.0098 461.1221 C
248.0098 461.1221 L
242.8936 461.1221 238.7534 456.9805 238.7534 451.8657 c
238.7534 451.2734 239.2339 450.7925 239.8262 450.7925 c
240.418 450.7925 240.8989 451.2734 240.8989 451.8652 c
240.8994 453.8354 241.6924 455.605 242.98 456.8945 c
f
U
u
*u
0 0 0 0 1 1 1 Xa
344.5732 444.7349 m
344.5732 424.9639 L
344.5732 424.1631 343.9243 423.5132 343.123 423.5132 c
342.3213 423.5132 341.6719 424.1631 341.6719 424.9639 C
341.6719 444.7349 L
339.1719 445.3794 337.3213 447.6436 337.3213 450.3457 c
337.3213 453.5508 339.9189 456.1479 343.123 456.1479 c
346.3271 456.1479 348.9248 453.5508 348.9248 450.3457 c
348.9248 447.6436 347.0747 445.3794 344.5732 444.7349 C
f
u
u
u
1 D
336.2627 441.8848 m
336.4043 441.7441 336.5903 441.6729 336.7759 441.6729 C
336.7759 441.6729 L
336.9614 441.6729 337.147 441.7427 337.2886 441.8848 C
337.2886 441.8848 L
337.5718 442.168 337.5718 442.6265 337.2886 442.9106 C
337.2886 442.9106 L
335.2119 444.9878 334.1768 447.7017 334.1758 450.4248 C
334.1758 450.4248 L
334.1768 453.1465 335.2119 455.8613 337.2886 457.938 C
337.2886 457.938 L
337.5718 458.2217 337.5718 458.6802 337.2886 458.9629 C
337.2886 458.9629 L
337.0054 459.2461 336.5454 459.2461 336.2627 458.9629 C
336.2627 458.9629 L
333.9063 456.6074 332.7251 453.5122 332.7256 450.4248 C
332.7256 450.4248 L
332.7251 447.3364 333.9063 444.2407 336.2627 441.8848 C
336.2627 441.8848 L
f
U
u
334.2554 439.8784 m
334.3975 439.7358 334.584 439.6655 334.7695 439.6655 C
334.7695 439.6655 L
334.9556 439.6655 335.1401 439.7358 335.2813 439.8774 C
335.2813 439.8774 L
335.5645 440.1616 335.5645 440.6211 335.2813 440.9038 C
335.2813 440.9038 L
332.6514 443.5352 331.3384 446.9761 331.3374 450.4248 C
331.3374 450.4248 L
331.3384 453.8726 332.6514 457.3145 335.2813 459.9443 C
335.2813 459.9443 L
335.5645 460.2275 335.5645 460.6855 335.2813 460.9697 C
335.2813 460.9697 L
334.9985 461.2529 334.5391 461.2529 334.2559 460.9697 C
334.2559 460.9697 L
331.3447 458.0601 329.8877 454.2393 329.8882 450.4248 C
329.8882 450.4248 L
329.8877 446.6108 331.3447 442.7881 334.2554 439.8784 C
334.2554 439.8784 L
f
U
u
332.25 437.8716 m
332.3916 437.7295 332.5771 437.6592 332.7627 437.6592 C
332.7627 437.6592 L
332.9482 437.6592 333.1338 437.7295 333.2749 437.8716 C
333.2749 437.8716 L
333.5581 438.1543 333.5581 438.6133 333.2754 438.8979 C
333.2749 438.8979 L
333.2749 438.8979 L
330.0903 442.0825 328.5005 446.2495 328.5 450.4248 C
328.5 450.4248 L
328.5005 454.5986 330.0903 458.7671 333.2749 461.9502 C
333.2749 461.9502 L
333.5581 462.2344 333.5581 462.6934 333.2749 462.9761 C
333.2749 462.9761 L
332.9917 463.2593 332.5327 463.2593 332.25 462.9766 C
332.25 462.9766 L
328.7842 459.5127 327.0483 454.9653 327.0498 450.4248 C
327.0498 450.4248 L
327.0483 445.8828 328.7852 441.3359 332.25 437.8716 C
332.25 437.8716 L
f
U
U
u
u
348.958 441.8848 m
349.0991 441.7427 349.2842 441.6729 349.4702 441.6729 C
349.4702 441.6729 L
349.6553 441.6729 349.8418 441.7427 349.9829 441.8848 C
349.9829 441.8848 L
352.3398 444.2407 353.5205 447.3364 353.5195 450.4248 C
353.5195 450.4248 L
353.5205 453.5122 352.3398 456.6074 349.9829 458.9639 C
349.9829 458.9639 L
349.6997 459.2461 349.2407 459.2461 348.958 458.9629 C
348.958 458.9629 L
348.6743 458.6802 348.6743 458.2217 348.958 457.938 C
348.958 457.938 L
351.0332 455.8613 352.0684 453.1465 352.0684 450.4248 C
352.0684 450.4248 L
352.0684 447.7017 351.0332 444.9878 348.958 442.9106 C
348.958 442.9106 L
348.6743 442.6265 348.6743 442.168 348.958 441.8848 C
348.958 441.8848 L
f
U
u
350.9639 439.8774 m
351.1055 439.7358 351.291 439.6655 351.4761 439.6655 C
351.4761 439.6655 L
351.6626 439.6655 351.8477 439.7358 351.9897 439.8774 C
351.9897 439.8784 L
351.9897 439.8784 L
354.9004 442.7881 356.3584 446.6108 356.3579 450.4248 C
356.3579 450.4248 L
356.3584 454.2393 354.8999 458.0601 351.9897 460.9702 C
351.9897 460.9702 L
351.7061 461.2539 351.2471 461.2539 350.9639 460.9697 C
350.9639 460.9697 L
350.6807 460.6855 350.6807 460.2275 350.9639 459.9443 C
350.9639 459.9443 L
353.5938 457.3145 354.9067 453.8726 354.9072 450.4248 C
354.9072 450.4248 L
354.9067 446.9761 353.5938 443.5352 350.9639 440.9038 C
350.9639 440.9038 L
350.6807 440.6211 350.6807 440.1616 350.9639 439.8774 C
350.9639 439.8774 L
f
U
u
352.9707 437.8716 m
353.1123 437.7295 353.2974 437.6582 353.4839 437.6582 C
353.4839 437.6582 L
353.6689 437.6582 353.855 437.7295 353.9966 437.8716 C
353.9966 437.8716 L
353.9966 437.8716 L
357.4609 441.3359 359.1968 445.8828 359.1958 450.4248 C
359.1958 450.4248 L
359.1968 454.9653 357.4609 459.5127 353.9966 462.9766 C
353.9966 462.9766 L
353.7124 463.2603 353.2534 463.2603 352.9707 462.9766 C
352.9707 462.9766 L
352.6875 462.6943 352.6875 462.2344 352.9707 461.9502 C
352.9707 461.9502 L
356.1543 458.7671 357.7441 454.5986 357.7446 450.4248 C
357.7446 450.4248 L
357.7441 446.2495 356.1543 442.0825 352.9707 438.8979 C
352.9707 438.8979 L
352.6875 438.6133 352.6875 438.1543 352.9707 437.8716 C
352.9707 437.8716 L
f
U
U
U
*U
U
u
1 Ap
0 D
0.596078 0.513725 0.505882 0.2 0.4 0.4 0.4 Xa
466.6719 523.5117 m
466.6719 522.582 465.9189 521.8286 464.9893 521.8286 C
429.9189 521.8286 L
428.9893 521.8286 428.2354 522.582 428.2354 523.5117 C
428.2354 523.5117 L
428.2354 524.4419 428.9893 525.1953 429.9189 525.1953 C
464.9893 525.1953 L
465.9189 525.1953 466.6719 524.4419 466.6719 523.5117 C
466.6719 523.5117 L
f
u
436.6416 552.8682 m
436.6416 553.8599 437.4473 554.6646 438.4385 554.6646 C
441.043 554.6646 L
442.0371 554.6646 442.8418 553.8599 442.8418 552.8682 C
442.8418 528.4546 L
442.8418 527.4634 442.0371 526.6582 441.043 526.6582 C
438.4385 526.6582 L
437.4473 526.6582 436.6416 527.4634 436.6416 528.4546 C
436.6416 552.8682 L
f
429.2031 544.8076 m
429.2031 545.7998 430.0059 546.6055 431 546.6055 C
433.6035 546.6055 L
434.5967 546.6055 435.4023 545.7998 435.4023 544.8076 C
435.4023 528.4546 L
435.4023 527.4634 434.5967 526.6582 433.6035 526.6582 C
431 526.6582 L
430.0059 526.6582 429.2031 527.4634 429.2031 528.4546 C
429.2031 544.8076 L
f
444.1416 540.9482 m
444.1416 541.9395 444.9463 542.7456 445.9385 542.7456 C
448.543 542.7456 L
449.5361 542.7456 450.3408 541.9395 450.3408 540.9482 C
450.3408 528.5029 L
450.3408 527.5103 449.5361 526.7056 448.543 526.7056 C
445.9385 526.7056 L
444.9463 526.7056 444.1416 527.5103 444.1416 528.5029 C
444.1416 540.9482 L
f
451.8232 533.9292 m
451.8232 534.9214 452.627 535.7271 453.6201 535.7271 C
456.2256 535.7271 L
457.2188 535.7271 458.0225 534.9214 458.0225 533.9292 C
458.0225 528.3589 L
458.0225 527.3662 457.2188 526.5615 456.2256 526.5615 C
453.6201 526.5615 L
452.627 526.5615 451.8232 527.3662 451.8232 528.3589 C
451.8232 533.9292 L
f
459.5049 544.2817 m
459.5049 545.2739 460.3096 546.0786 461.3037 546.0786 C
463.9082 546.0786 L
464.9004 546.0786 465.7031 545.2739 465.7031 544.2817 C
465.7031 528.4224 L
465.7031 527.4312 464.9004 526.6255 463.9082 526.6255 C
461.3037 526.6255 L
460.3096 526.6255 459.5049 527.4312 459.5049 528.4224 C
459.5049 544.2817 L
f
U
U
u
*u
0 Ap
0 0 0 0 1 1 1 Xa
549.998 561.7212 m
550.6934 561.709 551.2813 561.3667 551.8369 560.8599 C
551.8369 560.8599 L
571.4326 542.8022 L
572.2246 542.0752 572.6396 541.0854 572.6377 540.0996 C
572.6377 540.0996 L
572.6406 539.1128 572.2246 538.1221 571.4326 537.3965 C
571.4326 537.3965 L
551.8379 519.3374 L
551.2813 518.8291 550.6934 518.4863 549.998 518.4751 C
549.998 518.4751 L
549.416 518.459 548.8311 518.8125 548.5459 519.2915 C
548.5459 519.2915 L
548.248 519.77 548.1426 520.3271 548.1396 520.957 C
548.1396 520.957 L
548.1396 529.293 L
548.1396 529.8882 547.8965 530.4297 547.499 530.8267 C
547.499 530.8267 L
547.1016 531.2246 546.5635 531.4663 545.9658 531.4663 C
545.9658 531.4663 L
538.5674 531.4663 L
536.4102 531.4707 534.6582 533.2207 534.6553 535.3799 C
534.6553 535.3799 L
534.6553 544.8174 L
534.6582 546.9746 536.4092 548.729 538.5674 548.7324 C
538.5674 548.7324 L
545.9658 548.7314 L
546.5635 548.7314 547.1016 548.9736 547.5 549.3711 C
547.5 549.3711 L
547.8965 549.7695 548.1396 550.3096 548.1396 550.9063 C
548.1396 550.9063 L
548.1396 559.2402 L
548.1416 559.8691 548.248 560.4253 548.5459 560.9038 C
548.5459 560.9038 L
548.8232 561.3735 549.3906 561.7212 549.96 561.7212 C
549.96 561.7212 L
549.9727 561.7222 549.9844 561.7212 549.998 561.7212 C
549.998 561.7212 L
f
1 D
550.6582 520.6152 m
570.2539 538.6763 L
570.6934 539.082 570.8955 539.5889 570.8975 540.0996 C
570.8975 540.0996 L
570.8955 540.6079 570.6924 541.1152 570.2539 541.5225 C
570.2539 541.5225 L
550.6582 559.5811 L
550.3447 559.8774 550.0977 559.9673 550.0225 559.9795 C
550.0225 559.9795 L
550.0186 559.9766 550.0166 559.9756 550.0156 559.9712 C
550.0156 559.9712 L
549.9678 559.9058 549.876 559.6563 549.8789 559.2402 C
549.8789 559.2402 L
549.8789 550.9063 L
549.876 548.7495 548.125 546.9946 545.9658 546.9922 C
545.9658 546.9922 L
538.5674 546.9912 L
537.3799 546.9893 536.3965 546.0063 536.3955 544.8174 C
536.3955 544.8174 L
536.3955 535.3799 L
536.3965 534.189 537.3779 533.209 538.5674 533.2061 C
538.5674 533.2061 L
545.9658 533.207 L
548.125 533.2026 549.876 531.4497 549.8789 529.2925 C
549.8789 529.2925 L
549.8809 520.957 L
549.8789 520.6841 549.915 520.48 549.957 520.3579 C
549.957 520.3579 L
549.9824 520.2803 550.0059 520.2373 550.0195 520.2173 C
550.0195 520.2173 L
550.0977 520.229 550.3428 520.3174 550.6582 520.6152 C
550.6582 520.6152 L
f
*U
U
u
u
*u
0.596078 0.513725 0.505882 0.2 0.4 0.4 0.4 Xa
149.3096 553.1392 m
141.145 553.1392 L
140.5039 556.1006 137.8745 558.3193 134.7217 558.3198 c
131.5693 558.3193 128.9395 556.1006 128.2993 553.1392 C
120.1343 553.1392 L
119.1797 553.1392 118.4053 552.3657 118.4053 551.4116 C
118.4053 549.3794 L
118.4053 548.4248 119.1797 547.6509 120.1343 547.6509 C
149.3096 547.6509 L
150.2661 547.6509 151.0396 548.4248 151.0396 549.3794 C
151.0396 551.4116 L
151.0396 552.3657 150.2661 553.1392 149.3096 553.1392 C
f
0 D
134.7217 556.5518 m
136.8906 556.5479 138.7197 555.1123 139.3193 553.1392 C
130.1255 553.1392 L
130.7246 555.1123 132.5527 556.5479 134.7217 556.5518 c
f
*U
U
u
*u
1 D
121.4146 546.0625 m
121.4146 524.042 L
121.4146 520.542 124.2524 517.7051 127.752 517.7051 C
141.6924 517.7051 L
145.1924 517.7051 148.0288 520.542 148.0288 524.042 C
148.0288 546.0625 L
121.4146 546.0625 L
f
0 D
129.4941 523.4214 m
129.4941 522.46 128.7139 521.6787 127.752 521.6787 c
126.79 521.6787 126.0093 522.46 126.0093 523.4214 C
126.0093 541.1387 L
126.0093 542.1016 126.79 542.8809 127.752 542.8809 c
128.7139 542.8809 129.4941 542.1016 129.4941 541.1387 C
129.4941 523.4214 L
f
136.4648 523.4214 m
136.4648 522.46 135.6841 521.6787 134.7222 521.6787 c
133.7598 521.6787 132.9795 522.46 132.9795 523.4214 C
132.9795 541.1387 L
132.9795 542.1016 133.7598 542.8809 134.7222 542.8809 c
135.6841 542.8809 136.4648 542.1016 136.4648 541.1387 C
136.4648 523.4214 L
f
143.4351 523.4214 m
143.4351 522.46 142.6548 521.6787 141.6924 521.6787 c
140.73 521.6787 139.9502 522.46 139.9502 523.4214 C
139.9502 541.1387 L
139.9502 542.1016 140.73 542.8809 141.6924 542.8809 c
142.6548 542.8809 143.4351 542.1016 143.4351 541.1387 C
143.4351 523.4214 L
f
*U
U
U
*u
0 0 0 0 1 1 1 Xa
321.3384 538.3516 m
320.6372 539.0527 320.6372 540.189 321.3384 540.8887 C
321.3384 540.8887 L
340.707 560.2598 L
341.3789 560.9331 342.2769 561.2778 343.1587 561.2754 C
343.1587 561.2754 L
344.0391 561.2778 344.936 560.9336 345.6084 560.2598 C
345.6084 560.2598 L
364.9785 540.8887 L
365.6797 540.189 365.6797 539.0522 364.9785 538.3516 C
364.9785 538.3516 L
364.2773 537.6523 363.1411 537.6523 362.4414 538.353 C
362.4414 538.353 L
343.1587 557.6357 L
323.876 538.353 L
323.876 538.3516 L
323.5264 538.002 323.0664 537.8262 322.606 537.8262 C
322.606 537.8262 L
322.1475 537.8262 321.688 538.002 321.3384 538.3516 C
321.3384 538.3516 L
f
u
1 D
344.1099 554.4712 m
343.8447 554.7363 343.5059 554.8647 343.1587 554.8657 c
342.8115 554.8647 342.4722 554.7363 342.207 554.4712 C
327.6826 539.9458 L
327.6826 523.2485 L
327.6826 522.0107 328.686 521.0049 329.9253 521.0049 C
338.7837 521.0049 L
338.7837 532.2192 L
338.7837 533.458 339.7891 534.4619 341.0278 534.4619 C
345.2886 534.4619 L
346.5273 534.4619 347.5313 533.458 347.5313 532.2192 C
347.5313 521.0049 L
356.3911 521.0049 L
357.6289 521.0049 358.6348 522.0107 358.6348 523.2485 C
358.6348 539.9468 L
344.1099 554.4712 L
f
U
*U
u
*u
0 D
437.5596 438.2241 m
436.7715 438.229 436.0273 438.4702 435.3477 438.832 C
435.3477 438.832 L
434.6699 439.2002 434.0596 439.6855 433.6201 440.3408 C
433.6201 440.3408 L
428.1299 451.5044 L
427.8584 451.9189 427.6719 452.3828 427.666 452.9092 C
427.666 452.9092 L
427.6543 453.4751 427.9492 454.0908 428.417 454.4297 C
428.417 454.4297 L
428.8809 454.7749 429.4141 454.8916 429.9512 454.8931 C
429.9512 454.8931 L
456.8418 454.8931 L
457.3848 454.8916 457.9307 454.7676 458.3916 454.4136 C
458.3916 454.4136 L
458.8613 454.0688 459.1543 453.4507 459.1406 452.8813 C
459.1406 452.8813 L
459.1377 452.3721 458.9619 451.916 458.7051 451.5029 C
458.7051 451.5029 L
453.5371 440.3794 L
453.1064 439.7139 452.502 439.2163 451.8301 438.8423 C
451.8301 438.8423 L
451.1533 438.4751 450.4082 438.229 449.6162 438.2231 C
449.6162 438.2231 L
437.5596 438.2241 L
437.5596 438.2241 L
f
1 D
451.5918 441.6143 m
456.667 452.5898 L
430.1738 452.5898 L
435.541 441.6123 L
435.6846 441.3862 436.0342 441.0732 436.4385 440.8618 C
436.4385 440.8618 L
436.8389 440.6416 437.291 440.522 437.5596 440.5273 C
437.5596 440.5273 L
449.6162 440.5264 L
449.6162 440.5264 L
449.8818 440.522 450.3271 440.6416 450.7188 440.8618 C
450.7188 440.8618 L
451.1162 441.0747 451.4561 441.3882 451.5918 441.6133 C
451.5918 441.6133 L
451.5918 441.6143 L
f
*U
u
0 D
433.2314 434.9854 m
433.2314 435.6201 433.7461 436.1372 434.3828 436.1372 C
434.3828 436.1372 L
452.6826 436.1367 L
452.9512 436.1318 453.4063 436.2505 453.8086 436.4697 C
453.8086 436.4697 L
454.2148 436.6821 454.5654 436.9951 454.709 437.2207 C
454.709 437.2207 L
463.5576 455.7065 L
464 456.3584 464.6143 456.8438 465.291 457.2095 C
465.291 457.2095 L
465.9678 457.5693 466.7129 457.811 467.501 457.8154 C
467.501 457.8154 L
469.1494 457.8154 L
469.1494 457.8145 L
469.7861 457.8145 470.3018 457.2998 470.3018 456.6636 C
470.3018 456.6636 L
470.3018 456.0283 469.7861 455.5127 469.1494 455.5127 C
469.1494 455.5127 L
467.501 455.5127 L
467.2324 455.5171 466.7773 455.3984 466.376 455.1782 C
466.376 455.1782 L
465.9697 454.9668 465.6182 454.6538 465.4746 454.4292 C
465.4746 454.4292 L
456.626 435.9429 L
456.1836 435.2905 455.5713 434.8052 454.8945 434.4385 C
454.8945 434.4385 L
454.2148 434.0796 453.4717 433.8384 452.6826 433.8335 C
452.6826 433.8335 L
434.3828 433.832 L
433.7461 433.832 433.2314 434.3477 433.2314 434.9854 C
433.2314 434.9854 L
f
U
*u
448.4023 429.5596 m
448.4043 431.3159 449.8262 432.7388 451.583 432.7397 C
451.583 432.7397 L
453.3389 432.7388 454.7607 431.3159 454.7627 429.5596 C
454.7627 429.5596 L
454.7607 427.8022 453.3389 426.3818 451.583 426.3813 C
451.583 426.3813 L
449.8262 426.3818 448.4043 427.8022 448.4023 429.5596 C
448.4023 429.5596 L
f
1 D
450.707 429.5596 m
450.708 429.0762 451.0986 428.6841 451.583 428.6841 C
451.583 428.6841 L
452.0654 428.6841 452.458 429.0762 452.458 429.5596 C
452.458 429.5596 L
452.458 430.0439 452.0654 430.4336 451.583 430.4351 C
451.583 430.4351 L
451.0986 430.4336 450.708 430.0439 450.707 429.5596 C
450.707 429.5596 L
f
*U
*u
0 D
435.085 429.5596 m
435.0859 431.3159 436.5088 432.7388 438.2646 432.7397 C
438.2646 432.7397 L
440.0225 432.7388 441.4453 431.3159 441.4453 429.5596 C
441.4453 429.5596 L
441.4453 427.8022 440.0225 426.3818 438.2646 426.3813 C
438.2646 426.3813 L
436.5088 426.3818 435.0859 427.8022 435.085 429.5596 C
435.085 429.5596 L
f
1 D
437.3916 429.5596 m
437.3916 429.0762 437.7832 428.6841 438.2646 428.6841 C
438.2646 428.6841 L
438.749 428.6841 439.1406 429.0762 439.1406 429.5596 C
439.1406 429.5596 L
439.1406 430.0439 438.749 430.4336 438.2646 430.4351 C
438.2646 430.4351 L
437.7832 430.4336 437.3916 430.0439 437.3916 429.5596 C
437.3916 429.5596 L
f
*U
U
u
u
*u
246.3564 557.3657 m
235.8696 557.3657 L
235.8696 561.603 L
235.8696 562.3223 235.2871 562.9053 234.5674 562.9053 C
233.3945 562.9053 L
232.6758 562.9053 232.0918 562.3223 232.0918 561.603 C
232.0918 557.3564 L
229.8677 557.2505 228.0957 555.4189 228.0957 553.1689 C
228.0957 523.9946 L
228.0957 521.6748 229.9751 519.7959 232.293 519.7959 C
246.3564 519.7959 L
248.6748 519.7959 250.5542 521.6748 250.5542 523.9946 C
250.5542 553.1689 L
250.5542 555.4873 248.6748 557.3657 246.3564 557.3657 C
f
0 D
236.4258 523.4014 m
236.4258 523.0986 236.1797 522.853 235.876 522.853 C
234.1719 522.853 L
233.8687 522.853 233.623 523.0986 233.623 523.4014 C
233.623 525.1055 L
233.623 525.4087 233.8687 525.6553 234.1719 525.6553 C
235.876 525.6553 L
236.1797 525.6553 236.4258 525.4087 236.4258 525.1055 C
236.4258 523.4014 L
f
236.4258 527.3789 m
236.4258 527.0752 236.1797 526.8296 235.876 526.8296 C
234.1719 526.8296 L
233.8687 526.8296 233.623 527.0752 233.623 527.3789 C
233.623 529.0835 L
233.623 529.3867 233.8687 529.6323 234.1719 529.6323 C
235.876 529.6323 L
236.1797 529.6323 236.4258 529.3867 236.4258 529.0835 C
236.4258 527.3789 L
f
234.1719 530.8076 m
233.8687 530.8076 233.623 531.0532 233.623 531.3564 C
233.623 533.0601 L
233.623 533.3643 233.8687 533.6104 234.1719 533.6104 C
235.876 533.6104 L
236.1797 533.6104 236.4258 533.3643 236.4258 533.0601 C
236.4258 531.3564 L
236.4258 531.0532 236.1797 530.8076 235.876 530.8076 C
234.1719 530.8076 L
f
236.4258 535.3335 m
236.4258 535.0298 236.1797 534.7847 235.876 534.7847 C
234.1719 534.7847 L
233.8687 534.7847 233.623 535.0298 233.623 535.3335 C
233.623 537.0386 L
233.623 537.3413 233.8687 537.5864 234.1719 537.5864 C
235.876 537.5864 L
236.1797 537.5864 236.4258 537.3413 236.4258 537.0386 C
236.4258 535.3335 L
f
240.7266 523.4014 m
240.7266 523.0986 240.481 522.853 240.1768 522.853 C
238.4731 522.853 L
238.1689 522.853 237.9233 523.0986 237.9233 523.4014 C
237.9233 525.1055 L
237.9233 525.4087 238.1689 525.6553 238.4731 525.6553 C
240.1768 525.6553 L
240.481 525.6553 240.7266 525.4087 240.7266 525.1055 C
240.7266 523.4014 L
f
240.7266 527.3789 m
240.7266 527.0752 240.481 526.8296 240.1768 526.8296 C
238.4731 526.8296 L
238.1689 526.8296 237.9233 527.0752 237.9233 527.3789 C
237.9233 529.0835 L
237.9233 529.3867 238.1689 529.6323 238.4731 529.6323 C
240.1768 529.6323 L
240.481 529.6323 240.7266 529.3867 240.7266 529.0835 C
240.7266 527.3789 L
f
240.7266 531.3564 m
240.7266 531.0532 240.481 530.8076 240.1768 530.8076 C
238.4731 530.8076 L
238.1689 530.8076 237.9233 531.0532 237.9233 531.3564 C
237.9233 533.0601 L
237.9233 533.3643 238.1689 533.6104 238.4731 533.6104 C
240.1768 533.6104 L
240.481 533.6104 240.7266 533.3643 240.7266 533.0601 C
240.7266 531.3564 L
f
240.7266 535.3335 m
240.7266 535.0298 240.481 534.7847 240.1768 534.7847 C
238.4731 534.7847 L
238.1689 534.7847 237.9233 535.0298 237.9233 535.3335 C
237.9233 537.0386 L
237.9233 537.3413 238.1689 537.5864 238.4731 537.5864 C
240.1768 537.5864 L
240.481 537.5864 240.7266 537.3413 240.7266 537.0386 C
240.7266 535.3335 L
f
245.0269 523.4014 m
245.0269 523.0986 244.7817 522.853 244.4775 522.853 C
242.7734 522.853 L
242.4702 522.853 242.2241 523.0986 242.2241 523.4014 C
242.2241 525.1055 L
242.2241 525.4087 242.4702 525.6553 242.7734 525.6553 C
244.4775 525.6553 L
244.7817 525.6553 245.0269 525.4087 245.0269 525.1055 C
245.0269 523.4014 L
f
245.0269 527.3789 m
245.0269 527.0752 244.7817 526.8296 244.4775 526.8296 C
242.7734 526.8296 L
242.4702 526.8296 242.2241 527.0752 242.2241 527.3789 C
242.2241 529.0835 L
242.2241 529.3867 242.4702 529.6323 242.7734 529.6323 C
244.4775 529.6323 L
244.7817 529.6323 245.0269 529.3867 245.0269 529.0835 C
245.0269 527.3789 L
f
245.0269 531.3564 m
245.0269 531.0532 244.7817 530.8076 244.4775 530.8076 C
242.7734 530.8076 L
242.4702 530.8076 242.2241 531.0532 242.2241 531.3564 C
242.2241 533.0601 L
242.2241 533.3643 242.4702 533.6104 242.7734 533.6104 C
244.4775 533.6104 L
244.7817 533.6104 245.0269 533.3643 245.0269 533.0601 C
245.0269 531.3564 L
f
245.0269 535.3335 m
245.0269 535.0298 244.7817 534.7847 244.4775 534.7847 C
242.7734 534.7847 L
242.4702 534.7847 242.2241 535.0298 242.2241 535.3335 C
242.2241 537.0386 L
242.2241 537.3413 242.4702 537.5864 242.7734 537.5864 C
244.4775 537.5864 L
244.7817 537.5864 245.0269 537.3413 245.0269 537.0386 C
245.0269 535.3335 L
f
247.7607 543.9277 m
247.7607 542.1919 246.3535 540.7842 244.6172 540.7842 C
234.0327 540.7842 L
232.2959 540.7842 230.8887 542.1919 230.8887 543.9277 C
230.8887 550.2153 L
230.8887 551.2192 231.3599 552.1104 232.0918 552.6855 c
232.6274 553.1064 233.2998 553.3589 234.0327 553.3589 C
235.8696 553.3589 L
244.6172 553.3589 L
246.3535 553.3589 247.7607 551.9517 247.7607 550.2153 C
247.7607 543.9277 L
f
*U
U
U
u
*u
149.9951 426.6563 m
149.2046 426.6846 148.7627 426.9751 148.2651 427.3018 C
148.2651 427.3018 L
138.2285 434.3755 L
136.9868 434.1924 135.7061 434.0933 134.3921 434.0933 C
134.3921 434.0933 L
128.9097 434.0952 123.9199 435.751 120.2305 438.5146 C
120.2305 438.5146 L
116.5503 441.2656 114.1299 445.2188 114.1299 449.6743 C
114.1299 449.6743 L
114.1299 454.1284 116.5503 458.0835 120.2305 460.8345 C
120.2305 460.8345 L
123.9199 463.5967 128.9097 465.252 134.3921 465.2554 C
134.3921 465.2554 L
139.8721 465.252 144.8628 463.5967 148.5518 460.8345 C
148.5518 460.8345 L
152.2344 458.0835 154.6519 454.1284 154.6519 449.6743 C
154.6519 449.6743 L
154.6494 445.1226 152.1353 441.1133 148.3193 438.3442 C
148.3193 438.3442 L
151.6099 429.9238 L
151.7686 429.5073 151.8828 429.1147 151.8862 428.6289 C
151.8862 428.6289 L
151.8857 428.2734 151.8184 427.7949 151.4482 427.3306 C
151.4482 427.3306 L
151.0957 426.8765 150.4863 426.6543 150.0503 426.6543 C
150.0503 426.6543 L
150.0313 426.6543 150.0137 426.6553 149.9951 426.6563 C
149.9951 426.6563 L
f
1 D
147.6948 431.4741 m
145.002 438.3696 L
146.4365 438.9292 L
147.2593 437.626 L
146.4365 438.9292 L
145.002 438.3696 L
144.5381 439.5552 L
145.6143 440.2329 L
149.3677 442.6157 151.5732 446.0117 151.5703 449.6743 C
151.5703 449.6743 L
151.5698 452.9736 149.7979 456.0381 146.7026 458.3706 C
146.7026 458.3706 L
143.6172 460.686 139.248 462.1758 134.3921 462.1724 C
134.3921 462.1724 L
129.5347 462.1758 125.165 460.686 122.0796 458.3706 C
122.0796 458.3706 L
118.9844 456.0381 117.2139 452.9736 117.2139 449.6743 C
117.2139 449.6743 L
117.2139 446.3755 118.9844 443.3105 122.0796 440.9795 C
122.0796 440.9795 L
125.165 438.6616 129.5347 437.1724 134.3921 437.1753 C
134.3921 437.1753 L
135.751 437.1753 137.0718 437.2954 138.3428 437.5151 C
138.3428 437.5151 L
138.9702 437.6245 L
147.6948 431.4741 L
147.6948 431.4741 L
f
*U
0 D
122.9771 451.2896 m
122.9771 454.5303 L
145.8052 454.5303 L
145.8052 451.2896 L
122.9771 451.2896 L
122.9771 451.2896 L
f
122.9771 445.6167 m
122.9771 448.8569 L
145.8052 448.8569 L
145.8052 445.6167 L
122.9771 445.6167 L
122.9771 445.6167 L
f
U
u
149.6929 361.1279 m
150.3799 361.6069 150.3672 362.3711 149.6655 362.8281 c
136.2725 371.5278 l
135.5693 371.9844 134.4209 371.9844 133.7192 371.5278 c
120.3271 362.8281 l
119.6245 362.3711 119.6123 361.6069 120.2988 361.1279 c
133.7471 351.7441 l
134.4336 351.2651 135.5571 351.2651 136.2441 351.7441 c
149.6929 361.1279 l
f
*u
1 D
152.3115 360.624 m
152.0835 360.624 L
134.9956 348.7007 L
117.9087 360.624 L
117.6802 360.624 L
116.6294 360.624 115.7778 359.772 115.7778 358.7207 C
115.7778 339.502 L
115.7778 338.4507 116.6294 337.5991 117.6802 337.5991 C
152.3115 337.5991 L
153.3633 337.5991 154.2148 338.4507 154.2148 339.502 C
154.2148 358.7207 L
154.2148 359.772 153.3633 360.624 152.3115 360.624 C
f
0 D
130.02 347.5967 m
118.9321 339.8604 L
118.8335 339.792 118.7192 339.7578 118.6064 339.7578 c
118.4263 339.7578 118.249 339.8438 118.1377 340.0029 c
117.9575 340.2607 118.0205 340.6177 118.2793 340.7974 C
129.3672 348.5332 L
129.6255 348.7134 129.9819 348.6499 130.1611 348.3911 c
130.3423 348.1323 130.2783 347.7773 130.02 347.5967 C
f
151.853 340.0029 m
151.7432 339.8438 151.5649 339.7578 151.3853 339.7578 c
151.2715 339.7578 151.1577 339.792 151.0591 339.8604 C
139.9717 347.5967 L
139.7144 347.7773 139.6489 348.1323 139.8296 348.3911 c
140.0098 348.6499 140.3662 348.7134 140.6245 348.5332 C
151.7119 340.7974 L
151.9702 340.6177 152.0342 340.2607 151.853 340.0029 c
f
*U
U
u
u
253.9131 361.1201 m
254.1484 361.2837 254.1064 361.4175 253.8198 361.4175 c
225.1616 361.4175 l
224.8745 361.4175 224.833 361.2837 225.0684 361.1201 c
239.0635 351.356 l
239.2988 351.1914 239.6831 351.1914 239.918 351.356 c
253.9131 361.1201 l
f
U
u
*u
1 D
256.5576 360.6489 m
256.3296 360.6489 L
239.2437 348.7266 L
222.1563 360.6489 L
221.9277 360.6489 L
220.8765 360.6489 220.0254 359.7979 220.0254 358.7471 C
220.0254 339.5273 L
220.0254 338.4761 220.8765 337.626 221.9277 337.626 C
256.5576 337.626 L
257.6094 337.626 258.4619 338.4761 258.4619 339.5273 C
258.4619 358.7471 L
258.4619 359.7979 257.6094 360.6489 256.5576 360.6489 C
f
0 D
234.2681 347.6226 m
223.1802 339.8872 L
223.0806 339.8179 222.9668 339.7842 222.854 339.7842 c
222.6738 339.7842 222.4971 339.8696 222.3857 340.0293 c
222.2051 340.2861 222.2686 340.6445 222.5269 340.8232 C
233.6147 348.5596 L
233.8735 348.7393 234.2285 348.6763 234.4097 348.416 c
234.5894 348.1582 234.5269 347.8027 234.2681 347.6226 C
f
256.1006 340.0293 m
255.9907 339.8696 255.812 339.7842 255.6323 339.7842 c
255.5195 339.7842 255.4048 339.8179 255.3062 339.8872 C
244.2202 347.6226 L
243.9614 347.8027 243.8965 348.1582 244.0776 348.416 c
244.2563 348.6763 244.6138 348.7393 244.8726 348.5596 C
255.959 340.8232 L
256.2173 340.6445 256.2817 340.2861 256.1006 340.0293 c
f
*U
U
U
u
u
*u
240.5576 278.0215 m
240.5576 274.7764 L
245.5576 274.3984 248.3032 271.8496 248.7949 267.1299 C
244.6865 267.1299 L
244.4619 269.7432 243.085 271.2227 240.5576 271.5762 C
240.5576 260.9805 L
244.041 260.2637 246.4067 259.2197 247.6572 257.8516 C
248.9063 256.4814 249.5317 254.6162 249.5317 252.2588 C
249.5317 249.8018 248.7378 247.6611 247.1509 245.8418 C
245.5645 244.0244 243.3672 243.0391 240.5576 242.8838 C
240.5576 239.6182 L
238.3032 239.6182 L
238.3032 242.8418 L
232.5742 243.4736 229.5112 246.5566 229.1187 252.0898 C
233.2061 252.0898 L
233.5137 248.5791 235.2139 246.5615 238.3032 246.0439 C
238.3032 257.8203 L
232.6157 258.9561 229.7729 261.7314 229.7729 266.1406 C
229.7729 268.625 230.5405 270.6279 232.0796 272.1426 C
233.6172 273.6621 235.6914 274.5391 238.3032 274.7764 C
238.3032 278.0215 L
240.5576 278.0215 L
240.5576 278.0215 L
f
1 D
238.3032 261.4424 m
238.3032 271.6162 L
235.3403 271.0977 233.8584 269.376 233.8584 266.4561 C
233.8584 264.8818 234.2705 263.7373 235.0913 263.0234 C
235.9116 262.3057 236.9839 261.7793 238.3032 261.4424 C
238.3032 261.4424 L
f
240.5576 246.0439 m
243.8018 246.4512 245.4243 248.4375 245.4243 252.0059 C
245.4243 253.4639 245.0942 254.5879 244.4331 255.377 C
243.7734 256.1641 242.4819 256.8076 240.5576 257.3145 C
240.5576 246.0439 L
240.5576 246.0439 L
f
242.208 279.6729 m
240.5576 279.6729 L
238.3032 279.6729 L
236.6533 279.6729 L
236.6533 278.0215 L
236.6533 276.21 L
234.3408 275.7656 232.4175 274.7959 230.9199 273.3193 C
229.0625 271.4863 228.1221 269.0713 228.1221 266.1406 C
228.1221 262.7109 229.6436 258.3574 236.6533 256.5068 C
236.6533 248.3877 L
235.7627 249.0059 235.0356 250.127 234.8496 252.2334 C
234.7183 253.7402 L
233.2061 253.7402 L
229.1187 253.7402 L
227.3472 253.7402 L
227.4731 251.9736 L
227.8867 246.1367 231.0513 242.5166 236.6533 241.4238 C
236.6533 239.6182 L
236.6533 237.9668 L
238.3032 237.9668 L
240.5576 237.9668 L
242.208 237.9668 L
242.208 239.6182 L
242.208 241.4053 L
244.7466 241.834 246.8223 242.9551 248.395 244.7578 C
250.2446 246.876 251.1826 249.4014 251.1826 252.2588 C
251.1826 255.0293 250.4063 257.2861 248.8765 258.9619 C
247.5483 260.417 245.3594 261.5146 242.208 262.2979 C
242.208 269.1504 L
242.6968 268.6699 242.958 267.9707 243.042 266.9863 C
243.1709 265.4795 L
244.6865 265.4795 L
248.7949 265.4795 L
250.626 265.4795 L
250.4365 267.3018 L
249.9116 272.3232 247.0781 275.3887 242.208 276.2334 C
242.208 278.0215 L
242.208 279.6729 L
242.208 279.6729 L
f
0 D
236.6533 263.9063 m
236.4819 264.0195 236.3223 264.1377 236.1768 264.2656 C
235.7329 264.6523 235.5098 265.3867 235.5098 266.4561 C
235.5098 267.7861 235.8589 268.6836 236.6533 269.2656 C
236.6533 263.9063 L
236.6533 263.9063 L
f
242.208 248.2686 m
242.208 254.9824 L
242.7954 254.6904 243.0596 254.4463 243.1699 254.3125 C
243.5703 253.835 243.7734 253.0605 243.7734 252.0059 C
243.7734 250.1299 243.29 248.9307 242.208 248.2686 C
242.208 248.2686 L
f
*U
U
U
u
*u
1 D
0.596078 0.513725 0.505882 0.2 0.4 0.4 0.4 Xa
149.6572 267.0723 m
141.1982 267.0723 L
141.1982 267.7461 L
141.1978 270.0391 139.3398 271.8975 137.0469 271.8975 C
133.3818 271.8975 L
131.0889 271.8975 129.2305 270.0391 129.23 267.7461 C
129.23 267.0723 L
120.165 267.0723 L
118.5825 267.0723 117.2993 265.7891 117.2993 264.2061 C
117.2993 245.5 L
117.2993 243.918 118.5825 242.6338 120.165 242.6338 C
149.6572 242.6338 L
151.2402 242.6338 152.5239 243.918 152.5239 245.5 C
152.5239 264.2061 L
152.5239 265.7891 151.2402 267.0723 149.6572 267.0723 C
f
0 D
130.7383 267.7461 m
130.7412 269.2061 131.9224 270.3848 133.3818 270.3877 C
137.0469 270.3877 L
138.5059 270.3848 139.687 269.2061 139.6895 267.7461 C
139.6895 267.0723 L
130.7383 267.0723 L
130.7383 267.7461 L
f
*U
U
u
0 0 0 0 1 1 1 Xa
124.5337 82.2236 m
122.9194 85.0186 L
124.5337 87.8154 L
133.4565 87.8154 L
135.0703 85.0186 L
133.4565 82.2236 L
124.5337 82.2236 L
f
114.2588 58.791 m
114.2588 79.6016 L
114.2588 82.5332 116.6323 84.9092 119.5625 84.9092 C
119.5625 84.9092 L
121.4604 84.9092 L
123.7417 80.957 L
134.2534 80.957 L
136.5356 84.9102 L
150.5776 84.9102 L
150.5776 83.6846 L
150.5776 82.46 L
137.9497 82.4619 L
135.668 78.5078 L
123.2314 78.5078 L
122.3271 78.5078 L
120.0459 82.4619 L
119.5625 82.46 L
117.9868 82.459 116.709 81.1797 116.7075 79.6016 C
116.7075 79.6016 L
116.7075 58.791 L
116.709 57.2148 117.9868 55.9375 119.5625 55.9346 C
119.5625 55.9346 L
150.5776 55.9355 L
152.1533 55.9375 153.4312 57.2148 153.4331 58.791 C
153.4331 58.791 L
153.4331 79.6016 L
153.4312 81.1797 152.1533 82.459 150.5776 82.46 C
150.5776 82.46 L
150.5776 83.6846 L
150.5776 84.9102 L
153.5078 84.9092 155.8818 82.5332 155.8818 79.6016 C
155.8818 79.6016 L
155.8818 58.791 L
155.8818 55.8604 153.5078 53.4863 150.5776 53.4863 C
150.5776 53.4863 L
119.5625 53.4844 L
116.6323 53.4863 114.2588 55.8604 114.2588 58.791 C
114.2588 58.791 L
f
U
u
u
*u
1 D
253.4673 79.3027 m
246.252 87.6738 L
244.8228 89.3301 L
227.7773 89.3301 L
225.4888 89.3301 223.6348 87.4766 223.6343 85.1875 C
223.6343 54.0283 L
223.6348 51.7393 225.4888 49.8848 227.7773 49.8848 C
250.981 49.8848 L
253.27 49.8848 255.125 51.7393 255.1255 54.0283 C
255.1255 77.3779 L
253.4673 79.3027 L
f
0 D
246.48 84.9834 m
251.4258 79.0352 L
248.9668 79.0352 L
247.5938 79.0381 246.4829 80.1494 246.48 81.5205 C
246.48 84.9834 L
f
253.4673 54.0283 m
253.4648 52.6553 252.354 51.5439 250.981 51.541 C
227.7773 51.541 L
226.4053 51.5439 225.2944 52.6553 225.2925 54.0283 C
225.2925 85.1875 L
225.2944 86.5605 226.4053 87.6709 227.7773 87.6738 C
244.8228 87.6738 L
244.8228 81.5205 L
244.8237 79.2324 246.6782 77.3779 248.9668 77.3779 C
253.4673 77.3779 L
253.4673 54.0283 L
f
*U
U
231.8794 67.083 m
231.8794 69.0723 L
246.8804 69.0723 L
246.8804 67.083 L
231.8794 67.083 L
231.8794 67.083 L
f
231.8794 71.3545 m
231.8794 73.3428 L
246.8804 73.3428 L
246.8804 71.3545 L
231.8794 71.3545 L
231.8794 71.3545 L
f
231.8794 62.8115 m
231.8794 64.7998 L
246.8804 64.7998 L
246.8804 62.8115 L
231.8794 62.8115 L
231.8794 62.8115 L
f
231.8794 58.541 m
231.8794 60.5293 L
246.8804 60.5293 L
246.8804 58.541 L
231.8794 58.541 L
231.8794 58.541 L
f
U
*u
u
u
1 D
0.596078 0.513725 0.505882 0.2 0.4 0.4 0.4 Xa
355.6538 86.0693 m
353.3198 86.0693 L
353.3198 77.9551 L
353.3198 76.8193 352.4009 75.9004 351.2656 75.9004 C
335.0356 75.9004 L
333.9014 75.9004 332.981 76.8193 332.981 77.9551 C
332.981 86.0693 L
330.6475 86.0693 L
327.8848 86.0693 325.646 83.8301 325.646 81.0693 C
325.646 56.0596 L
325.646 53.2988 327.8848 51.0586 330.6475 51.0586 C
355.6538 51.0586 L
358.417 51.0586 360.6558 53.2988 360.6558 56.0596 C
360.6558 81.0693 L
360.6558 83.8301 358.417 86.0693 355.6538 86.0693 C
f
0 D
354.7173 58.5518 m
354.7173 56.2109 352.8193 54.3125 350.479 54.3096 C
335.8228 54.3125 L
333.48 54.3125 331.5835 56.2109 331.5835 58.5518 C
331.583 66.5752 L
331.5835 68.918 333.48 70.8164 335.8228 70.8164 C
350.479 70.8164 L
352.8193 70.8164 354.7173 68.918 354.7173 66.5752 C
354.7173 58.5518 L
f
U
353.2173 66.5752 m
353.2173 58.5518 L
353.2139 57.0381 351.9912 55.8145 350.479 55.8115 C
335.8228 55.8115 L
334.3105 55.8145 333.0864 57.0381 333.0835 58.5518 C
333.0835 66.5752 L
333.0864 68.0898 334.3105 69.3115 335.8228 69.3145 C
350.479 69.3145 L
351.9912 69.3115 353.2139 68.0898 353.2173 66.5752 C
f
U
1 Ap
351.0977 77.832 m
351.0977 77.3174 350.6797 76.8994 350.165 76.8994 C
346.5283 76.8994 L
346.0142 76.8994 345.5957 77.3174 345.5957 77.832 C
345.5957 84.4209 L
345.5957 84.9365 346.0142 85.3545 346.5283 85.3545 C
350.165 85.3545 L
350.6797 85.3545 351.0977 84.9365 351.0977 84.4209 C
351.0977 77.832 L
f
*U
u
0 Ap
0 0 0 0 1 1 1 Xa
355.645 269.4102 m
349.4287 254.4365 L
343.1802 260.6846 L
337.9702 248.8711 L
332.4077 254.7578 L
323.9346 242.4736 L
327.3931 240.0889 L
327.3931 240.0889 L
332.9189 248.1025 L
339.2583 241.3887 L
344.5474 253.3779 L
350.8994 247.0254 L
359.5249 267.8027 L
355.645 269.4102 L
f
361.0039 267.1895 m
361.8174 266.8525 362.3652 267.4697 362.2217 268.5596 c
361.3511 275.1689 l
361.2075 276.2588 360.376 276.6035 359.5029 275.9336 c
354.2158 271.877 l
353.3428 271.207 353.3076 270.3779 354.1367 270.0352 c
354.9663 269.6914 356.4766 269.0654 357.4927 268.6445 c
357.6772 268.5684 l
358.6934 268.1475 360.1904 267.5273 361.0039 267.1895 c
f
U
u
u
337.3267 183.3447 m
335.6011 183.3447 334.5947 181.9932 335.0923 180.3398 c
342.2534 156.5342 l
342.7515 154.8799 343.5649 154.8799 344.0625 156.5342 c
351.2241 180.3398 l
351.7217 181.9932 350.7148 183.3447 348.9897 183.3447 c
337.3267 183.3447 l
f
U
1 Ap
349.1216 147.4063 m
349.1216 150.7012 346.4512 153.3711 343.1572 153.3711 c
339.8652 153.3711 337.1938 150.7012 337.1938 147.4063 c
337.1938 144.1123 339.8652 141.4434 343.1572 141.4434 c
346.4512 141.4434 349.1216 144.1123 349.1216 147.4063 c
f
U
u
u
0 Ap
129.9658 140.6279 m
128.4419 140.6279 127.5522 141.8223 127.9927 143.2842 c
134.3198 164.3184 l
134.7588 165.7783 135.4771 165.7783 135.917 164.3184 c
142.2441 143.2842 l
142.6836 141.8223 141.7949 140.6279 140.2705 140.6279 c
129.9658 140.6279 l
f
U
1 Ap
138.7666 170.4287 m
138.7666 168.415 137.1343 166.7813 135.1187 166.7813 c
133.103 166.7813 131.4688 168.415 131.4688 170.4287 c
131.4688 172.4443 133.103 174.0781 135.1187 174.0781 c
137.1343 174.0781 138.7666 172.4443 138.7666 170.4287 c
f
0 Ap
145.4897 170.4287 m
145.4878 176.1563 140.8462 180.7998 135.1187 180.7998 c
129.3892 180.7998 124.7485 176.1572 124.7476 170.4287 c
124.748 165.9199 127.6255 162.0869 131.6431 160.6572 C
132.1973 162.498 L
131.0391 162.9238 130.0005 163.5957 129.1431 164.4521 c
127.6118 165.9854 126.6685 168.0908 126.6675 170.4287 c
126.6685 172.7656 127.6118 174.873 129.1431 176.4053 c
130.6748 177.9346 132.7822 178.8789 135.1187 178.8789 c
137.4546 178.8789 139.5605 177.9346 141.0933 176.4053 c
142.624 174.8721 143.5674 172.7656 143.5679 170.4287 c
143.5674 168.0908 142.624 165.9854 141.0933 164.4521 c
140.2358 163.5957 139.1973 162.9238 138.0396 162.498 C
138.5938 160.6572 L
142.6113 162.0869 145.4878 165.9199 145.4897 170.4287 c
f
142.2246 170.4287 m
142.2236 174.3545 139.043 177.5342 135.1187 177.5342 c
131.1934 177.5342 128.0132 174.3545 128.0127 170.4287 c
128.0127 167.3984 129.9131 164.8096 132.5854 163.7891 C
133.1406 165.6377 L
131.2607 166.417 129.9365 168.2656 129.9331 170.4287 c
129.9385 173.293 132.2554 175.6104 135.1187 175.6143 c
137.9814 175.6104 140.2988 173.293 140.3032 170.4287 c
140.2998 168.2656 138.9766 166.417 137.0952 165.6377 C
137.6509 163.7891 L
140.3242 164.8096 142.2236 167.3984 142.2246 170.4287 c
f
148.8496 170.4287 m
148.8496 178.0146 142.7017 184.1611 135.1187 184.1611 c
127.5337 184.1611 121.3872 178.0146 121.3867 170.4287 c
121.3872 164.4014 125.2725 159.2832 130.6743 157.4375 C
131.228 159.2764 L
129.5317 159.8691 128.0127 160.832 126.7671 162.0762 c
124.6274 164.2178 123.3071 167.1641 123.3071 170.4287 c
123.3071 173.6924 124.6274 176.6406 126.7671 178.7813 c
128.9063 180.9189 131.8535 182.2402 135.1187 182.2402 c
138.3823 182.2402 141.3286 180.9189 143.4702 178.7813 c
145.6089 176.6406 146.9292 173.6924 146.9292 170.4287 c
146.9292 167.1641 145.6089 164.2178 143.4702 162.0762 c
142.2246 160.832 140.7036 159.8691 139.0083 159.2764 C
139.5615 157.4375 L
144.9634 159.2832 148.8496 164.4014 148.8496 170.4287 c
f
U
u
0.596078 0.513725 0.505882 0.2 0.4 0.4 0.4 Xa
253.6768 179.3389 m
253.668 179.3486 253.6577 179.3555 253.6484 179.3662 c
253.644 179.3682 253.6396 179.376 253.6353 179.3789 C
253.6338 179.3779 L
251.9414 181.0674 249.793 181.7373 247.7529 181.4541 c
245.6968 181.1836 243.7744 180.0635 242.1592 178.4521 C
223.9453 160.2393 L
220.519 156.8145 220.521 151.2627 223.9448 147.833 c
227.3667 144.4199 232.9546 144.3496 236.4009 147.7832 C
254.4678 165.8496 L
252.6958 167.6201 L
252.6943 167.624 L
234.627 149.5566 L
232.1919 147.1279 228.1704 147.1641 225.7168 149.6055 c
223.2749 152.0586 223.2754 156.0156 225.7168 158.4678 C
243.9302 176.6807 L
246.6851 179.2959 249.3604 179.6875 251.8979 177.5693 c
252.6641 176.9316 253.1885 175.9111 253.3779 174.9951 c
253.5576 174.0684 253.4531 173.2246 252.6968 172.2695 C
237.8828 157.4551 L
236.6631 156.2402 234.6963 156.2432 233.4795 157.4502 c
232.2656 158.668 232.269 160.6289 233.4893 161.8506 C
245.9771 174.3398 L
244.207 176.1104 L
231.7158 163.623 L
229.5273 161.4258 229.5137 157.8809 231.7085 155.6797 c
233.9023 153.4893 237.459 153.4873 239.6548 155.6846 C
254.5479 170.5762 L
254.5967 170.6328 L
255.877 172.1533 256.1768 173.9795 255.8281 175.5205 c
255.4937 177.0518 254.6436 178.3467 253.6738 179.3359 C
253.6768 179.3389 L
f
/BBAccumRotation (0.785398) XT
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
