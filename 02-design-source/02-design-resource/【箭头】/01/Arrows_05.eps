%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(TM) 5.0%%AI8_CreatorVersion: 10.0%%For: (terry bruken) (brukon)%%Title: (E0031_Arrows05.eps)%%CreationDate: 12/2/02 9:21 PM%%BoundingBox: 36 -2279 3627 -36%%HiResBoundingBox: 36 -2278.4458 3627 -36%%DocumentProcessColors: Cyan Black%%DocumentFonts: Verdana%%DocumentNeededFonts: Verdana%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_typography_AI5 1.0 0%%+ procset Adobe_blend_AI5 1.0 0%%+ procset Adobe_Illustrator_AI5 1.0 0%AI5_FileFormat 1.1%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI3_TemplateBox: 1836.5 -1152.5 1836.5 -1152.5%AI3_TileBox: 1242.0005 -1547 1818.0005 -797%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 3672 2304%AI5_RulerUnits: 0%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 4%AI5_OpenToView: -35.9895 0.1335 -6 1266 932 18 0 0 7 44 0 0%AI5_OpenViewLayers: 7333%%PageOrigin:1242.0005 -1547%%AI3_PaperRect:-18 787 594 -5%%AI3_Margin:18 -33 -18 5%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginResource: procset Adobe_typography_AI5 1.0 1%%Title: (Typography Operators)%%Version: 1.0 1%%CreationDate:(03/26/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_typography_AI5 54 dict dup beginput/initialize{ begin begin	Adobe_typography_AI5 begin	Adobe_typography_AI5	{		dup xcheck		{			bind		} if		pop pop	} forall end end end	Adobe_typography_AI5 begin} def/terminate{	currentdict Adobe_typography_AI5 eq	{	 end	} if} def/modifyEncoding{	/_tempEncode exch ddef	/_pntr 0 ddef	{		counttomark -1 roll		dup type dup /marktype eq		{			pop pop exit		}		{			/nametype eq			{				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll				put			}			{				/_pntr exch ddef			} ifelse		} ifelse	} loop	_tempEncode} def/TE{	StandardEncoding 256 array copy modifyEncoding	/_nativeEncoding exch def} def%/TZ{	dup type /arraytype eq	{		/_wv exch def	}	{		/_wv 0 def	} ifelse	/_useNativeEncoding exch def	pop pop	findfont _wv type /arraytype eq	{		_wv makeblendedfont	} if	dup length 2 add dict begin	mark exch	{		1 index /FID ne		{			def		} if		cleartomark mark	} forall	pop	/FontName exch def	counttomark 0 eq	{		1 _useNativeEncoding eq		{			/Encoding _nativeEncoding def		} if		cleartomark	}	{		/Encoding load 256 array copy		modifyEncoding /Encoding exch def	} ifelse	FontName currentdict end	definefont pop} def/tr{	_ax _ay 3 2 roll} def/trj{	_cx _cy _sp _ax _ay 6 5 roll} def/a0{	/Tx	{		dup		currentpoint 3 2 roll		tr _psf		newpath moveto		tr _ctm _pss	} ddef	/Tj	{		dup		currentpoint 3 2 roll		trj _pjsf		newpath moveto		trj _ctm _pjss	} ddef} def/a1{	/Tx	{		dup currentpoint 4 2 roll gsave		dup currentpoint 3 2 roll		tr _psf		newpath moveto		tr _ctm _pss		grestore 3 1 roll moveto tr sp	} ddef	/Tj	{		dup currentpoint 4 2 roll gsave		dup currentpoint 3 2 roll		trj _pjsf		newpath moveto		trj _ctm _pjss		grestore 3 1 roll moveto tr jsp	} ddef} def/e0{	/Tx	{		tr _psf	} ddef	/Tj	{		trj _pjsf	} ddef} def/e1{	/Tx	{		dup currentpoint 4 2 roll gsave		tr _psf		grestore 3 1 roll moveto tr sp	} ddef	/Tj	{		dup currentpoint 4 2 roll gsave		trj _pjsf		grestore 3 1 roll moveto tr jsp	} ddef} def/i0{	/Tx	{		tr sp	} ddef	/Tj	{		trj jsp	} ddef} def/i1{	W N} def/o0{	/Tx	{		tr sw rmoveto	} ddef	/Tj	{		trj swj rmoveto	} ddef} def/r0{	/Tx	{		tr _ctm _pss	} ddef	/Tj	{		trj _ctm _pjss	} ddef} def/r1{	/Tx	{		dup currentpoint 4 2 roll currentpoint gsave newpath moveto		tr _ctm _pss		grestore 3 1 roll moveto tr sp	} ddef	/Tj	{		dup currentpoint 4 2 roll currentpoint gsave newpath moveto		trj _ctm _pjss		grestore 3 1 roll moveto tr jsp	} ddef} def/To{	pop _ctm currentmatrix pop} def/TO{	iTe _ctm setmatrix newpath} def/Tp{	pop _tm astore pop _ctm setmatrix	_tDict begin	/W	{	} def	/h	{	} def} def/TP{ end	iTm 0 0 moveto} def/Tr{	_render 3 le	{		currentpoint newpath moveto	} if	dup 8 eq	{		pop 0	}	{		dup 9 eq		{			pop 1		} if	} ifelse	dup /_render exch ddef	_renderStart exch get load exec} def/iTm{	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale} def/Tm{	_tm astore pop iTm 0 0 moveto} def/Td{	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto} def/iTe{	_render -1 eq	{	}	{		_renderEnd _render get dup null ne		{			load exec		}		{			pop		} ifelse	} ifelse	/_render -1 ddef} def/Ta{	pop} def/Tf{	dup 1000 div /_fScl exch ddef%	selectfont} def/Tl{	pop	0 exch _leading astore pop} def/Tt{	pop} def/TW{	3 npop} def/Tw{	/_cx exch ddef} def/TC{	3 npop} def/Tc{	/_ax exch ddef} def/Ts{	/_rise exch ddef	currentpoint	iTm	moveto} def/Ti{	3 npop} def/Tz{	100 div /_hs exch ddef	iTm} def/TA{	pop} def/Tq{	pop} def/Th{	pop pop pop pop pop} def/TX{	pop} def/Tk{	exch pop _fScl mul neg 0 rmoveto} def/TK{	2 npop} def/T*{	_leading aload pop neg Td} def/T*-{	_leading aload pop Td} def/T-{	_ax neg 0 rmoveto	_hyphen Tx} def/T+{} def/TR{	_ctm currentmatrix pop	_tm astore pop	iTm 0 0 moveto} def/TS{	currentfont 3 1 roll	/_Symbol_ _fScl 1000 mul selectfont		0 eq	{		Tx	}	{		Tj	} ifelse	setfont} def/Xb{	pop pop} def/Tb /Xb load def/Xe{	pop pop pop pop} def/Te /Xe load def/XB{} def/TB /XB load defcurrentdict readonly popendsetpacking%%EndResource%%BeginResource: procset Adobe_blend_AI5 1.4 0%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)%%Version: 1.4 0%%CreationDate: (11/19/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_blend_AI5 70 dict dup beginput/bd{	bind def} bind def/xs{	exch store} bd/nullProc{	{	}} def/initialize{	pop pop	Adobe_blend_AI5 begin		Adobe_blend_AI5_vars begin			/_contoneDevice where			{				pop			}			{				/_contoneDevice false def				} ifelse								/_dpiThreshold where			{				pop			}			{					/_dpiThreshold 600 def			} ifelse						/_screenFreqThreshold where			{				pop			}			{					/_screenFreqThreshold 150 def			} ifelse						/tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def	/invertXfer	{		[		{			1 exch sub				} /exec load systemdict/currenttransfer get exec /exec load				] cvx systemdict/settransfer get exec			} bd			/spotDict 3 dict dup begin				/nSpots 2 def				/spot1 7 dict def				/spot2 7 dict def		 end			def			composite?			{				/_setgray_ /setgray load def				/_fill_ /fill load def				/_image_ /image load def			}			{				/_setgray_ systemdict/setgray get def				/_fill_ systemdict/fill get def				/_image_ systemdict/image get def			} ifelse		} bd		/terminate		{			currentdict Adobe_blend_AI5_vars eq			{		 end			currentdict Adobe_blend_AI5 eq			{		 end		} if	} if} bd/_compositeSpotDevice where{ begin		_compositeSpotDevice 0 ne {userdict /composite? true put} if end}{	/_compositeSpotDevice 0 def	} ifelse	/nullString () def/d255 256 array def0 1 255{	d255 exch dup 255 div put} bind for/d255- 256 array def0 1 255{	d255- exch 1 d255 2 index get sub put} bind for/dUserSpace matrix defaultmatrix defcurrentdict /Adobe_blend_AI5_vars 89 dict dup beginput{	/f /F /s /S /b /B}{	null def} bind forall/byte 1 string def/sSave null def/setSSave{	save /sSave exch store} bind def/Bm null def/doBlend null def/startC? false def/endC? false def/fCMYK? null def/startTint 0 def/endTint 0 def/bSMatrix matrix def/bUMatrix matrix def/dMatrix matrix def/inLine? true def/pTState? false def/bHi? false def/yHi 0 def/xHi 0 def/noImg /lv1Fix where{	pop lv1Fix}{	false} ifelsedef/ccAry1 5 array def/ccTint 0 def/spotColor? false def/colorimage? true def[/tint1Data/tint2Data/spotDict/bAxis/ubAxis/pChange/optimize?/nSamples/sInc/blendProc/_bn/xBCInc/yBCInc/bInc/bRender/cBName/cBType/nColors/color?/blend?/colorType/cData/cDataLen/bDataLen/rampPoint/midPoint/endPoint/blendLength/blackData/yeData/mgData/cyData/cnt1/ndx/_fill/tmpcounttomark{	null def} bindrepeatpopcurrentdictendcurrentdictendexchbeginbegin/unitSq{	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath} bd/gMark{	counttomark 2 add -1 roll} bd/setCustomColor{	dup /ccTint exch store	1 exch sub 6 1 roll	ccAry1 astore	exch setcustomcolor} bd/currentCustomColor{	ccAry1 aload pop ccTint} bd/nsetcustomcolor where {	pop}{	/nsetcustomcolor	{		pop setcmykcolor		} bd} ifelse/nsetcustomcolorend where {	pop}{	/nsetcustomcolorend	{	} bd} ifelse/setBSpace{	newpath bUMatrix astore concat unitSq} bd/setCStop{	dup 0 eq	{		pop				spotColor?			{			dup 1 exch sub /ccTint exch def			ccAry1 4 /Black put			} if		setgray	}	{		1 eq		{			setcmykcolor		}		{			composite? not colorType 2 lt and			{				forceCMYK			}			{				setCustomColor			} ifelse		} ifelse	} ifelse} bd/makeByte{	/tmp 0 store	255 mul cvi	8 string 8	{		dup tmp 3 index put /tmp tmp 1 add store	} repeat	exch pop} bd/setImgSpace{	cDataLen 1 8	2 index 0 0 1 0 0 dMatrix astore} bd/bwImage{	setImgSpace cData /_image_ load	{		exec	} stopped	{		$error /errorname get /undefinedresult ne		{			stop		}		{			pop pop pop pop pop		} ifelse	} if} bdlevel2?{	/bFill	{		_fill	} def	/bCImg	{		/cDataLen bDataLen store		setImgSpace		setSSave		expandSpot		cyData mgData yeData cData		expandCMYK		true 4 spotDict		{			ncolorimage		} stopped		{			$error /errorname get /undefinedresult ne			{				stop			}			{				10				{					pop				} repeat			} ifelse		} if		sSave restore	} bd} if/expandOne{			dup type /stringtype ne			{				cDataLen string				exch				dup 0 ne				{					255 mul cvi					0 1 cDataLen 1 sub					{						3 copy						exch put pop					} for				} if				pop			} if} bd/expandSpot{	spotColor?	{		spotDict begin			spot1 begin				tintImage type /nulltype ne				{					tintImage expandOne /tintImage exch def				} if		  end			spot2 begin				tintImage type /nulltype ne				{					tintImage expandOne /tintImage exch def				} if		  end	 end	} if} bd/expandCMYK{	4	{		expandOne 4 1 roll	} repeat} bd/colorimage where dup{	exch pop		/ncolorimage where	{		pop	}	{		/ncolorimage {pop colorimage} bd	} ifelse} ifnot{	/ncolorimage where 	{		pop	}	{		/colorimage? false store		/ncolorimage		{			pop pop pop			setSSave		/blackData xs		/yeData xs		/mgData xs		/cyData xs		/cnt1 0 store		[		byte dup 0		cyData dup type /stringtype eq		{			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx		}		{			.3 mul		} ifelse		mgData dup type /stringtype eq		{			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx		}		{			.59 mul		} ifelse		yeData dup type /stringtype eq		{			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx		}		{			.11 mul		} ifelse		blackData dup type /stringtype eq		{			/cnt1 cvx /get cvx d255 /exch cvx /get cvx		} if		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx		/dup cvx 0 /lt cvx		{			pop 0		} /if cvx		/dup cvx 1 /gt cvx		{			pop 1		} /if cvx		255 /mul cvx /cvi cvx		256 /mod cvx		/dup cvx 0 /lt cvx		{			pop 0		} /if cvx		/put cvx		/cnt1 dup cvx 1 /add cvx /store cvx		] cvx		bind			_image_ 		sSave restore	} bd	} ifelse} iflevel2? not{	/bCImg	{		/cDataLen bDataLen store		setImgSpace		setSSave		expandSpot		cyData mgData yeData cData		colorimage? 		{			expandCMYK		} if		true 4 spotDict		{			ncolorimage		} stopped		{			$error /errorname get /undefinedresult ne			{				stop			}			{				10				{					pop				} repeat			} ifelse		} if		sSave restore	} bd	/bwFill	{		setSSave		/cDataLen 8 store		/cData currentgray makeByte store		bwImage		sSave restore	} bd	/c1ImgFill	{		setSSave		/cDataLen 8 store		setImgSpace		spotColor?		{			spotDict begin				spot1 begin					currentCustomColor makeByte /tintImage exch def					/name exch def					/spot_K exch def					/spot_Y exch def					/spot_M exch def					/spot_C exch def			 end				spot2 initSpotData		 end		} if		currentcmykcolor		4		{			makeByte 4 1 roll		} repeat		true 4 spotDict		{			ncolorimage		} stopped		{			$error /errorname get /undefinedresult ne			{				stop			}			{				10				{					pop				} repeat			} ifelse		} if		sSave restore	} bd	/bFill	noImg	{		{			_fill		}	}	{		{			color?			{				c1ImgFill			}			{				bwFill			} ifelse		}	} ifelse	bd} ifcomposite?{	/bCFun	{		color?		{			cyData dup type /stringtype eq			{				/ndx cvx /get cvx d255 /exch cvx /get cvx			} if			mgData dup type /stringtype eq			{				/ndx cvx /get cvx d255 /exch cvx /get cvx			} if			yeData dup type /stringtype eq			{				/ndx cvx /get cvx d255 /exch cvx /get cvx			} if			cData dup type /stringtype eq			{				/ndx cvx /get cvx d255 /exch cvx /get cvx			} if			spotColor?			{				spotDict begin					/spotDict cvx /begin cvx					spot1 begin						tintImage dup type /stringtype eq						{							/ndx cvx /get cvx d255- /exch cvx /get cvx						}						{							dup type /nulltype ne 							{								name type /nametype ne {1 exch sub} if							} if						} ifelse				 end					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx					spot2 begin						tintImage dup type /stringtype eq						{							/ndx cvx /get cvx d255- /exch cvx /get cvx						}						{							dup type /nulltype ne 							{								name type /nametype ne {1 exch sub} if							} if						} ifelse				 end					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx					/end cvx			 end				/spotDict cvx				/nsetcustomcolor cvx			}			{				/setcmykcolor cvx			} ifelse		}		{			cData /ndx cvx /get cvx			d255 /exch cvx /get cvx			/setgray cvx		} ifelse	} bd	/Bc	{		newpath		gsave		setBSpace		nColors 1 eq		{			pop pop			setCStop		} if		bFill		grestore	} bd	/linealBm	{		/nColors dup load 1 sub store		newpath		gsave		setBSpace		blend?		{			linImg		}		{			bFill		} ifelse		grestore		nColors 1 gt		{			getRData		} if	} bd	/rdBm	{		/nColors dup load 1 sub store		_fill		gsave		bUMatrix astore concat		bHi?		{			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store			rampPoint 1 lt			{				1 rampPoint sub dup xHi mul exch yHi mul translate			} if		} if		nColors		{			0 0 rampPoint 0 360 arc			_fill			blend? bHi? or			{				rdBlend			} if			nColors 1 gt			{				getRData			} if			/nColors dup load 1 sub store		} repeat		/nColors 1 store		grestore	} bd	/cGetRData	{		setCStop		/blend?		cData type /stringtype eq		dup not color? and		{			pop			cyData type /stringtype eq			mgData type /stringtype eq			yeData type /stringtype eq			or or		} if		store	} def	/cGetRData} if/eCStop{	mark	1 index 3 mul 3 add dup 8 gt	{		pop 8	} if	1 roll	cleartomark} bdcomposite? not{	/knockOut	level2?	{		{			0 0 0 0 setcmykcolor _fill		}	}	{		/bFill noImg		{			{				_fill			}		}		{			{				_of true eq				{					currentgray 1 ne					{						bwFill					} if				}				{					bwFill				} ifelse			}		} ifelse		def		/whiteByte 1 makeByte def		noImg		{			{				0 0 0 0 setcmykcolor _fill			}		}		{			{				cBType 0 eq				{					setSSave					/cData whiteByte store					/cDataLen 8 store					bwImage					sSave restore				}				{					_fill				} ifelse			}		} ifelse	} ifelse	bd	/bCFun	{		cData dup type /stringtype ne		{			color?			{				1 exch sub			} if		}		{			/ndx cvx /get cvx			color? customColor? not and			{				d255-			}			{				d255			} ifelse			/exch cvx /get cvx		} ifelse		/_setgray_ cvx	} bd	/eCCBlend	{		dup 3 eq		{			pop			mark 7 1 roll			6 copy ccThrough? dup /blend? xs			{				/startC? true store				setCustomColor				customColor?				{					/cData tint1Data store					setCDataLen				} if				/endC?				3 index 3 eq				{					4 index 1 ne				}				{					false				} ifelse				store			} if			cleartomark			stop		} if		1 eq		{			pop pop pop		} if		pop		/startC? false store		6		{			8 index		} repeat		ccThrough? dup /blend? xs		{			/endC? true store			blend? not			{				stop			} if			customColor?			{				/cData tint1Data store				setCDataLen			} if		} if	} bd	/handleOP	{		_of not		{			knockOut		} if	} bd	/handleROP	{		_of not		{			0 0 0 0 setcmykcolor _fill		}		{			newpath			} ifelse	} bd	/rdBm	{		/nColors dup load 1 sub store		blend? 		{			_fill		}		{			handleROP		} ifelse		gsave		bUMatrix astore concat		bHi?		{			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store			rampPoint 1 lt			{				1 rampPoint sub dup xHi mul exch yHi mul translate			} if		} if		nColors		{			0 0 rampPoint 0 360 arc			blend?			{				cData type /stringtype ne bHi? not and				{					cData color?					{						1 exch sub					} if					_setgray_ 					_fill_ 				}				{					cData type /stringtype ne					{						/cDataLen 1 store						/bDataLen 1 store					} if					rdBlend				} ifelse			}			{								handleROP								pTState?				{					/bAxis rampPoint endPoint sub store					xHi bAxis mul yHi bAxis mul translate				} if			} ifelse							nColors 1 gt			{				getRData			} if			/nColors dup load 1 sub store		} repeat		/nColors 1 store		grestore	} bd	/ccThrough?	{		gsave		pop 0 setCustomColor		currentcmykcolor		grestore		anyColor?	} bd	/forceCMYK	{		exch pop		1 exch sub 5 1 roll		4		{			4 index mul 4 1 roll		} repeat		0		cCMYKData dup /cData ne		{			dup /yeData eq			{				pop 1 add			}			{				/mgData eq				{					2				}				{					3				} ifelse				add			} ifelse			0		} if		pop		index		0 eq		{			pop pop pop pop 0 0 0 0		} if		setcmykcolor		pop		/fCMYK? true store	} bd	/endCapSepBc	{		pop pop		dup 0 eq		{			pop			setgray		}		{			1 eq			{				setcmykcolor			}			{				colorType 1 eq				{					forceCMYK				}				{					fCMYK?					{						forceCMYK					}					{						setCustomColor					} ifelse				} ifelse			} ifelse		} ifelse		currentcmykcolor anyColor? 		blend? and		{			bFill		}		{			handleOP		} ifelse			} bd} if/cCMYKData 0 defcomposite? dup not{	pop customColor?} ifnot{	/cCMYKData	/cyData /mgData /yeData /cData	black? not	{		yellow?		{			exch		}		{			magenta?			{				3			}			{				4			} ifelse			-1 roll		} ifelse	} if	4 1 roll pop pop pop	store	/Bc	{		gsave		setBSpace		nColors 1 gt		{						blend? currentcmykcolor anyColor? and			{				bFill			}			{				handleOP			} ifelse		}		{			endCapSepBc		} ifelse		grestore		newpath	} bd	/linealBm	{		/nColors dup load 1 sub store		newpath		gsave		setBSpace		blend?		{			cCMYKData load dup type /stringtype eq			{				dup length /cDataLen xs				/cData xs				gsave				colorType 0 ne noImg not and				{					invertXfer				} if				linImg				grestore			}			{				pop bFill			} ifelse		}		{			handleOP		} ifelse		grestore		nColors 1 gt		{			getRData		} if	} bd	/cmykGetRData	{		/fCMYK? false store		blend?		{			{				cmykDataProcs colorType get exec			} stopped			pop			blend?			{				/cData cCMYKData load store				setCDataLen			} if		} if	} def	/cmykDataProcs	[	{		pop		black? dup /blend? xs		{			setgray			0		} if		pop	}	{		cCMYKData load dup type /stringtype ne		{			0 0 0			cyan? not			{				4 magenta?				{					1				}				{					yellow?					{						2					}					{						3					} ifelse				} ifelse				roll			} if			4 copy add add add 0 eq			{				/blend? false store			} if						setcmykcolor			/startC? true store			/endC? true store			eCStop			stop		} if		pop		dup 0 eq		{			pop			setgray		}		{			1 eq			{				setcmykcolor			}			{				forceCMYK			} ifelse		} ifelse	} bind	/eCCBlend load	{		cBType 1 eq		{			tint1Data tint2Data			/tint1Data xs			/tint2Data xs		} if		0 eq		{			black?			{				setgray			}			{				0 0 0 4 -1 roll 1 exch sub setcmykcolor			} ifelse			black?			{				/blend? true store			} if			6			{				8 index			} repeat			ccThrough?			{				/blend? true store			}			{				black?				{					/cData tint1Data store					setCDataLen				}				{					/blend? false store				} ifelse			} ifelse		}		{			mark 7 1 roll			6 copy ccThrough?			{				forceCMYK				pop				stop			} if			9 index 0 eq			{				black? dup /blend? xs				{					pop 1 setgray					/cData tint2Data store					setCDataLen					0				} if				pop			}			{				/blend?				6				{					16 index				} repeat				ccThrough?				store				blend?				{					forceCMYK				} if			} ifelse			cleartomark		} ifelse	} bind	] def	/cmykGetRData} ifcomposite? dup not{	pop isCMYKSep?} ifnot{	/endCapSepBc	{		/white? false store		pop pop		dup 0 eq		{			pop			/white? 1 index 1 eq store			setgray		}		{			1 eq			{				setcmykcolor			}			{				setCustomColor			} ifelse		} ifelse%		currentcmykcolor anyColor?		endC? or		blend? and		{			bFill		}		{			handleOP		} ifelse	} bd	/Bc	{		gsave		setBSpace		nColors 1 gt		{			blend? startC? and			{				bFill			}			{				handleOP			} ifelse		}		{			endCapSepBc		} ifelse		grestore		newpath	} bd	/linealBm	{		/nColors dup load 1 sub store		newpath		gsave		setBSpace		blend?		{			cData type /stringtype eq			{				linImg			}			{				bFill			} ifelse		}		{			handleOP		} ifelse		grestore		nColors 1 gt		{			getRData		} if	} bd	/discardCMY	{		counttomark 4 add -3 roll pop pop pop	} bd	/testTopCC	{		6 copy ccThrough?	} bd	/getCRamp	{		{			ccDataProcs colorType 2 sub get exec		} stopped pop		blend? cDataLen 0 eq and		{			/cDataLen bDataLen store		} if	} bd	/ccGetRData	{		/fCMYK? false store		/startC? false store		/endC? false store		colorType 2 lt		{			/blend? false def		} if		blend?		{			getCRamp		}		{			setCStop		} ifelse		blend?		{			/blend? cData 1 ne store			blend?			{				cData dup type /stringtype ne				{					1 exch sub /cData xs 0				} if				pop			} if		} if	} def	/ccDataProcs	[	/eCCBlend load	{		cBType 1 eq		{			tint1Data tint2Data			/tint1Data xs			/tint2Data xs		} if		0 eq		{			/blend? false store			pop		}		{			mark 7 1 roll			testTopCC			{				/blend? 1 index 1 ne store				/startC? blend? store				/endC? false store				blend? not				{					cleartomark stop				} if				/cData tint1Data store				setCDataLen				setCustomColor				pop				stop			} if			cleartomark		} ifelse		2 index 0 eq		{			/blend? false store		}		{			mark 6			{				9 index			} repeat			testTopCC dup /blend? xs			{				/blend? 1 index 1 ne store				/endC? blend? store				/startC? false store				blend? not				{					cleartomark stop				} if				/cData tint2Data store				setCDataLen			} if			cleartomark		} ifelse	} bind	] def	/ccGetRData} ifload Adobe_blend_AI5_vars /getData 3 -1 roll put/setCDataLen{	/cDataLen 0 cData dup type /stringtype eq	{		length exch	} if	pop store} bd/initSpotData{ begin		/name null def		/tintImage null def		/tintValue null def		/spot_C  null def		/spot_M  null def		/spot_Y  null def		/spot_K  null def end} bd/getRData{	/colorType gMark store	_compositeSpotDevice 0 ne	{		spotDict begin			spot1 initSpotData			spot2 initSpotData	 end		/spotColor? colorType 2 eq colorType 3 eq or def	} 	{		/spotColor? false store	} ifelse	/blend? true store	0 0 0 0 setcmykcolor	100 div /rampPoint xs% (between 13 and 87%) 	100 div /midPoint xs	dup 0 eq	{		2	}	{		dup 1 eq		{			5		}		{			_compositeSpotDevice 0 ne			{				spotDict begin					spot1 begin						/name 3 index def						/spot_K 4 index def						/spot_Y 5 index def						/spot_M 6 index def						/spot_C 7 index def				 end			 end			} if			7		} ifelse	} ifelse	/tmp exch def	tmp index 100 div /endPoint xs	_compositeSpotDevice 0 ne	{		tmp 2 add index 3 eq		{			/tmp tmp 4 add def			tmp index dup 			spotDict begin				spot1/name get ne				{					spot2 begin						/name exch def						/spot_K tmp 2 add index def						/spot_Y tmp 3 add index def						/spot_M tmp 4 add index def						/spot_C tmp 5 add index def				 end				}				{					pop				} ifelse		 end		} if	} if	/color? colorType 0 gt store		colorType 3 eq	{		/tint2Data gMark store	} if		colorType 2 ge	{		/tint1Data gMark store	} if	_compositeSpotDevice 0 ne	{		spotDict begin					colorType 2 ge			{				colorType 3 eq				{					spot2 begin						/tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def						name null eq {/name /Black def} if				 end				} if				spot1 begin					/tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def					colorType 2 eq 					{						name null eq 						{							/name spot2/name get def							spot2/name null put						} if					}					{						name null eq {/name /Black def} if					} ifelse			 end			} if	 end	} if		/cData gMark store	setCDataLen	colorType 0 gt	{		counttomark 4 add -3 roll		/yeData xs		/mgData xs		/cyData xs	} if	blend?	{		/bDataLen		cDataLen dup 0 eq color? and		{			[			cyData mgData yeData			]			{				dup type /stringtype eq				{					length exch pop exit				} if				pop			} forall		} if		store		bDataLen 0 eq		{			/bDataLen 1 store		} if		getData		blend?		{			composite? cDataLen 0 eq and			{				/cDataLen bDataLen store			} if		} if	}	{		setCStop	} ifelse} bd/Bg{	0 0 0 0 setcmykcolor	6	{		pop	} repeat	/blendLength xs	pop pop pop	/cBName xs	/bRender xs	bRender 2 ne	{		composite? not		{			_of setoverprint		} if		_eo {eoclip} {clip} ifelse		_bn cBName 2 copy known		{			get			mark exch aload pop			/cBType xs			/nColors xs			mark exch aload pop			0 0		} if		pop pop		getRData		cBType 0 eq		{			/linealBm		}		{			bHi?			{				/pTState? nColors 2 gt store			} if			/doBlend /rdBlend load store			/rdBm		} ifelse	}	{		inLine? not		{			mark mark		} if		/Bc dup		{			cleartomark mark		} bd		/nullProc	} ifelse	load /Bm xs} bd/linImgnoImg{	{		newpath doRctBlend	}}{	{		/doBlend		color? composite? and		{			/bCImg		}		{			/bwImage		} ifelse		load		store			0 0 moveto		tRectOK? composite? and		{			{				mark				0 1 dtransform atan cvi 90 mod 0 eq				1 0 dtransform atan cvi 90 mod 0 eq			} stopped			{				cleartomark			}			{				and exch pop				{					newpath					doRctBlend				}				{					doBlend				} ifelse			} ifelse		}		{			doBlend		} ifelse	} } ifelsebd/doRctBlend{	gsave	/sInc 1 store	/nSamples bDataLen store	/bInc 1 bDataLen div store	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store	/pChange ubAxis 0 eq	{		0	}	{		bDataLen ubAxis div	} ifelse	store	pChange .5 gt noImg not and dup /optimize? xs	{		/nSamples ubAxis 2 div round cvi dup 1 le		{			pop 2		} if		store		/bInc 1 nSamples div store		/sInc bDataLen 1 sub nSamples 1 sub div store	} if	0	nSamples	[	/dup cvx	optimize?	{		/round cvx /cvi cvx	} if	/ndx /exch cvx /store cvx	bCFun	/rectfill where dup	{		exch pop _compositeSpotDevice 1 ne and	} if	{		0 0 bInc 1 /rectfill cvx		}	{		0 0 /moveto cvx		bInc 0 /lineto cvx		bInc 1 /lineto cvx		0 1 /lineto cvx		/closepath cvx		/_fill_ cvx	} ifelse	bInc 0 /translate cvx	sInc /add cvx	] cvx	bind	repeat	pop	spotColor? {nsetcustomcolorend} if		grestore} bd/rdPrep{	/nSamples bDataLen dup 0 eq	{		pop 1	} if	store	/sInc -1 store	/bAxis rampPoint endPoint sub store	/bInc bAxis bDataLen div neg store	/optimize? false store	tRectOK?	{		/ubAxis		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt		2 copy lt		{			exch		} if		pop store		/pChange ubAxis 0 eq		{			0		}		{			bDataLen ubAxis div		} ifelse		store		pChange .5 gt noImg not and dup /optimize? xs		{			/nSamples ubAxis 2 div round cvi dup 1 le			{				pop 2			} if			store			/bInc bAxis nSamples div neg store			/sInc bDataLen 1 sub nSamples 1 sub div neg store		} if	} if	bHi?	{		/xBCInc xHi bAxis mul nSamples div store		/yBCInc yHi bAxis mul nSamples div store	} if} bd/rdBlend{	newpath	gsave	rdPrep	rampPoint	bDataLen 1 sub	nSamples	[	/dup cvx	optimize?	{		/round cvx /cvi cvx	} if	/ndx /exch cvx /store cvx	bCFun	0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx	/exch cvx bInc /add cvx /exch cvx	sInc /add cvx	bHi?	{		xBCInc yBCInc /translate cvx	} if	] cvx	bind	repeat	pop pop	spotColor? {nsetcustomcolorend} if	grestore	pTState?	{		xHi bAxis mul yHi bAxis mul translate	} if} bd/Bh{	pop pop	/pTState? false store	2 copy 0 ne exch 0 ne or dup /bHi? xs	{		/yHi xs		/xHi xs		0 0	} if	pop pop} bd/BD{	inLine? not	{		] nColors cBType		] _bn cBName 3 -1 roll put end} if} bd/Bn{1 add dictdup nullString null put/_bn xs} bd/Bd{Adobe_blend_AI5_vars begin	3 -1 roll dup nullString eq dup	{		setSSave	} if	/inLine? exch def	/cBName exch def	/nColors exch def	/cBType exch def} bd/Bb{	sSave null eq	{		Adobe_blend_AI5_vars begin		setSSave	} if	composite?	{		/_fill /fill load store	}	{		/__fill /fill load store			/_fill			{				_of true eq				{					currentgray 1 ne					{						__fill					} if				}				{					__fill				} ifelse			} def	} ifelse	/fill	{	} def	} bd	/BB	{	/cBType xs	cleartomark cleartomark	cBType dup	bRender	sSave dup type /savetype eq	{		restore 0	} if	pop	currentdict Adobe_blend_AI5_vars eq	{	 end	} if	2 ne exch 0 gt and	{		2 eq		{			s		}		{			S		} ifelse	}	{		pop newpath	} ifelse} bdcurrentdict readonly popendenddefaultpacking setpacking%%EndResource%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)%%Version: 1.1 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 81 dict dup beginput/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_rise 0 def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_wv 0 def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 91 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/sw{	dup length exch stringwidth	exch 5 -1 roll 3 index mul add	4 1 roll 3 1 roll mul add} def/swj{	dup 4 1 roll	dup length exch stringwidth	exch 5 -1 roll 3 index mul add	4 1 roll 3 1 roll mul add	6 2 roll /_cnt 0 ddef	{		1 index eq		{			/_cnt _cnt 1 add ddef		} if	} forall	pop	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss{	4 1 roll	{		2 npop		(0) exch 2 copy 0 exch put pop		gsave		false charpath currentpoint		4 index setmatrix		stroke		grestore		moveto		2 copy rmoveto	} exch cshow	3 npop} def/jss{	4 1 roll	{		2 npop		(0) exch 2 copy 0 exch put		gsave		_sp eq		{			exch 6 index 6 index 6 index 5 -1 roll widthshow			currentpoint		}		{			false charpath currentpoint			4 index setmatrix stroke		} ifelse		grestore		moveto		2 copy rmoveto	} exch cshow	6 npop} def/sp{	{		2 npop (0) exch		2 copy 0 exch put pop		false charpath		2 copy rmoveto	} exch cshow	2 npop} def/jsp{	{		2 npop		(0) exch 2 copy 0 exch put		_sp eq		{			exch 5 index 5 index 5 index 5 -1 roll widthshow		}		{			false charpath		} ifelse		2 copy rmoveto	} exch cshow	5 npop} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer readline not		{		stop		} if		endString eq		{			cleartomark stop		} if	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer readline not		{		stop		} if		dup beginString eq		{			pop /layerCnt dup load 1 add store		}		{			endString eq			{				layerCnt 1 eq				{					cleartomark stop				}				{					/layerCnt dup load 1 sub store				} ifelse			} if		} ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	4 npop	6 1 roll	pop	4 1 roll	pop pop pop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 3 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popendendsetpacking%%EndResource%%EndProlog%%BeginSetup%%IncludeFont: VerdanaAdobe_level2_AI5 /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get execAdobe_Illustrator_AI5 /initialize get exec[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI3_BeginEncoding: _Verdana Verdana[/_Verdana/Verdana 0 0 0 TZ%AI3_EndEncoding TrueType[161/degree 173/notequal 176/infinity/plusminus/lessequal/greaterequal181/mu/partialdiff/summation/product/pi/integral 189/Omega 195/radical 197/approxequal 198/Delta 214/divide/lozenge 240/apple/_Symbol_/Symbol 0 0 0 TZ%AI5_Begin_NonPrintingNp1 Bn%AI5_BeginGradient: (Unnamed gradient 1)(Unnamed gradient 1) 0 2 Bd[000<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>1 %_Br[0 0 50 100 %_Bs1 0 50 0 %_BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 kPc0 0 0 0.8 kPcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 0 1 0 0 0 79 128 255 Lb(background) Ln1 A0 A1 Ap0 O0 0 0 0.8 k0 J 0 j 1 w 4 M []0 d3627 -387 m36.0005 -387 L36.0005 -36 L3627 -36 L3627 -387 Lf0 0 0 0.1 k387.0005 -747 m36.0005 -747 L36.0005 -396 L387.0005 -396 L387.0005 -747 Lf747.0005 -747 m396.0005 -747 L396.0005 -396 L747.0005 -396 L747.0005 -747 Lf1107.0005 -747 m756.0005 -747 L756.0005 -396 L1107.0005 -396 L1107.0005 -747 Lf1467.0005 -747 m1116.0005 -747 L1116.0005 -396 L1467.0005 -396 L1467.0005 -747 Lf1827.0005 -747 m1476.0005 -747 L1476.0005 -396 L1827.0005 -396 L1827.0005 -747 Lf2187 -747 m1836.0005 -747 L1836.0005 -396 L2187 -396 L2187 -747 Lf2547 -747 m2196 -747 L2196 -396 L2547 -396 L2547 -747 Lf2907 -747 m2556 -747 L2556 -396 L2907 -396 L2907 -747 Lf3267 -747 m2916 -747 L2916 -396 L3267 -396 L3267 -747 Lf3627 -747 m3276 -747 L3276 -396 L3627 -396 L3627 -747 Lf387.0005 -1107 m36.0005 -1107 L36.0005 -756 L387.0005 -756 L387.0005 -1107 Lf747.0005 -1107 m396.0005 -1107 L396.0005 -756 L747.0005 -756 L747.0005 -1107 Lf1107.0005 -1107 m756.0005 -1107 L756.0005 -756 L1107.0005 -756 L1107.0005 -1107 Lf1467.0005 -1107 m1116.0005 -1107 L1116.0005 -756 L1467.0005 -756 L1467.0005 -1107 Lf1827.0005 -1107 m1476.0005 -1107 L1476.0005 -756 L1827.0005 -756 L1827.0005 -1107 Lf2187 -1107 m1836.0005 -1107 L1836.0005 -756 L2187 -756 L2187 -1107 Lf2547 -1107 m2196 -1107 L2196 -756 L2547 -756 L2547 -1107 Lf2907 -1107 m2556 -1107 L2556 -756 L2907 -756 L2907 -1107 Lf3267 -1107 m2916 -1107 L2916 -756 L3267 -756 L3267 -1107 Lf3627 -1107 m3276 -1107 L3276 -756 L3627 -756 L3627 -1107 Lf387.0005 -1467 m36.0005 -1467 L36.0005 -1116 L387.0005 -1116 L387.0005 -1467 Lf747.0005 -1467 m396.0005 -1467 L396.0005 -1116 L747.0005 -1116 L747.0005 -1467 Lf1107.0005 -1467 m756.0005 -1467 L756.0005 -1116 L1107.0005 -1116 L1107.0005 -1467 Lf1467.0005 -1467 m1116.0005 -1467 L1116.0005 -1116 L1467.0005 -1116 L1467.0005 -1467 Lf1827.0005 -1467 m1476.0005 -1467 L1476.0005 -1116 L1827.0005 -1116 L1827.0005 -1467 Lf2187 -1467 m1836.0005 -1467 L1836.0005 -1116 L2187 -1116 L2187 -1467 Lf2547 -1467 m2196 -1467 L2196 -1116 L2547 -1116 L2547 -1467 Lf2907 -1467 m2556 -1467 L2556 -1116 L2907 -1116 L2907 -1467 Lf3267 -1467 m2916 -1467 L2916 -1116 L3267 -1116 L3267 -1467 Lf3627 -1467 m3276 -1467 L3276 -1116 L3627 -1116 L3627 -1467 Lf387.0005 -1827 m36.0005 -1827 L36.0005 -1476 L387.0005 -1476 L387.0005 -1827 Lf747.0005 -1827 m396.0005 -1827 L396.0005 -1476 L747.0005 -1476 L747.0005 -1827 Lf1107.0005 -1827 m756.0005 -1827 L756.0005 -1476 L1107.0005 -1476 L1107.0005 -1827 Lf1467.0005 -1827 m1116.0005 -1827 L1116.0005 -1476 L1467.0005 -1476 L1467.0005 -1827 Lf1827.0005 -1827 m1476.0005 -1827 L1476.0005 -1476 L1827.0005 -1476 L1827.0005 -1827 Lf2187 -1827 m1836.0005 -1827 L1836.0005 -1476 L2187 -1476 L2187 -1827 Lf2547 -1827 m2196 -1827 L2196 -1476 L2547 -1476 L2547 -1827 Lf2907 -1827 m2556 -1827 L2556 -1476 L2907 -1476 L2907 -1827 Lf3267 -1827 m2916 -1827 L2916 -1476 L3267 -1476 L3267 -1827 Lf3627 -1827 m3276 -1827 L3276 -1476 L3627 -1476 L3627 -1827 Lf387.0005 -2187 m36.0005 -2187 L36.0005 -1836 L387.0005 -1836 L387.0005 -2187 Lf747.0005 -2187 m396.0005 -2187 L396.0005 -1836 L747.0005 -1836 L747.0005 -2187 Lf1107.0005 -2187 m756.0005 -2187 L756.0005 -1836 L1107.0005 -1836 L1107.0005 -2187 Lf1467.0005 -2187 m1116.0005 -2187 L1116.0005 -1836 L1467.0005 -1836 L1467.0005 -2187 Lf1827.0005 -2187 m1476.0005 -2187 L1476.0005 -1836 L1827.0005 -1836 L1827.0005 -2187 Lf2187 -2187 m1836.0005 -2187 L1836.0005 -1836 L2187 -1836 L2187 -2187 Lf2547 -2187 m2196 -2187 L2196 -1836 L2547 -1836 L2547 -2187 Lf2907 -2187 m2556 -2187 L2556 -1836 L2907 -1836 L2907 -2187 Lf3267 -2187 m2916 -2187 L2916 -1836 L3267 -1836 L3267 -2187 Lf3627 -2187 m3276 -2187 L3276 -1836 L3627 -1836 L3627 -2187 LfLB%AI5_EndLayer--%AI5_BeginLayer1 1 0 1 0 0 2 79 255 79 Lb(eps_numbers) Ln1 A0 A0 To1 0 0 1 36 -414 0 TpTP0 Tr0 O0 0 0 0.8 k0 J 0 j 1 w 4 M []0 d/_Verdana 12 Tf0 Ts100 Tz-50 Tt1 TA%_ 0 XL36 0 XbXB0 0 5 TC100 100 200 TW0 0 0 Ti0 Ta0 1 2 2 3 Th0 Tq0 0 Tl-0.6 Tc0 Tw(001) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 396 -414 0 TpTP0 Tr(002) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 756 -414 0 TpTP0 Tr(003) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1116 -414 0 TpTP0 Tr(004) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1476 -414 0 TpTP0 Tr(005) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1836 -414 0 TpTP0 Tr(006) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2196 -414 0 TpTP0 Tr(007) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2556 -414 0 TpTP0 Tr(008) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2916 -414 0 TpTP0 Tr(009) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 3276 -414 0 TpTP0 Tr(010) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 3276 -774 0 TpTP0 Tr(020) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 3276 -1134 0 TpTP0 Tr(030) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 3276 -1494 0 TpTP0 Tr(040) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 3276 -1854 0 TpTP0 Tr(050) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2916 -1854 0 TpTP0 Tr(049) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2556 -1854 0 TpTP0 Tr(048) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2196 -1854 0 TpTP0 Tr(047) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1836.0005 -1854 0 TpTP0 Tr(046) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1476.0005 -1854 0 TpTP0 Tr(045) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1116.0005 -1854 0 TpTP0 Tr(044) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 756.0005 -1854 0 TpTP0 Tr(043) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 396.0005 -1854 0 TpTP0 Tr(042) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 36.0005 -1854 0 TpTP0 Tr(041) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2916 -1494 0 TpTP0 Tr(039) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2556 -1494 0 TpTP0 Tr(038) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2196 -1494 0 TpTP0 Tr(037) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1836.0005 -1494 0 TpTP0 Tr(036) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1476.0005 -1494 0 TpTP0 Tr(035) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1116.0005 -1494 0 TpTP0 Tr(034) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 756.0005 -1494 0 TpTP0 Tr(033) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 396.0005 -1494 0 TpTP0 Tr(032) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 36.0005 -1494 0 TpTP0 Tr(031) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2916 -1134 0 TpTP0 Tr(029) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2556 -1134 0 TpTP0 Tr(028) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2196 -1134 0 TpTP0 Tr(027) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1836.0005 -1134 0 TpTP0 Tr(026) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1476.0005 -1134 0 TpTP0 Tr(025) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1116.0005 -1134 0 TpTP0 Tr(024) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 756.0005 -1134 0 TpTP0 Tr(023) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 396.0005 -1134 0 TpTP0 Tr(022) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 36.0005 -1134 0 TpTP0 Tr(021) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2916 -774 0 TpTP0 Tr(019) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2556 -774 0 TpTP0 Tr(018) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2196 -774 0 TpTP0 Tr(017) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1836.0005 -774 0 TpTP0 Tr(016) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1476.0005 -774 0 TpTP0 Tr(015) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1116.0005 -774 0 TpTP0 Tr(014) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 756.0005 -774 0 TpTP0 Tr(013) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 396.0005 -774 0 TpTP0 Tr(012) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 36.0005 -774 0 TpTP0 Tr(011) Tx 1 0 Tk(\r) TX TOLB%AI5_EndLayer--%AI5_BeginLayer1 1 0 1 0 0 1 255 79 79 Lb(ywft_info) Ln1 A0 Au0 Ap0 O0.8 0 0 0 k0 J 0 j 1 w 4 M []0 d405 -180 m432 -180 L432 -160.1182 415.8828 -144 396 -144 C396 -171 L400.9707 -171 405 -175.0293 405 -180 Cf0 0 0 0.2 k495 -175.501 m495 -144 L468 -144 L468 -175.5 L468 -175.5 L468 -195.3828 484.1172 -211.5 504 -211.5 C504 -184.501 L499.0293 -184.501 495 -180.4717 495 -175.501 Cf463.5 -144 m436.5 -144 L436.5 -175.501 L436.5 -180.4717 432.4707 -184.501 427.5 -184.501 C396 -184.501 L396 -211.5 L427.5 -211.5 L447.3828 -211.5 463.5 -195.3828 463.5 -175.5 C463.5 -175.5 L463.5 -144 Lf652.5 -144 m679.5 -144 L679.5 -175.501 L679.5 -180.4717 683.5293 -184.501 688.5 -184.501 C720 -184.501 L720 -211.5 L688.5 -211.5 L668.6172 -211.5 652.5 -195.3828 652.5 -175.5 C652.5 -175.5 L652.5 -144 Lf580.5 -211.5 m607.5 -211.5 L607.5 -180 L607.5 -175.0293 611.5293 -171 616.5 -171 C648 -171 L648 -144 L616.5 -144 L596.6172 -144 580.5 -160.1182 580.5 -180 C580.5 -180 L580.5 -211.5 Lf531 -175.501 m531 -144 L504 -144 L504 -175.5 L504 -175.5 L504 -195.3828 520.1172 -211.5 540 -211.5 C540 -184.501 L535.0293 -184.501 531 -180.4717 531 -175.501 Cf567 -175.501 m567 -144 L540 -144 L540 -175.5 L540 -175.5 L540 -195.3828 556.1172 -211.5 576 -211.5 C576 -184.501 L571.0293 -184.501 567 -180.4717 567 -175.501 Cf612 -211.5 m648 -211.5 L648 -184.5 L612 -184.5 L612 -211.5 Lf684 -144 m684 -171 L720 -171 L720 -144 L684 -144 LfU0 To1 0 0 1 396 -297 0 TpTP0 Tr/_Verdana 12 Tf0 Ts100 Tz-50 Tt1 TA%_ 0 XL36 0 XbXB0 0 5 TC100 100 200 TW0 0 0 Ti0 Ta0 1 2 2 3 Th0 Tq0 0 Tl-0.6 Tc0 Tw(Y) Tx 1 63 Tk(ouW) Tx 1 49 Tk(orkF) Tx 1 24 Tk(orThem \(100%=91pt.\)) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 396 -72 0 TpTP0 Tr0 0 0 0.6 k/_Verdana 11 Tf-0.55 Tc(YWF) Tx 1 -15 Tk(T) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1476 -297 0 TpTP0 Tr0 0 0 0.2 k/_Verdana 12 Tf-0.6 Tc(E00) Tx 1 0 Tk(31) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1476 -72 0 TpTP0 Tr0 0 0 0.6 k/_Verdana 11 Tf-0.55 Tc(YWF) Tx 1 -15 Tk(T) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1836.0005 -297 0 TpTP0 Tr0 0 0 0.2 k/_Verdana 12 Tf-0.6 Tc(Arrows) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 1836.0005 -72 0 TpTP0 Tr0 0 0 0.6 k/_Verdana 11 Tf-0.55 Tc(YWF) Tx 1 -15 Tk(T) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2196 -297 0 TpTP0 Tr0 0 0 0.2 k/_Verdana 12 Tf-0.6 Tc(0) Tx 1 0 Tk(5) Tx 1 0 Tk(\r) TX TO0 To1 0 0 1 2196 -72 0 TpTP0 Tr0 0 0 0.6 k/_Verdana 11 Tf-0.55 Tc(YWF) Tx 1 -15 Tk(T) Tx 1 0 Tk(\r) TX TOu0.8 0 0 0 k398.25 -2241 m405 -2241 L405 -2236.0293 400.9707 -2232 396 -2232 C396 -2238.75 L397.2422 -2238.75 398.25 -2239.7568 398.25 -2241 Cf0 0 0 0.8 k420.75 -2239.875 m420.75 -2232 L414 -2232 L414 -2239.875 L414 -2239.875 L414 -2244.8457 418.0293 -2248.875 423 -2248.875 C423 -2242.125 L421.7578 -2242.125 420.75 -2241.1182 420.75 -2239.875 Cf412.875 -2232 m406.125 -2232 L406.125 -2239.875 L406.125 -2241.1182 405.1172 -2242.125 403.875 -2242.125 C396 -2242.125 L396 -2248.875 L403.875 -2248.875 L408.8457 -2248.875 412.875 -2244.8457 412.875 -2239.875 C412.875 -2239.875 L412.875 -2232 Lf460.125 -2232 m466.875 -2232 L466.875 -2239.875 L466.875 -2241.1182 467.8828 -2242.125 469.125 -2242.125 C477 -2242.125 L477 -2248.875 L469.125 -2248.875 L464.1543 -2248.875 460.125 -2244.8457 460.125 -2239.875 C460.125 -2239.875 L460.125 -2232 Lf442.125 -2248.875 m448.875 -2248.875 L448.875 -2241 L448.875 -2239.7568 449.8828 -2238.75 451.125 -2238.75 C459 -2238.75 L459 -2232 L451.125 -2232 L446.1543 -2232 442.125 -2236.0293 442.125 -2241 C442.125 -2241 L442.125 -2248.875 Lf429.75 -2239.875 m429.75 -2232 L423 -2232 L423 -2239.875 L423 -2239.875 L423 -2244.8457 427.0293 -2248.875 432 -2248.875 C432 -2242.125 L430.7578 -2242.125 429.75 -2241.1182 429.75 -2239.875 Cf438.75 -2239.875 m438.75 -2232 L432 -2232 L432 -2239.875 L432 -2239.875 L432 -2244.8457 436.0293 -2248.875 441 -2248.875 C441 -2242.125 L439.7578 -2242.125 438.75 -2241.1182 438.75 -2239.875 Cf450 -2248.875 m459 -2248.875 L459 -2242.125 L450 -2242.125 L450 -2248.875 Lf468 -2232 m468 -2238.75 L477 -2238.75 L477 -2232 L468 -2232 LfU0 To1 0 0 1 396 -2277 0 TpTP0 Tr/_Verdana 7 Tf-0.35 Tc(Y) Tx 1 63 Tk(ouW) Tx 1 49 Tk(orkF) Tx 1 24 Tk(orThem \(25%=23pt.\)) Tx 1 0 Tk(\r) TX TOLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 3 79 79 255 Lb(eps_files) Ln0 A*u1 D0 O0.2 g0 J 0 j 1 w 4 M []0 d1648.8506 -574.2827 m1729.7095 -655.1414 L1756.6626 -655.1414 L1648.8506 -439.5183 L1541.0405 -655.1414 L1567.9934 -655.1414 L1648.8506 -574.2827 Lf1541.0405 -709.0471 m1567.9934 -709.0471 L1648.8506 -628.1885 L1729.7095 -709.0471 L1756.6626 -709.0471 L1648.8506 -601.2356 L1541.0405 -709.0471 Lf*U*u2010.4858 -437.373 m1910.915 -661.407 L1910.915 -711.1924 L1935.8081 -711.1924 L2010.4858 -636.5144 L2085.1636 -711.1924 L2110.0562 -711.1924 L2110.0562 -661.407 L2010.4858 -437.373 Lf0 D2085.1636 -686.2998 m2010.4858 -611.6216 L1935.8081 -686.2998 L1935.8081 -661.407 L2010.4858 -586.729 L2085.1636 -661.407 L2085.1636 -686.2998 Lf*U*uu1 D2366.4609 -596.4551 m2332.8955 -562.894 L2321.7085 -562.894 L2321.7085 -585.2681 L2366.4609 -685.9641 L2411.2134 -585.2681 L2411.2134 -562.894 L2400.0254 -562.894 L2366.4609 -596.4551 Lf0 D2400.0254 -585.2681 m2366.4609 -618.8335 L2332.8955 -585.2681 L2332.8955 -574.0811 L2366.4609 -607.6465 L2400.0254 -574.0811 L2400.0254 -585.2681 LfUu1 D2385.8398 -474.1904 m2366.4609 -485.3774 L2372.0557 -495.0669 L2417.9033 -507.3538 L2405.6211 -553.2046 L2411.2134 -562.894 L2430.5923 -551.7029 L2495.4199 -462.6013 L2385.8398 -474.1904 Lf0 D2424.9995 -542.0134 m2415.3071 -547.6091 L2427.5928 -501.7581 L2381.7451 -489.4712 L2391.4355 -483.8799 L2437.2822 -496.1655 L2424.9995 -542.0134 LfUu1 D2315.0176 -507.3538 m2360.8652 -495.0669 L2366.4609 -485.3774 L2347.0811 -474.1904 L2237.501 -462.6013 L2302.3286 -551.7029 L2321.7085 -562.894 L2327.3032 -553.2046 L2315.0176 -507.3538 Lf0 D2307.9243 -542.0134 m2295.6387 -496.1655 L2341.4863 -483.8799 L2351.1792 -489.4712 L2305.3281 -501.7581 L2317.6138 -547.6091 L2307.9243 -542.0134 LfU*U2115.4287 -967.6318 m2094.439 -946.6426 L2115.4287 -925.6533 L2094.439 -862.6887 L2031.4727 -841.7021 L2010.4834 -862.6887 L1989.4976 -841.7021 L1926.5293 -862.6887 L1905.5435 -925.6533 L1926.5293 -946.6426 L1905.5435 -967.6318 L1926.5293 -1030.5977 L1989.4976 -1051.5869 L2010.4834 -1030.5977 L2031.4727 -1051.5869 L2094.439 -1030.5977 L2115.4287 -967.6318 Lf*u1 D1303.6499 -460.688 m1298.5889 -468.2798 L1291.3472 -479.1418 L1279.0444 -460.688 L1272.5928 -467.1401 L1243.4702 -496.2627 L1243.4702 -687.8774 L1258.4316 -687.8774 L1258.4316 -610.324 1258.4316 -555.4875 V1262.937 -548.7297 1278.8477 -524.8628 1291.3472 -506.1135 C1303.8467 -524.8628 1319.7578 -548.7302 1324.2632 -555.4875 C1324.2632 -610.324 1324.2632 -687.8774 Y1339.2246 -687.8774 L1339.2246 -496.2627 L1303.6499 -460.688 Lf0 D1258.4316 -528.5154 m1258.4316 -502.4585 L1261.1665 -499.7256 1270.0562 -490.8369 1276.7188 -484.1707 C1277.9585 -486.0308 1279.9258 -488.9812 1282.3569 -492.6279 C1258.4316 -528.5154 Lf1300.3374 -492.6274 m1302.7686 -488.9812 1304.7354 -486.0303 1305.9751 -484.1707 C1312.6382 -490.8369 1321.5303 -499.7256 1324.2632 -502.4585 C1324.2632 -528.5156 L1300.3374 -492.6274 Lf*U*uu1 D2425.1543 -1045.3608 m2396.519 -988.0908 L2396.2886 -987.6338 2395.8535 -987.314 2395.3496 -987.2334 c2394.8457 -987.1489 2394.3311 -987.3174 2393.9702 -987.6772 C2368.5366 -1013.1118 2366.4609 -1015.1875 V2364.3853 -1013.1118 2338.9497 -987.6772 Y2338.5889 -987.3174 2338.0742 -987.1489 2337.5703 -987.2334 c2337.0664 -987.314 2336.6313 -987.6338 2336.4028 -988.0908 C2307.7676 -1045.3608 L2307.521 -1045.855 2307.5464 -1046.4395 2307.835 -1046.9082 c2308.1265 -1047.3774 2308.6377 -1047.6631 2309.1909 -1047.6631 C2423.731 -1047.6631 L2424.2837 -1047.6631 2424.7935 -1047.3774 2425.085 -1046.9082 c2425.3735 -1046.4395 2425.3989 -1045.855 2425.1543 -1045.3608 Cf0 D2311.7632 -1044.4819 m2313.8081 -1040.3931 2336.499 -995.0166 2338.2607 -991.4873 C2341.0508 -994.2769 2365.335 -1018.562 Y2365.957 -1019.1841 2366.9629 -1019.1841 2367.585 -1018.562 C2391.8691 -994.2769 2394.6606 -991.4873 V2396.4209 -995.0166 2419.1138 -1040.3931 2421.1567 -1044.4819 C2311.7632 -1044.4819 LfU1 D2395.0957 -960.1675 m2395.0957 -845.6265 L2337.8257 -845.6265 L2337.8257 -960.1675 L2366.4609 -988.8022 L2395.0957 -960.1675 Lf*U*u2764.1787 -1002.7695 m2764.1787 -834.3945 L2736.1162 -862.457 L2708.0537 -834.3945 L2708.0537 -1002.7695 L2736.1162 -1030.832 L2764.1787 -1002.7695 Lf2679.9912 -974.707 m2651.9287 -1002.7695 L2651.9287 -1030.832 L2623.8662 -1002.7695 L2623.8662 -1058.8945 L2736.1162 -1058.8945 L2679.9912 -1002.7695 L2679.9912 -974.707 Lf2820.3037 -1030.832 m2820.3037 -1002.7695 L2792.2412 -974.707 L2792.2412 -1002.7695 L2736.1162 -1058.8945 L2848.3662 -1058.8945 L2848.3662 -1002.7695 L2820.3037 -1030.832 Lf*U*u2747.1968 -552.1218 m2747.1968 -485.6392 L2725.0356 -485.6392 L2725.0356 -552.1218 L2736.1162 -563.2021 L2747.1968 -552.1218 Lfu2647.4727 -463.4783 m2647.4727 -685.0869 L2824.7598 -685.0869 L2824.7598 -463.4783 L2647.4727 -463.4783 Lf0 D2813.6792 -585.363 m2791.5186 -563.2021 L2791.5186 -574.2827 L2780.438 -585.363 L2769.3574 -574.2827 L2769.3574 -552.1218 L2758.2773 -541.0413 L2758.2773 -552.1218 L2736.1162 -585.363 L2713.9556 -552.1218 L2713.9556 -541.0413 L2702.875 -552.1218 L2702.875 -574.2827 L2691.7944 -585.363 L2680.7139 -574.2827 L2680.7139 -563.2021 L2658.5532 -585.363 L2658.5532 -474.5588 L2813.6792 -474.5588 L2813.6792 -585.363 LfU*U3173.5898 -928.8115 m3173.5898 -821.8135 L3102.2583 -857.4795 L3030.9263 -821.8135 L3030.9263 -928.8115 L3076.8564 -974.7407 L3076.8564 -1010.4067 L3030.9263 -964.4775 L3030.9263 -1017.9761 L3084.4248 -1071.4756 L3084.4248 -1017.9761 L3102.2583 -1035.8096 L3120.0908 -1017.9761 L3120.0908 -1071.4756 L3173.5898 -1017.9761 L3173.5898 -964.4775 L3127.6621 -1010.4067 L3127.6621 -974.7407 L3173.5898 -928.8115 Lf*u1 D2462.8076 -1242.4814 m2462.8076 -1210.3657 L2366.4609 -1306.7124 L2270.1138 -1210.3657 L2270.1138 -1242.4814 L2302.2295 -1274.5967 L2302.2295 -1306.7124 L2334.3452 -1338.8281 L2366.4609 -1403.0596 L2398.5767 -1338.8281 L2430.6924 -1306.7124 L2430.6924 -1274.5967 L2462.8076 -1242.4814 Lf2430.6924 -1306.7124 m2430.6924 -1338.8281 L2494.9233 -1274.5967 L2494.9233 -1242.4814 L2430.6924 -1306.7124 Lf2237.9985 -1274.5967 m2302.2295 -1338.8281 L2302.2295 -1306.7124 L2237.9985 -1242.4814 L2237.9985 -1274.5967 Lf*U0 D3524.6255 -530.5942 m3466.374 -588.8455 L3408.123 -530.5942 L3378.9976 -443.2175 L3378.9976 -501.4688 L3408.123 -588.8455 L3408.123 -617.9709 L3437.2485 -647.0967 L3437.2485 -676.2222 L3466.374 -705.3477 L3495.4995 -676.2222 L3495.4995 -647.0967 L3524.6255 -617.9709 L3524.6255 -588.8455 L3553.751 -501.4688 L3553.751 -443.2175 L3524.6255 -530.5942 Lf*u1 D0 0 0 0.8 k312.437 -548.7668 m310.5698 -548.7668 309.0552 -550.2808 309.0552 -552.1479 c309.0552 -554.0156 310.5698 -555.53 312.437 -555.53 c322.7769 -555.53 331.1895 -563.9424 331.1895 -574.2825 c331.1895 -584.6226 322.7769 -593.0354 312.437 -593.0354 c302.0972 -593.0354 293.6846 -584.6226 293.6846 -574.2825 c293.6846 -572.4153 292.1699 -570.9011 290.3027 -570.9011 c288.4355 -570.9011 286.9207 -572.4153 286.9207 -574.2825 c286.9207 -584.6226 278.5078 -593.0354 268.168 -593.0354 c257.8279 -593.0354 249.4155 -584.6226 249.4155 -574.2825 c249.4155 -560.2129 237.9685 -548.7668 223.8992 -548.7668 c214.4309 -548.7668 206.1682 -553.9624 201.7651 -561.6409 C197.3616 -553.9624 189.0989 -548.7668 179.6304 -548.7668 c172.21 -548.7668 165.5398 -551.9668 160.8779 -557.0435 C160.8779 -552.1479 L160.8779 -550.2808 159.3635 -548.7668 157.4961 -548.7668 c155.6289 -548.7668 154.1147 -550.2808 154.1147 -552.1479 C154.1147 -557.0435 L149.4524 -551.9668 142.782 -548.7668 135.3618 -548.7668 c127.9438 -548.7668 121.2759 -551.9683 116.6094 -557.0391 C116.6094 -552.1479 L116.6094 -550.2808 115.095 -548.7668 113.2273 -548.7668 c111.3601 -548.7668 109.8462 -550.2808 109.8462 -552.1479 C109.8462 -574.2825 L109.8462 -584.6226 101.4333 -593.0354 91.093 -593.0354 c80.7529 -593.0354 72.3406 -584.6226 72.3406 -574.2825 c72.3406 -563.9424 80.7529 -555.53 91.093 -555.53 c92.9604 -555.53 94.4749 -554.0156 94.4749 -552.1479 c94.4749 -550.2808 92.9604 -548.7668 91.093 -548.7668 c77.0237 -548.7668 65.5774 -560.2129 65.5774 -574.2825 c65.5774 -588.3518 77.0237 -599.7988 91.093 -599.7988 c98.5112 -599.7988 105.1794 -596.5969 109.8462 -591.5256 C109.8462 -596.4167 L109.8462 -598.2842 111.3601 -599.7988 113.2273 -599.7988 c115.095 -599.7988 116.6094 -598.2842 116.6094 -596.4167 C116.6094 -574.2825 L116.6094 -563.9424 125.0217 -555.53 135.3618 -555.53 c145.7019 -555.53 154.1147 -563.9424 154.1147 -574.2825 C154.1147 -596.4167 L154.1147 -598.2842 155.6289 -599.7988 157.4961 -599.7988 c159.3635 -599.7988 160.8779 -598.2842 160.8779 -596.4167 C160.8779 -574.2825 L160.8779 -563.9424 169.2905 -555.53 179.6304 -555.53 c189.9707 -555.53 198.3835 -563.9424 198.3835 -574.2825 c198.3835 -588.3518 209.8298 -599.7988 223.8992 -599.7988 c233.3674 -599.7988 241.6304 -594.6028 246.0339 -586.9238 C250.437 -594.6028 258.6997 -599.7988 268.168 -599.7988 c277.6362 -599.7988 285.8992 -594.6028 290.3027 -586.9238 C294.7061 -594.6028 302.9688 -599.7988 312.437 -599.7988 c326.5063 -599.7988 337.9526 -588.3518 337.9526 -574.2825 c337.9526 -560.2129 326.5063 -548.7668 312.437 -548.7668 cf0 D223.8992 -593.0354 m213.5593 -593.0354 205.1467 -584.6226 205.1467 -574.2825 c205.1467 -563.9424 213.5593 -555.53 223.8992 -555.53 c234.239 -555.53 242.6519 -563.9424 242.6519 -574.2825 c242.6519 -584.6226 234.239 -593.0354 223.8992 -593.0354 cf*U*u1 D0.2 g939.2776 -454.3481 m934.9106 -458.7163 L896.0339 -497.593 L896.0339 -650.9736 L939.2776 -694.217 L982.5222 -650.9736 L982.5222 -497.593 L939.2776 -454.3481 Lf0 D939.2776 -471.8196 m970.1665 -502.7085 L970.1665 -503.416 L939.2776 -534.3049 L937.2278 -532.2551 917.5913 -512.6179 908.3899 -503.4172 C908.3899 -502.7085 L911.2573 -499.8411 932.855 -478.2432 939.2776 -471.8196 Cf970.1665 -645.8579 m967.2991 -648.7256 945.7012 -670.3232 939.2776 -676.7458 C908.3899 -645.8579 L908.3899 -645.1494 L939.2776 -614.2615 L970.1665 -645.1506 L970.1665 -645.8579 Lf939.2776 -608.4375 m908.3899 -639.3252 L908.3899 -509.2412 L939.2776 -540.1292 L970.1665 -509.2402 L970.1665 -639.3264 L939.2776 -608.4375 Lf*U*u1 D0 0 0 0.8 k565.8257 -453.8279 m510.4143 -509.2393 L536.4321 -665.3445 L565.8257 -694.7373 L595.2185 -665.3445 L621.2371 -509.2393 L565.8257 -453.8279 Lf0 D544.3862 -661.3098 m565.8257 -639.8704 L567.25 -641.2954 581.0598 -655.1045 587.2646 -661.3093 C565.8257 -682.7483 L561.3838 -678.3071 546.0901 -663.0125 544.3862 -661.3098 Cf587.8633 -657.9114 m565.8257 -635.8738 L543.7874 -657.9121 L540.1521 -636.1021 520.1274 -515.9517 519.4946 -512.1482 C565.8257 -465.8171 L570.9641 -470.9563 609.4321 -509.4243 612.1567 -512.1482 C611.5239 -515.9517 591.4988 -636.0996 587.8633 -657.9114 Cf*U0.2 g1291.3474 -1031.2383 m1333.645 -1052.3896 l1397.0923 -1010.0918 l1312.4985 -862.0496 l1291.3474 -840.8997 l1270.1975 -862.0496 l1185.6025 -1010.0918 l1249.05 -1052.3896 l1291.3474 -1031.2383 Lf1648.8491 -838.7056 m1550.7266 -995.7061 L1550.7266 -1015.333 L1589.9766 -1034.9565 L1629.229 -1015.333 L1648.8491 -1054.5835 L1668.4761 -1015.333 L1707.7266 -1034.9565 L1746.9761 -1015.333 L1746.9761 -995.7061 L1648.8491 -838.7056 Lf*u1 D879.6597 -931.7397 m879.6597 -991.3589 L939.2778 -1050.978 L998.897 -991.3589 L998.897 -931.7397 L939.2778 -901.9302 L879.6597 -931.7397 Lf939.2778 -842.311 m879.6597 -872.1206 L879.6597 -901.9302 L939.2778 -872.1206 L998.897 -901.9302 L998.897 -872.1206 L939.2778 -842.311 Lf*U*u869.3081 -1333.9834 m842.5908 -1349.4092 L831.2979 -1391.5542 L873.4424 -1402.8472 L900.1597 -1387.4214 L898.0942 -1352.9897 L869.3081 -1333.9834 Lf896.0273 -1318.5576 m882.6685 -1326.2705 L911.4531 -1345.2769 L913.52 -1379.7085 L926.8789 -1371.9956 L924.8115 -1337.564 L896.0273 -1318.5576 Lf970.1299 -1272.2803 m970.1299 -1241.4287 L939.2783 -1210.5771 L908.4268 -1241.4287 L908.4268 -1272.2803 L939.2783 -1287.7061 L970.1299 -1272.2803 Lf1035.9658 -1349.4092 m1009.2485 -1333.9834 L980.4624 -1352.9897 L978.397 -1387.4214 L1005.1143 -1402.8472 L1047.2588 -1391.5542 L1035.9658 -1349.4092 Lf970.1299 -1287.7061 m939.2783 -1303.1318 L908.4268 -1287.7061 L908.4268 -1303.1318 L939.2783 -1318.5576 L970.1299 -1303.1318 L970.1299 -1287.7061 Lf982.5293 -1318.5576 m953.7451 -1337.564 L951.6777 -1371.9956 L965.0366 -1379.7085 L967.1035 -1345.2769 L995.8882 -1326.2705 L982.5293 -1318.5576 Lf*U*u0 0 0 0.8 k565.8254 -1308.6982 m564.3679 -1307.9702 533.26 -1292.4155 Y533.26 -1388.8032 L565.8254 -1405.0859 L598.3914 -1388.8032 L598.3914 -1292.4155 L595.9104 -1293.6558 L567.2834 -1307.9702 565.8254 -1308.6982 Vfu582.9656 -1248.2021 m582.9656 -1246.9097 582.9656 -1232.7764 Y565.8254 -1215.6367 L564.614 -1216.8486 L548.6858 -1232.7764 L548.6858 -1246.9097 548.6858 -1248.2021 V547.7468 -1249.1411 533.26 -1263.6279 Y533.26 -1280.8228 L565.8254 -1297.1055 L598.3914 -1280.8228 L598.3914 -1263.6279 L583.906 -1249.1411 582.9656 -1248.2021 Vf0 D594.9631 -1278.7036 m593.2292 -1279.5708 567.2385 -1292.5664 565.8254 -1293.2725 C564.4128 -1292.5664 538.4221 -1279.5708 536.6882 -1278.7036 C536.6882 -1265.0474 L537.6287 -1264.1084 552.114 -1249.6216 Y552.114 -1235.4878 552.114 -1234.1958 V552.9778 -1233.332 563.8406 -1222.4692 565.8254 -1220.4839 C579.5374 -1234.1958 L579.5374 -1235.4878 579.5374 -1249.6216 Y594.0242 -1264.1084 594.9631 -1265.0474 V594.9631 -1278.7036 LfUu1 D603.533 -1238.2998 m603.533 -1234.4165 603.533 -1221.8984 Y565.8254 -1184.1909 L560.9783 -1189.04 L528.1184 -1221.8984 L528.1184 -1234.4165 528.1184 -1238.2998 V525.0803 -1241.3394 512.6926 -1253.7256 Y512.6926 -1401.6265 L565.8254 -1429.2339 L618.9587 -1401.6265 L618.9587 -1253.7256 L606.571 -1241.3394 603.533 -1238.2998 Vf0 D605.2473 -1393.2974 m599.4558 -1396.3071 570.8435 -1411.1738 565.8254 -1413.7813 C560.8074 -1411.1738 532.1975 -1396.3071 526.4041 -1393.2974 C526.4041 -1259.4067 L529.4421 -1256.3667 541.8298 -1243.981 Y541.8298 -1231.4609 541.8298 -1227.5791 V544.7507 -1224.6582 559.4705 -1209.939 565.8254 -1203.5835 C572.1809 -1209.939 586.9006 -1224.6582 589.8215 -1227.5791 C589.8215 -1231.4624 589.8215 -1243.981 Y602.2092 -1256.3667 605.2473 -1259.4067 V605.2473 -1393.2974 LfU*U*u1 D0.2 g1393.3242 -1279.0293 m1319.0303 -1204.7354 L1317.418 -1203.1226 1314.8057 -1203.1226 1313.1943 -1204.7354 C1189.3706 -1328.5581 L1188.5962 -1329.3325 1188.1611 -1330.3828 1188.1611 -1331.4766 C1188.1611 -1405.7705 L1188.1611 -1408.0493 1190.0103 -1409.8984 1192.2881 -1409.8984 C1266.5825 -1409.8984 L1267.6768 -1409.8984 1268.7271 -1409.4629 1269.501 -1408.689 C1393.3242 -1284.8652 L1394.937 -1283.2529 1394.937 -1280.6411 1393.3242 -1279.0293 Cf0 D1359.8057 -1306.7119 m1222.8906 -1306.7119 L1256.978 -1272.624 1312.2798 -1217.3237 1316.1118 -1213.4897 C1321.2793 -1218.6572 1379.4023 -1276.7798 1384.5698 -1281.9468 C1383.0332 -1283.4844 1373.2119 -1293.3047 1359.8057 -1306.7119 Cf*U*u1 D3225.4458 -1228.6523 m3225.1631 -1225.3296 3222.4082 -1222.7104 3219.0137 -1222.7104 C2985.5034 -1222.7104 L2981.9229 -1222.7104 2979.0171 -1225.6152 2979.0171 -1229.1973 C2979.0171 -1307.0332 L2979.0171 -1309.2046 2980.1021 -1311.2271 2981.9053 -1312.4307 C3098.6602 -1390.2666 L3100.8398 -1391.7197 3103.6768 -1391.7197 3105.856 -1390.2666 C3222.6113 -1312.4307 L3224.4146 -1311.2271 3225.4995 -1309.2046 3225.4995 -1307.0332 C3225.4995 -1228.6523 L3225.4458 -1228.6523 Lf0 D3102.2588 -1377.0747 m3095.6709 -1372.6831 2997.3105 -1307.1094 2991.9902 -1303.562 C2991.9902 -1235.6831 L3108.7451 -1235.6831 L3108.7451 -1372.751 L3105.3765 -1374.9966 3103.0879 -1376.5215 3102.2588 -1377.0747 Cf*U*u1 D0 0 0 0.8 k153.0396 -1564.6113 m138.2969 -1553.1826 L104.061 -1580.3618 L117.0093 -1576.5269 L172.1714 -1745.8423 L173.8467 -1750.6963 173.0767 -1753.5283 Y193.8403 -1728.3862 L199.5781 -1721.4365 202.9492 -1716.9658 200.0786 -1708.5952 C153.0396 -1564.6113 Lf261.8555 -1664.0552 m233.7705 -1750.0283 L232.0586 -1755.0264 234.0718 -1757.6929 237.4932 -1761.8403 C245.4907 -1772.4575 L245.0337 -1770.7603 246.0298 -1767.8628 V278.9683 -1666.77 L286.7031 -1669.0601 L270.6563 -1657.231 L261.8555 -1664.0552 Lf286.519 -1576.5269 m299.4692 -1580.3618 L265.2329 -1553.1826 L250.4902 -1564.6113 L203.4512 -1708.5952 L200.5791 -1716.9658 203.9517 -1721.4365 209.688 -1728.3862 C230.4531 -1753.5283 L229.6816 -1750.6963 231.3569 -1745.8423 V286.519 -1576.5269 Lf141.6748 -1664.0552 m132.8721 -1657.231 L116.8271 -1669.0601 L124.5615 -1666.77 L157.4985 -1767.8628 L158.4966 -1770.7603 158.0376 -1772.4575 Y166.0366 -1761.8403 L169.4565 -1757.6929 171.4717 -1755.0264 169.7578 -1750.0283 C141.6748 -1664.0552 Lf*U*u0.2 g2293.4336 -1610.186 m2285.6255 -1610.186 2280.7729 -1610.3965 2276.7632 -1616.939 C2244.4868 -1670.1123 L2236.8911 -1665.2593 L2251.2397 -1694.166 L2282.0444 -1694.166 L2272.3369 -1687.6235 L2321.7056 -1610.186 L2293.4336 -1610.186 Lf2488.7061 -1705.1182 m2427.2471 -1603.8325 L2423.3784 -1597.521 2418.6997 -1597.3193 2411.1694 -1597.3193 C2383.8999 -1597.3193 L2461.8413 -1722.0093 L2452.4785 -1728.3208 L2482.1924 -1728.3208 L2496.0303 -1700.4395 L2488.7061 -1705.1182 Lf*U0 D3102.2578 -1559.6392 m3053.1494 -1559.6392 3013.1963 -1599.5918 3013.1963 -1648.7007 c3013.1963 -1697.8091 3053.1494 -1737.7622 3102.2578 -1737.7622 C3102.2578 -1766.001 L3141.3574 -1726.9009 L3102.2578 -1687.8008 L3102.2578 -1716.04 L3065.126 -1716.04 3034.9189 -1685.832 3034.9189 -1648.7007 c3034.9189 -1611.5688 3065.126 -1581.3613 3102.2578 -1581.3613 c3139.3896 -1581.3613 3169.5977 -1611.5688 3169.5977 -1648.7007 C3191.3193 -1648.7007 L3191.3193 -1599.5918 3151.3662 -1559.6392 3102.2578 -1559.6392 cf*u1 D1739.4746 -1913.5039 m1718.4766 -1934.5029 L1748.3145 -1904.6621 L1708.5298 -1904.6621 L1708.5298 -1944.4492 L1717.374 -1935.6055 L1755.1553 -1973.3877 1755.1553 -2034.8691 1717.374 -2072.6514 c1713.6694 -2076.3555 1709.7314 -2079.6826 1705.6152 -2082.6611 C1713.9741 -2060.8945 1709.4063 -2035.2617 1691.8838 -2017.7373 c1668.1563 -1994.0078 1629.5464 -1994.0078 1605.8186 -2017.7373 c1588.2966 -2035.2598 1583.73 -2060.8906 1592.0857 -2082.6572 C1587.9707 -2079.6787 1584.0327 -2076.3516 1580.3298 -2072.6484 c1542.5476 -2034.8691 1542.5476 -1973.3916 1580.3291 -1935.6055 C1589.1729 -1944.4492 L1589.1729 -1904.6621 L1549.3853 -1904.6621 L1558.2285 -1913.5049 L1534.0208 -1937.709 1520.6902 -1969.8936 1520.6902 -2004.1279 c1520.6902 -2038.3623 1534.0212 -2070.5479 1558.2288 -2094.752 c1608.1958 -2144.7207 1689.5063 -2144.7207 1739.4746 -2094.7539 c1763.6821 -2070.5479 1777.0127 -2038.3623 1777.0127 -2004.1279 c1777.0127 -1969.8936 1763.6821 -1937.708 1739.4746 -1913.5039 Cf0 D1695.5928 -2088.9941 m1694.0376 -2089.8496 1692.4556 -2090.6357 1690.8657 -2091.3994 C1690.9829 -2090.123 1691.0498 -2088.833 1691.0498 -2087.5264 c1691.0498 -2064.2197 1672.1582 -2045.3271 1648.8506 -2045.3271 c1625.5439 -2045.3271 1606.6509 -2064.2197 1606.6509 -2087.5264 c1606.6509 -2088.833 1606.7185 -2090.1221 1606.8354 -2091.3975 C1605.2317 -2090.6279 1603.6375 -2089.834 1602.0703 -2088.9697 C1596.9729 -2080.5479 1594.2451 -2070.8701 1594.2451 -2060.7695 c1594.2451 -2046.1836 1599.9231 -2032.4717 1610.2378 -2022.1572 c1631.5303 -2000.8652 1666.1719 -2000.8652 1687.4639 -2022.1572 c1705.562 -2040.2578 1708.2637 -2068.0029 1695.5928 -2088.9941 Cf*U*uu1 D2734.583 -1605.9658 m2670.9854 -1637.7646 L2670.9854 -1701.5869 L2670.9854 -1737.5 2700.2031 -1766.7178 2736.1162 -1766.7178 c2772.0293 -1766.7178 2801.2471 -1737.5 2801.2471 -1701.5869 C2801.2471 -1637.7646 L2736.1162 -1605.1992 L2734.583 -1605.9658 Lf0 D2794.3916 -1701.5869 m2794.3916 -1714.1709 2790.3691 -1725.8252 2783.5615 -1735.3613 C2773.9229 -1719.2441 2756.3008 -1708.4492 2736.1563 -1708.4492 c2715.9844 -1708.4492 2698.3457 -1719.2715 2688.7158 -1735.4238 C2681.8809 -1725.877 2677.8408 -1714.1982 2677.8408 -1701.5869 C2677.8408 -1674.1631 L2794.3916 -1674.1631 L2794.3916 -1701.5869 LfUu1 D2736.1162 -1558.9219 m2734.583 -1559.6885 L2670.9854 -1591.4873 L2670.9854 -1630.0049 L2733.2002 -1598.8975 2736.1162 -1597.4395 V2739.0322 -1598.8975 2801.2471 -1630.0049 Y2801.2471 -1591.4873 L2736.1162 -1558.9219 Lf0 D2794.3916 -1618.9111 m2786.001 -1614.7168 2736.1162 -1589.7734 Y2686.2314 -1614.7168 2677.8408 -1618.9111 V2677.8408 -1595.7256 L2681.3105 -1593.9902 2733.293 -1567.999 2736.1162 -1566.5879 C2738.9395 -1567.999 2790.9219 -1593.9902 2794.3916 -1595.7256 C2794.3916 -1618.9111 LfU*U*u1 D3102.2578 -435.1182 m3025.5229 -435.1182 2963.0938 -497.5483 2963.0938 -574.2832 c2963.0938 -651.0181 3025.5229 -713.447 3102.2578 -713.447 c3178.9927 -713.447 3241.4214 -651.0181 3241.4214 -574.2832 c3241.4214 -497.5483 3178.9927 -435.1182 3102.2578 -435.1182 cf0 D3195.4829 -620.8979 m3148.8682 -620.8979 L3148.8682 -667.5083 L3163.8081 -682.4485 L3154.9028 -687.5334 3145.3188 -691.5618 3135.2178 -694.3379 C3135.2178 -673.1631 L3102.2578 -640.2031 L3069.2979 -673.1631 L3069.2979 -694.3379 L3059.1963 -691.5618 3049.6147 -687.5298 3040.7114 -682.4431 C3055.647 -667.5083 L3055.647 -620.8906 L3009.0327 -620.8936 L2994.0967 -635.8333 L2989.0073 -626.9275 2984.9741 -617.345 2982.1968 -607.2441 C3003.3779 -607.2463 L3036.3418 -574.2832 L3003.3779 -541.3232 L2982.1924 -541.3232 L2984.9761 -531.2236 2988.9971 -521.6309 2994.0884 -512.7249 C3009.0327 -527.6716 L3055.647 -527.6716 L3055.647 -481.0569 L3040.707 -466.1184 L3049.6128 -461.0327 3059.1987 -457.0046 3069.2979 -454.2285 C3069.2979 -475.4033 L3102.2578 -508.3633 L3135.2178 -475.4033 L3135.2178 -454.2285 L3145.3188 -457.0046 3154.9004 -461.0359 3163.8042 -466.1221 C3148.8726 -481.0537 L3148.8726 -527.6716 L3195.4829 -527.6716 L3210.4209 -512.7341 L3215.5078 -521.6392 3219.5415 -531.2224 3222.3188 -541.3232 C3201.1416 -541.3232 L3168.1777 -574.2864 L3201.1377 -607.2463 L3222.3208 -607.2463 L3219.5371 -617.3445 3215.5186 -626.9355 3210.4272 -635.8401 C3195.4829 -620.8979 Lf*U*u1 D2766.9678 -1275.8608 m2736.1162 -1245.0093 L2705.2646 -1275.8608 L2720.6904 -1275.8608 L2720.6904 -1291.2866 L2705.2646 -1306.7124 L2705.2646 -1337.564 L2736.1162 -1368.4155 L2766.9678 -1337.564 L2766.9678 -1306.7124 L2751.542 -1291.2866 L2751.542 -1275.8608 L2766.9678 -1275.8608 Lf2736.1162 -1198.7319 m2705.2646 -1229.5835 L2705.2646 -1260.4351 L2736.1162 -1229.5835 L2766.9678 -1260.4351 L2766.9678 -1229.5835 L2736.1162 -1198.7319 Lf2705.2646 -1352.9897 m2705.2646 -1383.8413 L2736.1162 -1414.6929 L2766.9678 -1383.8413 L2766.9678 -1352.9897 L2736.1162 -1383.8413 L2705.2646 -1352.9897 Lf*U0 D0 0 0 0.8 k305.137 -1203.3408 m279.2939 -1203.3408 L137.1577 -1345.4766 L124.2363 -1332.5552 L253.4509 -1203.3408 L98.3933 -1203.3408 L98.3933 -1410.084 L305.137 -1410.084 L305.137 -1255.0264 L175.9221 -1384.2412 L163.0007 -1371.3198 L305.137 -1229.1836 L305.137 -1203.3408 Lf*u1 D0.2 g3102.2588 -2076.9912 m3125.6772 -2053.5732 L3125.6772 -1936.4805 L3078.8403 -1936.4805 L3078.8403 -2053.5732 L3102.2588 -2076.9912 Lf3125.6772 -1913.0625 m3125.6772 -1936.4805 L3149.0957 -1936.4805 L3149.0957 -2053.5732 L3102.2588 -2100.4102 L3055.4219 -2053.5732 L3055.4219 -1936.4805 L3078.8403 -1936.4805 L3078.8403 -1913.0625 L3008.585 -1913.0625 L3008.585 -2123.8281 L3195.9316 -2123.8281 L3195.9316 -1913.0625 L3125.6772 -1913.0625 Lf*U*u2736.1177 -2065.6992 m2783.3716 -2018.4453 L2759.7446 -2018.4453 L2759.7446 -1923.9375 L2712.4907 -1923.9375 L2712.4907 -2018.4453 L2688.8638 -2018.4453 L2736.1177 -2065.6992 Lf2830.6226 -1994.8184 m2806.9956 -1947.5645 L2806.9956 -1923.9375 L2783.3687 -1947.5645 L2783.3687 -1971.1914 L2806.9956 -1994.8184 L2806.9956 -2018.4453 L2736.1162 -2089.3247 L2665.2368 -2018.4453 L2665.2368 -1994.8184 L2688.8638 -1971.1914 L2688.8638 -1947.5645 L2665.2368 -1923.9375 L2665.2368 -1947.5645 L2641.6099 -1994.8184 L2617.9829 -2018.4453 L2641.6099 -2042.0723 L2641.6099 -2112.9531 L2830.6226 -2112.9531 L2830.6226 -2042.0723 L2854.2495 -2018.4453 L2830.6226 -1994.8184 Lf*U*u3466.373 -1901.915 m3402.1191 -1901.915 3349.8433 -1954.1899 3349.8433 -2018.4463 c3349.8433 -2082.7007 3402.1191 -2134.9756 3466.373 -2134.9756 c3530.6299 -2134.9756 3582.9053 -2082.7007 3582.9053 -2018.4463 c3582.9053 -1954.1899 3530.6299 -1901.915 3466.373 -1901.915 cf0 D3562.2549 -2018.4463 m3562.2549 -2040.7832 3554.5566 -2061.3418 3541.7012 -2077.6582 C3498.8247 -2034.7827 L3498.8247 -1983.4893 L3447.5322 -1983.4893 L3407.1611 -1943.1196 L3423.478 -1930.2642 3444.0366 -1922.5659 3466.373 -1922.5659 c3519.2412 -1922.5659 3562.2549 -1965.5776 3562.2549 -2018.4463 cf3370.4946 -2018.4463 m3370.4946 -1995.3374 3378.7134 -1974.1113 3392.3794 -1957.5381 C3433.9224 -1999.0811 L3433.9224 -2044.9351 L3466.373 -2077.3857 L3489.3003 -2054.4604 L3527.2808 -2092.4414 L3510.7065 -2106.1069 3489.4814 -2114.3247 3466.373 -2114.3247 c3413.5044 -2114.3247 3370.4946 -2071.3164 3370.4946 -2018.4463 cf*U*u1 D3572.9512 -1647.792 m3572.9512 -1589.0244 3525.1411 -1541.2148 3466.3721 -1541.2148 c3407.6079 -1541.2148 3359.7983 -1589.0244 3359.7983 -1647.792 c3359.7983 -1701.6123 3399.9121 -1746.1943 3451.8047 -1753.3242 C3451.8047 -1769.8594 L3466.3721 -1784.4248 L3480.9409 -1769.8594 L3480.9409 -1753.3242 L3532.8354 -1746.1943 3572.9512 -1701.6123 3572.9512 -1647.792 cf0 D3466.3721 -1735.4805 m3418.02 -1735.4805 3378.6836 -1696.1465 3378.6836 -1647.792 c3378.6836 -1599.4395 3418.02 -1560.1025 3466.3721 -1560.1025 c3514.7261 -1560.1025 3554.064 -1599.4395 3554.064 -1647.792 c3554.064 -1696.1465 3514.7261 -1735.4805 3466.3721 -1735.4805 cf*U*u1 D3382.019 -836.6816 m3382.019 -1002.3799 L3412.1455 -1002.3799 L3412.1455 -1029.4941 3439.2598 -1029.4941 V3466.374 -1029.4941 3466.374 -1056.6074 V3466.374 -1029.4941 3493.4883 -1029.4941 V3520.6025 -1029.4941 3520.6025 -1002.3799 V3550.729 -1002.3799 L3550.729 -836.6816 L3382.019 -836.6816 Lf0 D3442.2725 -1002.3799 m3442.2725 -933.3838 3442.2725 -896.9351 V3490.4756 -896.9351 L3490.4756 -933.3838 3490.4756 -1002.3799 Y3442.2725 -1002.3799 Lf*Uu*uu1 D3464.4497 -1228.6636 m3425.749 -1306.0659 L3425.3374 -1306.894 3425.4961 -1307.8936 3426.1528 -1308.5479 C3464.8545 -1347.2485 L3465.6919 -1348.0889 3467.0542 -1348.0889 3467.8945 -1347.2485 C3506.5962 -1308.5479 L3507.2505 -1307.8936 3507.4092 -1306.894 3506.9976 -1306.0659 C3468.2969 -1228.6636 L3467.9312 -1227.938 3467.1895 -1227.4751 3466.3735 -1227.4751 c3465.5601 -1227.4751 3464.8149 -1227.938 3464.4497 -1228.6636 Cf0 D3502.4575 -1306.6021 m3500.4731 -1308.5894 3469.0972 -1339.9624 3466.3735 -1342.6895 C3463.6489 -1339.9624 3432.2759 -1308.5894 3430.2891 -1306.6021 C3431.5576 -1304.0635 3462.9629 -1241.249 3466.3735 -1234.4331 C3469.7837 -1241.249 3501.1914 -1304.0635 3502.4575 -1306.6021 CfUu1 D3582.4766 -1304.8774 m3544.9258 -1304.8774 L3468.1616 -1189.7319 L3467.7622 -1189.1343 3467.0913 -1188.7734 3466.3735 -1188.7734 c3465.6553 -1188.7734 3464.9839 -1189.1343 3464.5845 -1189.7319 C3387.8213 -1304.8774 L3350.27 -1304.8774 L3349.0815 -1304.8774 3348.1211 -1305.8403 3348.1211 -1307.0288 C3348.1211 -1345.7295 L3348.1211 -1346.918 3349.0815 -1347.8784 3350.27 -1347.8784 C3388.0815 -1347.8784 L3464.8545 -1424.6509 L3465.6919 -1425.4917 3467.0542 -1425.4917 3467.8945 -1424.6509 C3544.667 -1347.8784 L3582.4766 -1347.8784 L3583.665 -1347.8784 3584.6279 -1346.918 3584.6279 -1345.7295 C3584.6279 -1307.0288 L3584.6279 -1305.8403 3583.665 -1304.8774 3582.4766 -1304.8774 Cf0 D3538.0029 -1309.7607 m3537.7617 -1310.002 3537.5078 -1310.2559 3537.2417 -1310.522 c3522.3345 -1325.4277 3468.8857 -1378.873 3466.3735 -1381.3901 C3463.8159 -1378.8281 3408.4893 -1323.5029 3394.7461 -1309.7607 c3393.4824 -1308.4971 3392.46 -1307.4746 3391.7393 -1306.7539 C3393.6016 -1303.957 3463.0024 -1199.856 3466.3735 -1194.8013 C3469.7446 -1199.856 3539.1445 -1303.9561 3541.0098 -1306.7539 C3540.2891 -1307.4746 3539.2666 -1308.4971 3538.0029 -1309.7607 cfU*UU854.5129 -1599.2461 m939.2783 -1556.8633 l1024.0437 -1599.2461 l1024.0437 -1768.7764 l854.5129 -1768.7764 l854.5129 -1599.2461 lf0 0 0 0.8 k677.5691 -2112.6367 m677.5691 -2016.4414 L677.5691 -1952.3472 626.563 -1900.2051 563.865 -1900.2051 c501.168 -1900.2051 450.1616 -1952.3472 450.1616 -2016.4414 c450.1616 -2080.5342 501.168 -2132.6768 563.865 -2132.6768 C563.865 -2092.5947 L522.7888 -2092.5947 489.3699 -2058.4326 489.3699 -2016.4414 c489.3699 -1974.4487 522.7888 -1940.2861 563.865 -1940.2861 c604.9421 -1940.2861 638.3611 -1974.4487 638.3611 -2016.4414 C638.3611 -2112.6367 L634.4397 -2112.6367 L657.9648 -2136.6855 L681.4897 -2112.6367 L677.5691 -2112.6367 Lf*u1 D0.2 g1165.1782 -2018.4453 m1165.1782 -2088.0146 1221.7776 -2144.6147 1291.3477 -2144.6147 c1297.1792 -2144.6147 1301.906 -2139.8877 1301.906 -2134.0562 C1301.906 -2094.4639 L1301.906 -2088.6323 1297.1792 -2083.9053 1291.3477 -2083.9053 c1255.2524 -2083.9053 1225.8875 -2054.54 1225.8875 -2018.4453 c1225.8875 -1982.3491 1255.2524 -1952.9844 1291.3477 -1952.9844 c1327.4434 -1952.9844 1356.8079 -1982.3491 1356.8079 -2018.4453 C1356.8079 -2094.4639 L1356.8079 -2096.1021 1357.1897 -2097.7192 1357.9216 -2099.186 C1376.926 -2137.1953 L1378.6724 -2140.6841 1382.2007 -2142.9282 1386.1025 -2143.0269 c1390.0042 -2143.1255 1393.6418 -2141.0659 1395.5615 -2137.6665 C1416.1497 -2101.2422 L1417.0466 -2099.6577 1417.5166 -2097.8672 1417.5166 -2096.0469 C1417.5166 -2018.4453 L1417.5166 -1948.8745 1360.918 -1892.2759 1291.3477 -1892.2759 c1221.7776 -1892.2759 1165.1782 -1948.8745 1165.1782 -2018.4453 cf0 D1186.2942 -2018.4453 m1186.2942 -1960.5176 1233.4202 -1913.3921 1291.3477 -1913.3921 c1349.2747 -1913.3921 1396.4006 -1960.5176 1396.4006 -2018.4453 C1396.4006 -2088.1064 1396.4006 -2093.2686 V1395.2295 -2095.3442 1391.658 -2101.6597 1386.9417 -2110.0059 C1382.4524 -2101.0264 1378.9204 -2093.9619 1377.9241 -2091.9707 C1377.9241 -2087.3076 1377.9241 -2018.4453 Y1377.9241 -1970.7065 1339.0859 -1931.8687 1291.3477 -1931.8687 c1243.6094 -1931.8687 1204.7712 -1970.7065 1204.7712 -2018.4453 c1204.7712 -2062.6035 1238.0229 -2099.0767 1280.7898 -2104.3101 C1280.7898 -2111.2817 1280.7898 -2115.439 1280.7898 -2122.9644 C1227.8037 -2117.6504 1186.2942 -2072.8071 1186.2942 -2018.4453 Cf*U1053.7849 -2094.2568 m1053.7849 -2018.4453 L1053.7849 -1951.9688 999.7009 -1897.8838 933.2239 -1897.8838 c866.7473 -1897.8838 812.6628 -1951.9688 812.6628 -2018.4453 c812.6628 -2084.9219 866.7473 -2139.0068 933.2239 -2139.0068 C938.4888 -2139.0068 L938.4888 -2088.9922 L933.2239 -2088.9922 L894.3252 -2088.9922 862.6775 -2057.3447 862.6775 -2018.4453 c862.6775 -1979.5469 894.3252 -1947.8994 933.2239 -1947.8994 c972.123 -1947.8994 1003.771 -1979.5469 1003.771 -2018.4453 C1003.771 -2094.2568 L990.0825 -2094.2568 L1009.0354 -2113.21 L1027.988 -2094.2568 L1014.3003 -2094.2568 L1014.3003 -2018.4453 L1014.3003 -1973.7402 977.9285 -1937.3691 933.2239 -1937.3691 c888.5193 -1937.3691 852.1482 -1973.7402 852.1482 -2018.4453 c852.1482 -2061.373 885.7104 -2096.5215 927.9595 -2099.2549 C927.9595 -2128.209 L869.739 -2125.4355 823.1921 -2077.3398 823.1921 -2018.4453 c823.1921 -1957.7734 872.5527 -1908.4131 933.2239 -1908.4131 c993.8955 -1908.4131 1043.2556 -1957.7734 1043.2556 -2018.4453 C1043.2556 -2094.2568 L1027.988 -2094.2568 L1046.9409 -2113.21 L1065.8938 -2094.2568 L1053.7849 -2094.2568 Lf*u1 D2121.4448 -1911.1064 m2117.8252 -1907.4868 L1937.9185 -2087.3945 L1937.9185 -2061.5703 1937.9185 -1909.2969 Y1932.7993 -1909.2969 L1932.7993 -2096.1323 L2119.6348 -2096.1323 L2119.6348 -2091.0122 L1967.3638 -2091.0122 1941.5371 -2091.0122 V2121.4448 -1911.1064 Lf1925.1211 -2047.5039 m1899.5273 -2047.5039 L1899.5273 -2129.4038 L1981.4277 -2129.4038 L1981.4277 -2103.8101 L1942.1147 -2103.8101 1925.1211 -2103.8101 V1925.1211 -2086.8169 1925.1211 -2047.5039 Yf*U*u1672.7935 -1623.6943 m1685.4414 -1615.7134 1693.8843 -1601.6533 1693.8843 -1585.623 c1693.8843 -1560.7891 1673.6831 -1540.5903 1648.8511 -1540.5903 c1624.0195 -1540.5903 1603.8181 -1560.7891 1603.8181 -1585.623 c1603.8181 -1601.6533 1612.262 -1615.7134 1624.9087 -1623.6943 C1608.7532 -1633.0947 1603.8181 -1651.5684 1603.8181 -1662.8213 C1603.8181 -1701.4199 L1603.8181 -1703.1235 1604.4976 -1704.7607 1605.7046 -1705.9678 C1644.3037 -1744.5669 L1646.8159 -1747.0786 1650.8867 -1747.0786 1653.3989 -1744.5669 C1691.9976 -1705.9678 L1693.2051 -1704.7607 1693.8843 -1703.1235 1693.8843 -1701.4199 C1693.8843 -1662.8213 L1693.8843 -1651.5684 1688.9507 -1633.0947 1672.7935 -1623.6943 Cf1682.9028 -1735.4692 m1655.9302 -1762.4365 1648.8511 -1769.5205 V1641.772 -1762.4365 1614.7998 -1735.4692 Y1612.2878 -1732.957 1608.2168 -1732.957 1605.7046 -1735.4692 c1603.1902 -1737.9839 1603.1902 -1742.0547 1605.7046 -1744.5669 C1644.3037 -1783.1655 L1646.8159 -1785.6777 1650.8867 -1785.6777 1653.3989 -1783.1655 C1691.9976 -1744.5669 L1694.5122 -1742.0547 1694.5122 -1737.9839 1691.9976 -1735.4692 c1689.4858 -1732.957 1685.4146 -1732.957 1682.9028 -1735.4692 Cf*U*u2029.8281 -1579.8301 m2033.6211 -1575.3857 2035.9253 -1569.6357 2035.9253 -1563.3477 c2035.9253 -1549.3184 2024.5137 -1537.9072 2010.4858 -1537.9072 c1996.4575 -1537.9072 1985.0479 -1549.3184 1985.0479 -1563.3477 c1985.0479 -1569.6357 1987.3535 -1575.3857 1991.1455 -1579.8301 C1962.1289 -1588.7402 1953.7627 -1617.3477 1953.7627 -1633.7715 C1953.7627 -1682.3916 L1953.7627 -1684.5371 1954.6172 -1686.5996 1956.1377 -1688.1201 C2004.7559 -1736.7393 L2007.9219 -1739.9043 2013.0493 -1739.9043 2016.2158 -1736.7393 C2064.8354 -1688.1201 L2066.354 -1686.5996 2067.21 -1684.5371 2067.21 -1682.3916 C2067.21 -1633.7715 L2067.21 -1617.3506 2058.8438 -1588.7402 2029.8281 -1579.8301 Cf2053.376 -1725.2803 m2019.4009 -1759.249 2010.4858 -1768.1719 V2001.5708 -1759.249 1967.5952 -1725.2803 Y1964.4297 -1722.1162 1959.3018 -1722.1162 1956.1377 -1725.2803 c1952.9722 -1728.4482 1952.9722 -1733.5752 1956.1377 -1736.7393 C2004.7559 -1785.3594 L2007.9219 -1788.5244 2013.0493 -1788.5244 2016.2158 -1785.3594 C2064.8354 -1736.7393 L2068.0015 -1733.5752 2068.0015 -1728.4482 2064.8354 -1725.2803 c2061.6699 -1722.1162 2056.5415 -1722.1162 2053.376 -1725.2803 Cf*U*u1291.3472 -1559.5459 m1179.2456 -1615.5967 L1263.3218 -1615.5967 L1263.3218 -1671.6475 L1291.3472 -1699.6729 L1319.373 -1671.6475 L1319.373 -1615.5967 L1403.4492 -1615.5967 L1291.3472 -1559.5459 Lf1263.3218 -1690.8447 m1263.3218 -1738.0684 L1291.3472 -1766.0938 L1319.373 -1738.0684 L1319.373 -1690.8447 L1291.3472 -1718.8701 L1263.3218 -1690.8447 Lf*U*u2094.8628 -1369.9946 m1947.2031 -1369.9946 L1947.2031 -1222.3359 L1926.1089 -1201.2417 L1905.0146 -1222.3359 L1905.0146 -1369.9946 L1926.1089 -1391.0889 L1947.2031 -1412.1831 L2094.8628 -1412.1831 L2115.957 -1391.0889 L2094.8628 -1369.9946 Lf1905.0146 -1412.1831 m1926.1089 -1412.1831 L1926.1089 -1391.0889 L1905.0146 -1391.0889 L1905.0146 -1412.1831 Lf*U0 D1758.0293 -1205.333 m1648.8511 -1314.5112 L1539.6736 -1205.333 L1508.481 -1205.333 L1508.481 -1236.5278 L1617.6582 -1345.7041 L1617.6582 -1376.8994 L1648.8511 -1408.0918 L1680.0439 -1376.8994 L1680.0439 -1345.7041 L1789.2217 -1236.5278 L1789.2217 -1205.333 L1758.0293 -1205.333 Lf0 0 0 0.8 k585.9111 -1562.3926 m565.8257 -1602.5635 L545.7402 -1562.3926 L525.6548 -1602.5635 L525.6548 -1702.9912 L565.8257 -1763.2471 L605.9966 -1702.9912 L605.9966 -1602.5635 L585.9111 -1562.3926 Lf201.7651 -1902.5083 mF*u1 D232.6167 -1910.4648 m215.5781 -1910.4648 201.7651 -1924.2764 201.7651 -1941.3164 c201.7651 -1924.2764 187.9521 -1910.4648 170.9136 -1910.4648 c153.875 -1910.4648 140.062 -1924.2764 140.062 -1941.3164 C140.062 -2033.8711 L186.3394 -2049.2969 186.3394 -2080.1484 V186.3394 -2064.7227 201.7651 -2064.7227 v217.1909 -2064.7227 217.1909 -2080.1484 Y217.1909 -2049.2969 263.4683 -2033.8711 Y263.4683 -1941.3164 L263.4683 -1924.2764 249.6553 -1910.4648 232.6167 -1910.4648 cf201.7651 -2080.1484 m193.2456 -2080.1484 186.3394 -2087.0547 186.3394 -2095.5742 C186.3394 -2111 L201.7651 -2126.4258 L217.1909 -2111 L217.1909 -2095.5742 L217.1909 -2087.0547 210.2847 -2080.1484 201.7651 -2080.1484 cf*U*u503.0767 -963.0151 m563.4089 -902.6812 565.8262 -900.2637 V568.2432 -902.6812 628.5757 -963.0151 Y629.2695 -963.709 630.395 -963.709 631.0898 -963.0151 c631.7839 -962.3203 631.7839 -961.1948 631.0898 -960.5005 C567.0833 -896.4937 L566.3882 -895.7983 565.2629 -895.7983 564.5688 -896.4937 C500.5623 -960.5005 L499.8674 -961.1948 499.8674 -962.3203 500.5623 -963.0151 c501.2561 -963.709 502.3816 -963.709 503.0767 -963.0151 Cf661.8362 -892.416 m658.8911 -892.416 656.5015 -894.8057 656.5015 -897.7505 C656.5015 -987.3325 656.5015 -991.5518 V653.821 -994.2334 630.3049 -1017.7495 627.6243 -1020.4302 C600.0378 -1020.4302 L597.2114 -1017.6035 569.5964 -989.9897 Y567.5137 -987.9058 564.1384 -987.9058 562.0547 -989.9897 C534.4407 -1017.6035 531.6143 -1020.4302 V504.0278 -1020.4302 L501.3474 -1017.7495 477.8301 -994.2334 475.1497 -991.5518 C475.1497 -987.3325 475.1497 -897.7505 Y475.1497 -894.8057 472.761 -892.416 469.8162 -892.416 c466.8713 -892.416 464.4814 -894.8057 464.4814 -897.7505 C464.4814 -993.7612 L464.4814 -995.1743 465.0447 -996.5317 466.0447 -997.5317 C498.0479 -1029.5352 L499.0479 -1030.5356 500.4063 -1031.0981 501.8193 -1031.0981 C533.8228 -1031.0981 L535.2358 -1031.0981 536.5933 -1030.5356 537.5933 -1029.5352 C559.9565 -1007.1758 565.8262 -1001.3032 V571.6946 -1007.1758 594.0579 -1029.5352 Y595.0579 -1030.5356 596.4163 -1031.0981 597.8293 -1031.0981 C629.8328 -1031.0981 L631.2458 -1031.0981 632.6033 -1030.5356 633.6033 -1029.5352 C665.6064 -997.5317 L666.6074 -996.5317 667.1697 -995.1743 667.1697 -993.7612 C667.1697 -897.7505 L667.1697 -894.8057 664.781 -892.416 661.8362 -892.416 cf505.5908 -997.5317 m559.1443 -943.9785 565.8262 -937.2964 V572.5068 -943.9785 626.0613 -997.5317 Y628.145 -999.6152 631.5205 -999.6152 633.6033 -997.5317 c635.687 -995.4487 635.687 -992.0737 633.6033 -989.9897 C569.5964 -925.9829 L567.5137 -923.8989 564.1384 -923.8989 562.0547 -925.9829 C498.0479 -989.9897 L495.9641 -992.0737 495.9641 -995.4487 498.0479 -997.5317 c500.1318 -999.6152 503.5071 -999.6152 505.5908 -997.5317 Cf536.3372 -900.2637 m561.5542 -875.0469 565.8262 -870.7749 V570.0969 -875.0469 595.3152 -900.2637 Y596.7039 -901.6538 598.9539 -901.6538 600.3438 -900.2637 c601.7327 -898.875 601.7327 -896.625 600.3438 -895.2363 C568.3403 -863.2329 L566.9504 -861.8442 564.7007 -861.8442 563.3118 -863.2329 C531.3083 -895.2363 L529.9197 -896.625 529.9197 -898.875 531.3083 -900.2637 c532.6973 -901.6538 534.9473 -901.6538 536.3372 -900.2637 Cf*U*u181.3525 -946.645 m201.7651 -926.2329 L222.1777 -946.645 L242.5901 -926.2329 L263.0027 -946.645 L263.0027 -926.2329 L242.5901 -864.9946 L222.1777 -926.2329 L201.7651 -905.8198 L181.3525 -926.2329 L160.9399 -864.9946 L140.5276 -926.2329 L140.5276 -946.645 L160.9399 -926.2329 L181.3525 -946.645 Lf263.0027 -967.0576 m242.5901 -946.645 L222.1777 -967.0576 L201.7651 -946.645 L181.3525 -967.0576 L160.9399 -946.645 L140.5276 -967.0576 L79.29 -1028.2944 L324.2402 -1028.2944 L263.0027 -967.0576 Lf*U*u0.2 g2366.4609 -1963.9639 m2257.498 -1909.4824 L2366.4609 -2018.4453 L2475.4238 -1909.4824 L2366.4609 -1963.9639 Lf2257.498 -1963.9639 m2257.498 -2072.9268 L2366.4609 -2127.4082 L2475.4238 -2072.9268 L2475.4238 -1963.9639 L2366.4609 -2018.4453 L2257.498 -1963.9639 Lf*ULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_blend_AI5 /terminate get execAdobe_typography_AI5 /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF