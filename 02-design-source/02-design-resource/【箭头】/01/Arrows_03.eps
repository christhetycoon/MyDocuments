%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.0
%%AI8_CreatorVersion: 10.0
%%For: (Michael) (WeWorkForThem)
%%Title: (E0029_Arrows03.eps)
%%CreationDate: 10/31/2002 3:55 PM
%%BoundingBox: 36 -2279 3627 -36
%%HiResBoundingBox: 36 -2278.4458 3627 -36
%%DocumentProcessColors: Cyan Black
%%DocumentFonts: Verdana
%%DocumentNeededFonts: Verdana
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 1.1
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI3_TemplateBox: 1836.5 -1152.5 1836.5 -1152.5
%AI3_TileBox: 1242.0005 -1547 1818.0005 -797
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 3672 2304
%AI5_RulerUnits: 0
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 4
%AI5_OpenToView: -1032.5 852.5 -6 1261 811 18 0 0 12 67 0 0
%AI5_OpenViewLayers: 7333
%%PageOrigin:1242.0005 -1547
%%AI3_PaperRect:-18 787 594 -5
%%AI3_Margin:18 -33 -18 5
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_ax neg 0 rmoveto
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
	bind def
} bind def
/xs
{
	exch store
} bd
/nullProc
{
	{
	}
} def
/initialize
{
	pop pop
	Adobe_blend_AI5 begin
		Adobe_blend_AI5_vars begin
			/_contoneDevice where
			{
				pop
			}
			{
				/_contoneDevice false def	
			} ifelse
					
			/_dpiThreshold where
			{
				pop
			}
			{	
				/_dpiThreshold 600 def
			} ifelse
			
			/_screenFreqThreshold where
			{
				pop
			}
			{	
				/_screenFreqThreshold 150 def
			} ifelse
			
			/tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
	/invertXfer
	{
		[
		{
			1 exch sub
				} /exec load systemdict/currenttransfer get exec /exec load
				] cvx systemdict/settransfer get exec
			} bd
			/spotDict 3 dict dup begin
				/nSpots 2 def
				/spot1 7 dict def
				/spot2 7 dict def
		 end
			def
			composite?
			{
				/_setgray_ /setgray load def
				/_fill_ /fill load def
				/_image_ /image load def
			}
			{
				/_setgray_ systemdict/setgray get def
				/_fill_ systemdict/fill get def
				/_image_ systemdict/image get def
			} ifelse
		} bd
		/terminate
		{
			currentdict Adobe_blend_AI5_vars eq
			{
		 end
			currentdict Adobe_blend_AI5 eq
			{
		 end
		} if
	} if
} bd
/_compositeSpotDevice where
{
 begin
		_compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
	/_compositeSpotDevice 0 def	
} ifelse
	
/nullString () def
/d255 256 array def
0 1 255
{
	d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
	d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
	/f /F /s /S /b /B
}
{
	null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
	save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
	pop lv1Fix
}
{
	false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
	null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
	counttomark 2 add -1 roll
} bd
/setCustomColor
{
	dup /ccTint exch store
	1 exch sub 6 1 roll
	ccAry1 astore
	exch setcustomcolor
} bd
/currentCustomColor
{
	ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where 
{
	pop
}
{
	/nsetcustomcolor
	{
		pop setcmykcolor	
	} bd
} ifelse
/nsetcustomcolorend where 
{
	pop
}
{
	/nsetcustomcolorend
	{
	} bd
} ifelse
/setBSpace
{
	newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
	dup 0 eq
	{
		pop
		
		spotColor?
			{
			dup 1 exch sub /ccTint exch def
			ccAry1 4 /Black put
			} if
		setgray
	}
	{
		1 eq
		{
			setcmykcolor
		}
		{
			composite? not colorType 2 lt and
			{
				forceCMYK
			}
			{
				setCustomColor
			} ifelse
		} ifelse
	} ifelse
} bd
/makeByte
{
	/tmp 0 store
	255 mul cvi
	8 string 8
	{
		dup tmp 3 index put /tmp tmp 1 add store
	} repeat
	exch pop
} bd
/setImgSpace
{
	cDataLen 1 8
	2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
	setImgSpace cData /_image_ load
	{
		exec
	} stopped
	{
		$error /errorname get /undefinedresult ne
		{
			stop
		}
		{
			pop pop pop pop pop
		} ifelse
	} if
} bd
level2?
{
	/bFill
	{
		_fill
	} def
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		expandCMYK
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
} if
/expandOne
{
			dup type /stringtype ne
			{
				cDataLen string
				exch
				dup 0 ne
				{
					255 mul cvi
					0 1 cDataLen 1 sub
					{
						3 copy
						exch put pop
					} for
				} if
				pop
			} if
} bd
/expandSpot
{
	spotColor?
	{
		spotDict begin
			spot1 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
			spot2 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
	 end
	} if
} bd
/expandCMYK
{
	4
	{
		expandOne 4 1 roll
	} repeat
} bd
/colorimage where dup
{
	exch pop
	
	/ncolorimage where
	{
		pop
	}
	{
		/ncolorimage {pop colorimage} bd
	} ifelse
} if
not
{
	/ncolorimage where 
	{
		pop
	}
	{
		/colorimage? false store
		/ncolorimage
		{
			pop pop pop
	
		setSSave
		/blackData xs
		/yeData xs
		/mgData xs
		/cyData xs
		/cnt1 0 store
		[
		byte dup 0
		cyData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
		}
		{
			.3 mul
		} ifelse
		mgData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
		}
		{
			.59 mul
		} ifelse
		yeData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
		}
		{
			.11 mul
		} ifelse
		blackData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx
		} if
		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/dup cvx 1 /gt cvx
		{
			pop 1
		} /if cvx
		255 /mul cvx /cvi cvx
		256 /mod cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/put cvx
		/cnt1 dup cvx 1 /add cvx /store cvx
		] cvx
		bind
			_image_ 
		sSave restore
	} bd
	} ifelse
} if
level2? not
{
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		colorimage? 
		{
			expandCMYK
		} if
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bwFill
	{
		setSSave
		/cDataLen 8 store
		/cData currentgray makeByte store
		bwImage
		sSave restore
	} bd
	/c1ImgFill
	{
		setSSave
		/cDataLen 8 store
		setImgSpace
		spotColor?
		{
			spotDict begin
				spot1 begin
					currentCustomColor makeByte /tintImage exch def
					/name exch def
					/spot_K exch def
					/spot_Y exch def
					/spot_M exch def
					/spot_C exch def
			 end
				spot2 initSpotData
		 end
		} if
		currentcmykcolor
		4
		{
			makeByte 4 1 roll
		} repeat
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bFill
	noImg
	{
		{
			_fill
		}
	}
	{
		{
			color?
			{
				c1ImgFill
			}
			{
				bwFill
			} ifelse
		}
	} ifelse
	bd
} if
composite?
{
	/bCFun
	{
		color?
		{
			cyData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			mgData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			yeData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			cData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			spotColor?
			{
				spotDict begin
					/spotDict cvx /begin cvx
					spot1 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
					spot2 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/spotDict cvx
				/nsetcustomcolor cvx
			}
			{
				/setcmykcolor cvx
			} ifelse
		}
		{
			cData /ndx cvx /get cvx
			d255 /exch cvx /get cvx
			/setgray cvx
		} ifelse
	} bd
	/Bc
	{
		newpath
		gsave
		setBSpace
		nColors 1 eq
		{
			pop pop
			setCStop
		} if
		bFill
		grestore
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			linImg
		}
		{
			bFill
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		_fill
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			_fill
			blend? bHi? or
			{
				rdBlend
			} if
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/cGetRData
	{
		setCStop
		/blend?
		cData type /stringtype eq
		dup not color? and
		{
			pop
			cyData type /stringtype eq
			mgData type /stringtype eq
			yeData type /stringtype eq
			or or
		} if
		store
	} def
	/cGetRData
} if
/eCStop
{
	mark
	1 index 3 mul 3 add dup 8 gt
	{
		pop 8
	} if
	1 roll
	cleartomark
} bd
composite? not
{
	/knockOut
	level2?
	{
		{
			0 0 0 0 setcmykcolor _fill
		}
	}
	{
		/bFill noImg
		{
			{
				_fill
			}
		}
		{
			{
				_of true eq
				{
					currentgray 1 ne
					{
						bwFill
					} if
				}
				{
					bwFill
				} ifelse
			}
		} ifelse
		def
		/whiteByte 1 makeByte def
		noImg
		{
			{
				0 0 0 0 setcmykcolor _fill
			}
		}
		{
			{
				cBType 0 eq
				{
					setSSave
					/cData whiteByte store
					/cDataLen 8 store
					bwImage
					sSave restore
				}
				{
					_fill
				} ifelse
			}
		} ifelse
	} ifelse
	bd
	/bCFun
	{
		cData dup type /stringtype ne
		{
			color?
			{
				1 exch sub
			} if
		}
		{
			/ndx cvx /get cvx
			color? customColor? not and
			{
				d255-
			}
			{
				d255
			} ifelse
			/exch cvx /get cvx
		} ifelse
		/_setgray_ cvx
	} bd
	/eCCBlend
	{
		dup 3 eq
		{
			pop
			mark 7 1 roll
			6 copy ccThrough? dup /blend? xs
			{
				/startC? true store
				setCustomColor
				customColor?
				{
					/cData tint1Data store
					setCDataLen
				} if
				/endC?
				3 index 3 eq
				{
					4 index 1 ne
				}
				{
					false
				} ifelse
				store
			} if
			cleartomark
			stop
		} if
		1 eq
		{
			pop pop pop
		} if
		pop
		/startC? false store
		6
		{
			8 index
		} repeat
		ccThrough? dup /blend? xs
		{
			/endC? true store
			blend? not
			{
				stop
			} if
			customColor?
			{
				/cData tint1Data store
				setCDataLen
			} if
		} if
	} bd
	/handleOP
	{
		_of not
		{
			knockOut
		} if
	} bd
	/handleROP
	{
		_of not
		{
			0 0 0 0 setcmykcolor _fill
		}
		{
			newpath	
		} ifelse
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		blend? 
		{
			_fill
		}
		{
			handleROP
		} ifelse
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			blend?
			{
				cData type /stringtype ne bHi? not and
				{
					cData color?
					{
						1 exch sub
					} if
					_setgray_ 
					_fill_ 
				}
				{
					cData type /stringtype ne
					{
						/cDataLen 1 store
						/bDataLen 1 store
					} if
					rdBlend
				} ifelse
			}
			{
				
				handleROP
				
				pTState?
				{
					/bAxis rampPoint endPoint sub store
					xHi bAxis mul yHi bAxis mul translate
				} if
			} ifelse
				
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/ccThrough?
	{
		gsave
		pop 0 setCustomColor
		currentcmykcolor
		grestore
		anyColor?
	} bd
	/forceCMYK
	{
		exch pop
		1 exch sub 5 1 roll
		4
		{
			4 index mul 4 1 roll
		} repeat
		0
		cCMYKData dup /cData ne
		{
			dup /yeData eq
			{
				pop 1 add
			}
			{
				/mgData eq
				{
					2
				}
				{
					3
				} ifelse
				add
			} ifelse
			0
		} if
		pop
		index
		0 eq
		{
			pop pop pop pop 0 0 0 0
		} if
		setcmykcolor
		pop
		/fCMYK? true store
	} bd
	/endCapSepBc
	{
		pop pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				colorType 1 eq
				{
					forceCMYK
				}
				{
					fCMYK?
					{
						forceCMYK
					}
					{
						setCustomColor
					} ifelse
				} ifelse
			} ifelse
		} ifelse
		currentcmykcolor anyColor? 
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
		
	} bd
} if
/cCMYKData 0 def
composite? dup not
{
	pop customColor?
} if
not
{
	/cCMYKData
	/cyData /mgData /yeData /cData
	black? not
	{
		yellow?
		{
			exch
		}
		{
			magenta?
			{
				3
			}
			{
				4
			} ifelse
			-1 roll
		} ifelse
	} if
	4 1 roll pop pop pop
	store
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			
			blend? currentcmykcolor anyColor? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cCMYKData load dup type /stringtype eq
			{
				dup length /cDataLen xs
				/cData xs
				gsave
				colorType 0 ne noImg not and
				{
					invertXfer
				} if
				linImg
				grestore
			}
			{
				pop bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/cmykGetRData
	{
		/fCMYK? false store
		blend?
		{
			{
				cmykDataProcs colorType get exec
			} stopped
			pop
			blend?
			{
				/cData cCMYKData load store
				setCDataLen
			} if
		} if
	} def
	/cmykDataProcs
	[
	{
		pop
		black? dup /blend? xs
		{
			setgray
			0
		} if
		pop
	}
	{
		cCMYKData load dup type /stringtype ne
		{
			0 0 0
			cyan? not
			{
				4 magenta?
				{
					1
				}
				{
					yellow?
					{
						2
					}
					{
						3
					} ifelse
				} ifelse
				roll
			} if
			4 copy add add add 0 eq
			{
				/blend? false store
			} if
			
			setcmykcolor
			/startC? true store
			/endC? true store
			eCStop
			stop
		} if
		pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				forceCMYK
			} ifelse
		} ifelse
	} bind
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			black?
			{
				setgray
			}
			{
				0 0 0 4 -1 roll 1 exch sub setcmykcolor
			} ifelse
			black?
			{
				/blend? true store
			} if
			6
			{
				8 index
			} repeat
			ccThrough?
			{
				/blend? true store
			}
			{
				black?
				{
					/cData tint1Data store
					setCDataLen
				}
				{
					/blend? false store
				} ifelse
			} ifelse
		}
		{
			mark 7 1 roll
			6 copy ccThrough?
			{
				forceCMYK
				pop
				stop
			} if
			9 index 0 eq
			{
				black? dup /blend? xs
				{
					pop 1 setgray
					/cData tint2Data store
					setCDataLen
					0
				} if
				pop
			}
			{
				/blend?
				6
				{
					16 index
				} repeat
				ccThrough?
				store
				blend?
				{
					forceCMYK
				} if
			} ifelse
			cleartomark
		} ifelse
	} bind
	] def
	/cmykGetRData
} if
composite? dup not
{
	pop isCMYKSep?
} if
not
{
	/endCapSepBc
	{
		/white? false store
		pop pop
		dup 0 eq
		{
			pop
			/white? 1 index 1 eq store
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				setCustomColor
			} ifelse
		} ifelse
%
		currentcmykcolor anyColor?
		endC? or
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
	} bd
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			blend? startC? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cData type /stringtype eq
			{
				linImg
			}
			{
				bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/discardCMY
	{
		counttomark 4 add -3 roll pop pop pop
	} bd
	/testTopCC
	{
		6 copy ccThrough?
	} bd
	/getCRamp
	{
		{
			ccDataProcs colorType 2 sub get exec
		} stopped pop
		blend? cDataLen 0 eq and
		{
			/cDataLen bDataLen store
		} if
	} bd
	/ccGetRData
	{
		/fCMYK? false store
		/startC? false store
		/endC? false store
		colorType 2 lt
		{
			/blend? false def
		} if
		blend?
		{
			getCRamp
		}
		{
			setCStop
		} ifelse
		blend?
		{
			/blend? cData 1 ne store
			blend?
			{
				cData dup type /stringtype ne
				{
					1 exch sub /cData xs 0
				} if
				pop
			} if
		} if
	} def
	/ccDataProcs
	[
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			/blend? false store
			pop
		}
		{
			mark 7 1 roll
			testTopCC
			{
				/blend? 1 index 1 ne store
				/startC? blend? store
				/endC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint1Data store
				setCDataLen
				setCustomColor
				pop
				stop
			} if
			cleartomark
		} ifelse
		2 index 0 eq
		{
			/blend? false store
		}
		{
			mark 6
			{
				9 index
			} repeat
			testTopCC dup /blend? xs
			{
				/blend? 1 index 1 ne store
				/endC? blend? store
				/startC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint2Data store
				setCDataLen
			} if
			cleartomark
		} ifelse
	} bind
	] def
	/ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
	/cDataLen 0 cData dup type /stringtype eq
	{
		length exch
	} if
	pop store
} bd
/initSpotData
{
 begin
		/name null def
		/tintImage null def
		/tintValue null def
		/spot_C  null def
		/spot_M  null def
		/spot_Y  null def
		/spot_K  null def
 end
} bd
/getRData
{
	/colorType gMark store
	_compositeSpotDevice 0 ne
	{
		spotDict begin
			spot1 initSpotData
			spot2 initSpotData
	 end
		/spotColor? colorType 2 eq colorType 3 eq or def
	} 
	{
		/spotColor? false store
	} ifelse
	/blend? true store
	0 0 0 0 setcmykcolor
	100 div /rampPoint xs
% (between 13 and 87%) 
	100 div /midPoint xs
	dup 0 eq
	{
		2
	}
	{
		dup 1 eq
		{
			5
		}
		{
			_compositeSpotDevice 0 ne
			{
				spotDict begin
					spot1 begin
						/name 3 index def
						/spot_K 4 index def
						/spot_Y 5 index def
						/spot_M 6 index def
						/spot_C 7 index def
				 end
			 end
			} if
			7
		} ifelse
	} ifelse
	/tmp exch def
	tmp index 100 div /endPoint xs
	_compositeSpotDevice 0 ne
	{
		tmp 2 add index 3 eq
		{
			/tmp tmp 4 add def
			tmp index dup 
			spotDict begin
				spot1/name get ne
				{
					spot2 begin
						/name exch def
						/spot_K tmp 2 add index def
						/spot_Y tmp 3 add index def
						/spot_M tmp 4 add index def
						/spot_C tmp 5 add index def
				 end
				}
				{
					pop
				} ifelse
		 end
		} if
	} if
	/color? colorType 0 gt store
	
	colorType 3 eq
	{
		/tint2Data gMark store
	} if
	
	colorType 2 ge
	{
		/tint1Data gMark store
	} if
	_compositeSpotDevice 0 ne
	{
		spotDict begin
		
			colorType 2 ge
			{
				colorType 3 eq
				{
					spot2 begin
						/tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
						name null eq {/name /Black def} if
				 end
				} if
				spot1 begin
					/tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
					colorType 2 eq 
					{
						name null eq 
						{
							/name spot2/name get def
							spot2/name null put
						} if
					}
					{
						name null eq {/name /Black def} if
					} ifelse
			 end
			} if
	 end
	} if
	
	/cData gMark store
	setCDataLen
	colorType 0 gt
	{
		counttomark 4 add -3 roll
		/yeData xs
		/mgData xs
		/cyData xs
	} if
	blend?
	{
		/bDataLen
		cDataLen dup 0 eq color? and
		{
			[
			cyData mgData yeData
			]
			{
				dup type /stringtype eq
				{
					length exch pop exit
				} if
				pop
			} forall
		} if
		store
		bDataLen 0 eq
		{
			/bDataLen 1 store
		} if
		getData
		blend?
		{
			composite? cDataLen 0 eq and
			{
				/cDataLen bDataLen store
			} if
		} if
	}
	{
		setCStop
	} ifelse
} bd
/Bg
{
	0 0 0 0 setcmykcolor
	6
	{
		pop
	} repeat
	/blendLength xs
	pop pop pop
	/cBName xs
	/bRender xs
	bRender 2 ne
	{
		composite? not
		{
			_of setoverprint
		} if
		_eo {eoclip} {clip} ifelse
		_bn cBName 2 copy known
		{
			get
			mark exch aload pop
			/cBType xs
			/nColors xs
			mark exch aload pop
			0 0
		} if
		pop pop
		getRData
		cBType 0 eq
		{
			/linealBm
		}
		{
			bHi?
			{
				/pTState? nColors 2 gt store
			} if
			/doBlend /rdBlend load store
			/rdBm
		} ifelse
	}
	{
		inLine? not
		{
			mark mark
		} if
		/Bc dup
		{
			cleartomark mark
		} bd
		/nullProc
	} ifelse
	load /Bm xs
} bd
/linImg
noImg
{
	{
		newpath doRctBlend
	}
}
{
	{
		/doBlend
		color? composite? and
		{
			/bCImg
		}
		{
			/bwImage
		} ifelse
		load
		store
	
		0 0 moveto
		tRectOK? composite? and
		{
			{
				mark
				0 1 dtransform atan cvi 90 mod 0 eq
				1 0 dtransform atan cvi 90 mod 0 eq
			} stopped
			{
				cleartomark
			}
			{
				and exch pop
				{
					newpath
					doRctBlend
				}
				{
					doBlend
				} ifelse
			} ifelse
		}
		{
			doBlend
		} ifelse
	} 
} ifelse
bd
/doRctBlend
{
	gsave
	/sInc 1 store
	/nSamples bDataLen store
	/bInc 1 bDataLen div store
	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
	/pChange ubAxis 0 eq
	{
		0
	}
	{
		bDataLen ubAxis div
	} ifelse
	store
	pChange .5 gt noImg not and dup /optimize? xs
	{
		/nSamples ubAxis 2 div round cvi dup 1 le
		{
			pop 2
		} if
		store
		/bInc 1 nSamples div store
		/sInc bDataLen 1 sub nSamples 1 sub div store
	} if
	0
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	/rectfill where dup
	{
		exch pop _compositeSpotDevice 1 ne and
	} if
	{
		0 0 bInc 1 /rectfill cvx	
	}
	{
		0 0 /moveto cvx
		bInc 0 /lineto cvx
		bInc 1 /lineto cvx
		0 1 /lineto cvx
		/closepath cvx
		/_fill_ cvx
	} ifelse
	bInc 0 /translate cvx
	sInc /add cvx
	] cvx
	bind
	repeat
	pop
	spotColor? {nsetcustomcolorend} if
	
	grestore
} bd
/rdPrep
{
	/nSamples bDataLen dup 0 eq
	{
		pop 1
	} if
	store
	/sInc -1 store
	/bAxis rampPoint endPoint sub store
	/bInc bAxis bDataLen div neg store
	/optimize? false store
	tRectOK?
	{
		/ubAxis
		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		2 copy lt
		{
			exch
		} if
		pop store
		/pChange ubAxis 0 eq
		{
			0
		}
		{
			bDataLen ubAxis div
		} ifelse
		store
		pChange .5 gt noImg not and dup /optimize? xs
		{
			/nSamples ubAxis 2 div round cvi dup 1 le
			{
				pop 2
			} if
			store
			/bInc bAxis nSamples div neg store
			/sInc bDataLen 1 sub nSamples 1 sub div neg store
		} if
	} if
	bHi?
	{
		/xBCInc xHi bAxis mul nSamples div store
		/yBCInc yHi bAxis mul nSamples div store
	} if
} bd
/rdBlend
{
	newpath
	gsave
	rdPrep
	rampPoint
	bDataLen 1 sub
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
	/exch cvx bInc /add cvx /exch cvx
	sInc /add cvx
	bHi?
	{
		xBCInc yBCInc /translate cvx
	} if
	] cvx
	bind
	repeat
	pop pop
	spotColor? {nsetcustomcolorend} if
	grestore
	pTState?
	{
		xHi bAxis mul yHi bAxis mul translate
	} if
} bd
/Bh
{
	pop pop
	/pTState? false store
	2 copy 0 ne exch 0 ne or dup /bHi? xs
	{
		/yHi xs
		/xHi xs
		0 0
	} if
	pop pop
} bd
/BD
{
	inLine? not
	{
		] nColors cBType
		] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
	3 -1 roll dup nullString eq dup
	{
		setSSave
	} if
	/inLine? exch def
	/cBName exch def
	/nColors exch def
	/cBType exch def
} bd
/Bb
{
	sSave null eq
	{
		Adobe_blend_AI5_vars begin
		setSSave
	} if
	composite?
	{
		/_fill /fill load store
	}
	{
		/__fill /fill load store
			/_fill
			{
				_of true eq
				{
					currentgray 1 ne
					{
						__fill
					} if
				}
				{
					__fill
				} ifelse
			} def
	} ifelse
	/fill
	{
	} def
	} bd
	/BB
	{
	/cBType xs
	cleartomark cleartomark
	cBType dup
	bRender
	sSave dup type /savetype eq
	{
		restore 0
	} if
	pop
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
	} if
	2 ne exch 0 gt and
	{
		2 eq
		{
			s
		}
		{
			S
		} ifelse
	}
	{
		pop newpath
	} ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Verdana
Adobe_level2_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI3_BeginEncoding: _Verdana Verdana
[/_Verdana/Verdana 0 0 0 TZ%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
1 Bn
%AI5_BeginGradient: (Unnamed gradient 1)
(Unnamed gradient 1) 0 2 Bd
[
0
0
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
1 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 k
Pc
1 1 1 1 k
Pc
Pc
Pc
Pc
Pc
Pc
0 0 0 0.8 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 0 1 0 0 0 79 128 255 Lb
(background) Ln
1 A
0 A
1 Ap
0 O
0 0 0 0.8 k
0 J 0 j 1 w 4 M []0 d3627 -387 m
36.0005 -387 L
36.0005 -36 L
3627 -36 L
3627 -387 L
f0 0 0 0.1 k
387.0005 -747 m
36.0005 -747 L
36.0005 -396 L
387.0005 -396 L
387.0005 -747 L
f747.0005 -747 m
396.0005 -747 L
396.0005 -396 L
747.0005 -396 L
747.0005 -747 L
f1107.0005 -747 m
756.0005 -747 L
756.0005 -396 L
1107.0005 -396 L
1107.0005 -747 L
f1467.0005 -747 m
1116.0005 -747 L
1116.0005 -396 L
1467.0005 -396 L
1467.0005 -747 L
f1827.0005 -747 m
1476.0005 -747 L
1476.0005 -396 L
1827.0005 -396 L
1827.0005 -747 L
f2187 -747 m
1836.0005 -747 L
1836.0005 -396 L
2187 -396 L
2187 -747 L
f2547 -747 m
2196 -747 L
2196 -396 L
2547 -396 L
2547 -747 L
f2907 -747 m
2556 -747 L
2556 -396 L
2907 -396 L
2907 -747 L
f3267 -747 m
2916 -747 L
2916 -396 L
3267 -396 L
3267 -747 L
f3627 -747 m
3276 -747 L
3276 -396 L
3627 -396 L
3627 -747 L
f387.0005 -1107 m
36.0005 -1107 L
36.0005 -756 L
387.0005 -756 L
387.0005 -1107 L
f747.0005 -1107 m
396.0005 -1107 L
396.0005 -756 L
747.0005 -756 L
747.0005 -1107 L
f1107.0005 -1107 m
756.0005 -1107 L
756.0005 -756 L
1107.0005 -756 L
1107.0005 -1107 L
f1467.0005 -1107 m
1116.0005 -1107 L
1116.0005 -756 L
1467.0005 -756 L
1467.0005 -1107 L
f1827.0005 -1107 m
1476.0005 -1107 L
1476.0005 -756 L
1827.0005 -756 L
1827.0005 -1107 L
f2187 -1107 m
1836.0005 -1107 L
1836.0005 -756 L
2187 -756 L
2187 -1107 L
f2547 -1107 m
2196 -1107 L
2196 -756 L
2547 -756 L
2547 -1107 L
f2907 -1107 m
2556 -1107 L
2556 -756 L
2907 -756 L
2907 -1107 L
f3267 -1107 m
2916 -1107 L
2916 -756 L
3267 -756 L
3267 -1107 L
f3627 -1107 m
3276 -1107 L
3276 -756 L
3627 -756 L
3627 -1107 L
f387.0005 -1467 m
36.0005 -1467 L
36.0005 -1116 L
387.0005 -1116 L
387.0005 -1467 L
f747.0005 -1467 m
396.0005 -1467 L
396.0005 -1116 L
747.0005 -1116 L
747.0005 -1467 L
f1107.0005 -1467 m
756.0005 -1467 L
756.0005 -1116 L
1107.0005 -1116 L
1107.0005 -1467 L
f1467.0005 -1467 m
1116.0005 -1467 L
1116.0005 -1116 L
1467.0005 -1116 L
1467.0005 -1467 L
f1827.0005 -1467 m
1476.0005 -1467 L
1476.0005 -1116 L
1827.0005 -1116 L
1827.0005 -1467 L
f2187 -1467 m
1836.0005 -1467 L
1836.0005 -1116 L
2187 -1116 L
2187 -1467 L
f2547 -1467 m
2196 -1467 L
2196 -1116 L
2547 -1116 L
2547 -1467 L
f2907 -1467 m
2556 -1467 L
2556 -1116 L
2907 -1116 L
2907 -1467 L
f3267 -1467 m
2916 -1467 L
2916 -1116 L
3267 -1116 L
3267 -1467 L
f3627 -1467 m
3276 -1467 L
3276 -1116 L
3627 -1116 L
3627 -1467 L
f387.0005 -1827 m
36.0005 -1827 L
36.0005 -1476 L
387.0005 -1476 L
387.0005 -1827 L
f747.0005 -1827 m
396.0005 -1827 L
396.0005 -1476 L
747.0005 -1476 L
747.0005 -1827 L
f1107.0005 -1827 m
756.0005 -1827 L
756.0005 -1476 L
1107.0005 -1476 L
1107.0005 -1827 L
f1467.0005 -1827 m
1116.0005 -1827 L
1116.0005 -1476 L
1467.0005 -1476 L
1467.0005 -1827 L
f1827.0005 -1827 m
1476.0005 -1827 L
1476.0005 -1476 L
1827.0005 -1476 L
1827.0005 -1827 L
f2187 -1827 m
1836.0005 -1827 L
1836.0005 -1476 L
2187 -1476 L
2187 -1827 L
f2547 -1827 m
2196 -1827 L
2196 -1476 L
2547 -1476 L
2547 -1827 L
f2907 -1827 m
2556 -1827 L
2556 -1476 L
2907 -1476 L
2907 -1827 L
f3267 -1827 m
2916 -1827 L
2916 -1476 L
3267 -1476 L
3267 -1827 L
f3627 -1827 m
3276 -1827 L
3276 -1476 L
3627 -1476 L
3627 -1827 L
f387.0005 -2187 m
36.0005 -2187 L
36.0005 -1836 L
387.0005 -1836 L
387.0005 -2187 L
f747.0005 -2187 m
396.0005 -2187 L
396.0005 -1836 L
747.0005 -1836 L
747.0005 -2187 L
f1107.0005 -2187 m
756.0005 -2187 L
756.0005 -1836 L
1107.0005 -1836 L
1107.0005 -2187 L
f1467.0005 -2187 m
1116.0005 -2187 L
1116.0005 -1836 L
1467.0005 -1836 L
1467.0005 -2187 L
f1827.0005 -2187 m
1476.0005 -2187 L
1476.0005 -1836 L
1827.0005 -1836 L
1827.0005 -2187 L
f2187 -2187 m
1836.0005 -2187 L
1836.0005 -1836 L
2187 -1836 L
2187 -2187 L
f2547 -2187 m
2196 -2187 L
2196 -1836 L
2547 -1836 L
2547 -2187 L
f2907 -2187 m
2556 -2187 L
2556 -1836 L
2907 -1836 L
2907 -2187 L
f3267 -2187 m
2916 -2187 L
2916 -1836 L
3267 -1836 L
3267 -2187 L
f3627 -2187 m
3276 -2187 L
3276 -1836 L
3627 -1836 L
3627 -2187 L
fLB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 0 1 0 0 2 79 255 79 Lb
(eps_numbers) Ln
1 A
0 A
0 To
1 0 0 1 36 -414 0 Tp
TP
0 Tr
0 O
0 0 0 0.8 k
0 J 0 j 1 w 4 M []0 d/_Verdana 12 Tf
0 Ts
100 Tz
-50 Tt
1 TA
%_ 0 XL
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 0 Tl
-0.6 Tc
0 Tw
(001) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 396 -414 0 Tp
TP
0 Tr
(002) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 756 -414 0 Tp
TP
0 Tr
(003) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 1116 -414 0 Tp
TP
0 Tr
(004) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 1476 -414 0 Tp
TP
0 Tr
(005) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 1836 -414 0 Tp
TP
0 Tr
(006) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 2196 -414 0 Tp
TP
0 Tr
(007) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 2556 -414 0 Tp
TP
0 Tr
(008) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 2916 -414 0 Tp
TP
0 Tr
(009) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 3276 -414 0 Tp
TP
0 Tr
(010) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 3276 -774 0 Tp
TP
0 Tr
(020) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 3276 -1134 0 Tp
TP
0 Tr
(030) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 3276 -1494 0 Tp
TP
0 Tr
(040) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 3276 -1854 0 Tp
TP
0 Tr
(050) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 2916 -1854 0 Tp
TP
0 Tr
(049) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 2556 -1854 0 Tp
TP
0 Tr
(048) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 2196 -1854 0 Tp
TP
0 Tr
(047) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 1836.0005 -1854 0 Tp
TP
0 Tr
(046) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 1476.0005 -1854 0 Tp
TP
0 Tr
(045) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 1116.0005 -1854 0 Tp
TP
0 Tr
(044) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 756.0005 -1854 0 Tp
TP
0 Tr
(043) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 396.0005 -1854 0 Tp
TP
0 Tr
(042) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 36.0005 -1854 0 Tp
TP
0 Tr
(041) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 2916 -1494 0 Tp
TP
0 Tr
(039) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 2556 -1494 0 Tp
TP
0 Tr
(038) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 2196 -1494 0 Tp
TP
0 Tr
(037) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 1836.0005 -1494 0 Tp
TP
0 Tr
(036) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 1476.0005 -1494 0 Tp
TP
0 Tr
(035) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 1116.0005 -1494 0 Tp
TP
0 Tr
(034) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 756.0005 -1494 0 Tp
TP
0 Tr
(033) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 396.0005 -1494 0 Tp
TP
0 Tr
(032) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 36.0005 -1494 0 Tp
TP
0 Tr
(031) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 2916 -1134 0 Tp
TP
0 Tr
(029) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 2556 -1134 0 Tp
TP
0 Tr
(028) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 2196 -1134 0 Tp
TP
0 Tr
(027) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 1836.0005 -1134 0 Tp
TP
0 Tr
(026) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 1476.0005 -1134 0 Tp
TP
0 Tr
(025) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 1116.0005 -1134 0 Tp
TP
0 Tr
(024) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 756.0005 -1134 0 Tp
TP
0 Tr
(023) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 396.0005 -1134 0 Tp
TP
0 Tr
(022) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 36.0005 -1134 0 Tp
TP
0 Tr
(021) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 2916 -774 0 Tp
TP
0 Tr
(019) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 2556 -774 0 Tp
TP
0 Tr
(018) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 2196 -774 0 Tp
TP
0 Tr
(017) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 1836.0005 -774 0 Tp
TP
0 Tr
(016) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 1476.0005 -774 0 Tp
TP
0 Tr
(015) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 1116.0005 -774 0 Tp
TP
0 Tr
(014) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 756.0005 -774 0 Tp
TP
0 Tr
(013) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 396.0005 -774 0 Tp
TP
0 Tr
(012) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 36.0005 -774 0 Tp
TP
0 Tr
(011) Tx 1 0 Tk
(\r) TX 
TO
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 0 1 0 0 1 255 79 79 Lb
(ywft_info) Ln
1 A
0 A
u0 Ap
0 O
0.8 0 0 0 k
0 J 0 j 1 w 4 M []0 d405 -180 m
432 -180 L
432 -160.1182 415.8828 -144 396 -144 C
396 -171 L
400.9707 -171 405 -175.0293 405 -180 C
f0 0 0 0.2 k
495 -175.501 m
495 -144 L
468 -144 L
468 -175.5 L
468 -175.5 L
468 -195.3828 484.1172 -211.5 504 -211.5 C
504 -184.501 L
499.0293 -184.501 495 -180.4717 495 -175.501 C
f463.5 -144 m
436.5 -144 L
436.5 -175.501 L
436.5 -180.4717 432.4707 -184.501 427.5 -184.501 C
396 -184.501 L
396 -211.5 L
427.5 -211.5 L
447.3828 -211.5 463.5 -195.3828 463.5 -175.5 C
463.5 -175.5 L
463.5 -144 L
f652.5 -144 m
679.5 -144 L
679.5 -175.501 L
679.5 -180.4717 683.5293 -184.501 688.5 -184.501 C
720 -184.501 L
720 -211.5 L
688.5 -211.5 L
668.6172 -211.5 652.5 -195.3828 652.5 -175.5 C
652.5 -175.5 L
652.5 -144 L
f580.5 -211.5 m
607.5 -211.5 L
607.5 -180 L
607.5 -175.0293 611.5293 -171 616.5 -171 C
648 -171 L
648 -144 L
616.5 -144 L
596.6172 -144 580.5 -160.1182 580.5 -180 C
580.5 -180 L
580.5 -211.5 L
f531 -175.501 m
531 -144 L
504 -144 L
504 -175.5 L
504 -175.5 L
504 -195.3828 520.1172 -211.5 540 -211.5 C
540 -184.501 L
535.0293 -184.501 531 -180.4717 531 -175.501 C
f567 -175.501 m
567 -144 L
540 -144 L
540 -175.5 L
540 -175.5 L
540 -195.3828 556.1172 -211.5 576 -211.5 C
576 -184.501 L
571.0293 -184.501 567 -180.4717 567 -175.501 C
f612 -211.5 m
648 -211.5 L
648 -184.5 L
612 -184.5 L
612 -211.5 L
f684 -144 m
684 -171 L
720 -171 L
720 -144 L
684 -144 L
fU0 To
1 0 0 1 396 -297 0 Tp
TP
0 Tr
/_Verdana 12 Tf
0 Ts
100 Tz
-50 Tt
1 TA
%_ 0 XL
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 0 Tl
-0.6 Tc
0 Tw
(Y) Tx 1 63 Tk
(ouW) Tx 1 49 Tk
(orkF) Tx 1 24 Tk
(orThem \(100%=91pt.\)) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 396 -72 0 Tp
TP
0 Tr
0 0 0 0.6 k
/_Verdana 11 Tf
-0.55 Tc
(YWF) Tx 1 -15 Tk
(T) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 1476 -297 0 Tp
TP
0 Tr
0 0 0 0.2 k
/_Verdana 12 Tf
-0.6 Tc
(E0029) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 1476 -72 0 Tp
TP
0 Tr
0 0 0 0.6 k
/_Verdana 11 Tf
-0.55 Tc
(YWF) Tx 1 -15 Tk
(T) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 1836.0005 -297 0 Tp
TP
0 Tr
0 0 0 0.2 k
/_Verdana 12 Tf
-0.6 Tc
(Arrows) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 1836.0005 -72 0 Tp
TP
0 Tr
0 0 0 0.6 k
/_Verdana 11 Tf
-0.55 Tc
(YWF) Tx 1 -15 Tk
(T) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 2196 -297 0 Tp
TP
0 Tr
0 0 0 0.2 k
/_Verdana 12 Tf
-0.6 Tc
(03) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 2196 -72 0 Tp
TP
0 Tr
0 0 0 0.6 k
/_Verdana 11 Tf
-0.55 Tc
(YWF) Tx 1 -15 Tk
(T) Tx 1 0 Tk
(\r) TX 
TO
u0.8 0 0 0 k
398.25 -2241 m
405 -2241 L
405 -2236.0293 400.9707 -2232 396 -2232 C
396 -2238.75 L
397.2422 -2238.75 398.25 -2239.7568 398.25 -2241 C
f0 0 0 0.8 k
420.75 -2239.875 m
420.75 -2232 L
414 -2232 L
414 -2239.875 L
414 -2239.875 L
414 -2244.8457 418.0293 -2248.875 423 -2248.875 C
423 -2242.125 L
421.7578 -2242.125 420.75 -2241.1182 420.75 -2239.875 C
f412.875 -2232 m
406.125 -2232 L
406.125 -2239.875 L
406.125 -2241.1182 405.1172 -2242.125 403.875 -2242.125 C
396 -2242.125 L
396 -2248.875 L
403.875 -2248.875 L
408.8457 -2248.875 412.875 -2244.8457 412.875 -2239.875 C
412.875 -2239.875 L
412.875 -2232 L
f460.125 -2232 m
466.875 -2232 L
466.875 -2239.875 L
466.875 -2241.1182 467.8828 -2242.125 469.125 -2242.125 C
477 -2242.125 L
477 -2248.875 L
469.125 -2248.875 L
464.1543 -2248.875 460.125 -2244.8457 460.125 -2239.875 C
460.125 -2239.875 L
460.125 -2232 L
f442.125 -2248.875 m
448.875 -2248.875 L
448.875 -2241 L
448.875 -2239.7568 449.8828 -2238.75 451.125 -2238.75 C
459 -2238.75 L
459 -2232 L
451.125 -2232 L
446.1543 -2232 442.125 -2236.0293 442.125 -2241 C
442.125 -2241 L
442.125 -2248.875 L
f429.75 -2239.875 m
429.75 -2232 L
423 -2232 L
423 -2239.875 L
423 -2239.875 L
423 -2244.8457 427.0293 -2248.875 432 -2248.875 C
432 -2242.125 L
430.7578 -2242.125 429.75 -2241.1182 429.75 -2239.875 C
f438.75 -2239.875 m
438.75 -2232 L
432 -2232 L
432 -2239.875 L
432 -2239.875 L
432 -2244.8457 436.0293 -2248.875 441 -2248.875 C
441 -2242.125 L
439.7578 -2242.125 438.75 -2241.1182 438.75 -2239.875 C
f450 -2248.875 m
459 -2248.875 L
459 -2242.125 L
450 -2242.125 L
450 -2248.875 L
f468 -2232 m
468 -2238.75 L
477 -2238.75 L
477 -2232 L
468 -2232 L
fU0 To
1 0 0 1 396 -2277 0 Tp
TP
0 Tr
/_Verdana 7 Tf
-0.35 Tc
(Y) Tx 1 63 Tk
(ouW) Tx 1 49 Tk
(orkF) Tx 1 24 Tk
(orThem \(25%=23pt.\)) Tx 1 0 Tk
(\r) TX 
TO
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 3 79 79 255 Lb
(eps_files) Ln
0 A
*u
0 O
0 0 0 0.8 k
0 J 0 j 1 w 4 M []0 d3531.1768 -1665.8696 m
3543.6445 -1699.8672 3555.3545 -1724.0327 3542.2119 -1732.2769 c
3530.6504 -1741.7471 3494.2373 -1735.2959 3446.9492 -1736.3672 c
3399.6582 -1735.3857 3363.4014 -1741.8403 3351.9482 -1732.3423 c
3338.9229 -1724.0723 3350.7031 -1699.8496 3363.166 -1665.8696 c
3377.3545 -1632.0239 3386.8506 -1604.7329 3399.2461 -1589.2305 c
3411.4336 -1573.1699 3426.5225 -1568.8975 3447.0762 -1568.2246 c
3467.6299 -1568.9395 3482.7715 -1573.209 3495.0049 -1589.2568 c
3507.4482 -1604.7471 3516.9844 -1632.0151 3531.1768 -1665.8696 C
f1 D
3376.8809 -1663.8242 m
3368.042 -1689.6064 3362.333 -1708.4688 3373.8477 -1716.7539 c
3384.3594 -1725.7212 3412.0938 -1724.1118 3446.9727 -1724.7031 c
3482.0576 -1724.0635 3509.8975 -1725.7002 3520.4551 -1716.7417 c
3532.0176 -1708.4707 3526.2969 -1689.6064 3517.4609 -1663.8242 c
3507.665 -1638.3105 3498.4766 -1616.4873 3487.4004 -1603.1953 c
3476.3633 -1589.5435 3463.4385 -1584.4224 3447.0791 -1584.0117 c
3430.8145 -1584.4023 3417.9365 -1589.5352 3406.9219 -1603.1904 c
3395.8682 -1616.4893 3386.6787 -1638.3101 3376.8809 -1663.8242 C
f0 D
3472.375 -1646.019 m
3475.4971 -1669.5117 3480.9209 -1691.7393 3488.6465 -1712.7002 C
3469.418 -1696.001 3456.6602 -1681.373 3447.0527 -1666.3232 C
3437.499 -1681.3779 3424.8125 -1696.0186 3405.7012 -1712.6992 C
3413.4258 -1691.7383 3418.8486 -1669.5117 3421.9697 -1646.019 C
3432.4961 -1629.6592 3439.7686 -1613.8945 3447.0801 -1596.8848 C
3454.4551 -1613.9023 3461.7793 -1629.6592 3472.375 -1646.019 C
f1 D
3430.5459 -1649.0088 m
3429.5225 -1659.8428 3428.1641 -1670.374 3426.4697 -1680.5996 C
3435.0205 -1669.9063 3441.5527 -1659.541 3447.0654 -1648.8838 C
3452.6357 -1659.54 3459.2344 -1669.9014 3467.873 -1680.5996 C
3466.1797 -1670.373 3464.8203 -1659.8428 3463.7969 -1649.0088 C
3457.1973 -1638.0928 3451.9619 -1627.2617 3447.0781 -1615.9653 C
3442.2539 -1627.2578 3437.0752 -1638.0942 3430.5459 -1649.0088 C
f*U
*u
0 D
79.05 -2033.4385 m
85.5583 -2017.001 92.0662 -2000.5635 98.5745 -1984.127 C
135.2498 -1974.877 167.0569 -1958.8965 192.6555 -1938.9395 C
193.0374 -1934.5371 193.4192 -1930.1338 193.801 -1925.7314 C
198.2888 -1926.1201 202.7854 -1926.3799 207.2854 -1926.5098 C
206.7756 -1944.1787 206.2659 -1961.8486 205.7566 -1979.5176 C
171.9197 -2005.0693 128.866 -2024.6299 79.05 -2033.4385 C
f82.6184 -2091.1143 m
81.2346 -2095.3115 79.8513 -2099.5078 78.4675 -2103.7041 C
70.4666 -2101.0664 62.5232 -2098.1885 54.6487 -2095.0703 C
59.5281 -2082.7451 64.408 -2070.4209 69.2878 -2058.0957 C
121.9983 -2050.4316 168.0979 -2031.4863 204.9919 -2006.0215 C
204.6096 -2019.2744 204.2278 -2032.5273 203.8455 -2045.7813 C
169.2664 -2066.8887 128.343 -2082.9189 82.6184 -2091.1143 C
f222.3118 -1979.5176 m
221.802 -1961.8486 221.2922 -1944.1787 220.7825 -1926.5098 C
225.28 -1926.3799 229.7742 -1926.1201 234.26 -1925.7314 C
234.6418 -1930.1348 235.0237 -1934.5371 235.4055 -1938.9404 C
261.0056 -1958.8975 292.8152 -1974.8779 329.4934 -1984.127 C
336.0012 -2000.5635 342.509 -2017.001 349.0168 -2033.4385 C
299.2014 -2024.6299 256.1487 -2005.0693 222.3118 -1979.5176 C
f349.5964 -2103.7061 m
348.2126 -2099.5088 346.8293 -2095.3125 345.4456 -2091.1162 C
299.7224 -2082.9199 258.8005 -2066.8896 224.2229 -2045.7813 C
223.8406 -2032.5283 223.4583 -2019.2744 223.0759 -2006.0215 C
259.97 -2031.4863 306.0696 -2050.4316 358.7795 -2058.0957 C
363.6594 -2070.4209 368.5393 -2082.7461 373.4192 -2095.0703 C
365.5432 -2098.1895 357.5989 -2101.0674 349.5964 -2103.7061 C
f*U
*u
u1 D
1014.3706 -2056.0195 m
1032.5313 -2042.4541 1050.6924 -2032.7158 1068.853 -2014.7236 C
1050.6924 -1996.7266 1032.5313 -1986.9873 1014.3706 -1973.4189 C
941.7271 -1974.8818 869.0835 -1923.627 796.4399 -1960.2383 C
814.6001 -1969.415 832.7612 -1992.3359 850.9214 -2014.7256 C
832.7612 -2037.1113 814.6001 -2060.0273 796.4399 -2069.1982 C
869.0835 -2105.8096 941.7271 -2054.5547 1014.3706 -2056.0195 C
f0 D
869.082 -2014.7256 m
875.1367 -2007.2773 881.1919 -2000.0156 887.2466 -1993.1738 C
929.6211 -1995.5469 971.9961 -2001.2402 1014.3706 -2000.9551 C
1014.3706 -2028.4883 L
971.9961 -2028.2041 929.6211 -2033.9004 887.2466 -2036.2725 C
881.1919 -2029.4316 875.1367 -2022.1719 869.082 -2014.7256 C
fUu1 D
905.4053 -1947.4619 m
941.7271 -1965.7676 978.0483 -1940.1396 1014.3706 -1940.8711 C
1023.4507 -1934.0898 1032.5313 -1929.2197 1041.6118 -1920.2246 C
1032.5313 -1911.2256 1023.4507 -1906.3555 1014.3706 -1899.5713 C
978.0483 -1900.3037 941.7271 -1874.6758 905.4053 -1892.9814 C
914.4854 -1897.5693 923.5659 -1909.0303 932.646 -1920.2246 C
923.5659 -1931.418 914.4854 -1942.875 905.4053 -1947.4619 C
f0 D
950.8086 -1909.4492 m
971.9956 -1910.6357 993.1831 -1913.4824 1014.3706 -1913.3398 C
1014.3706 -1927.1064 L
993.1831 -1926.9639 971.9956 -1929.8125 950.8086 -1930.999 C
947.7813 -1927.5771 944.7534 -1923.9482 941.7261 -1920.2246 C
944.7534 -1916.501 947.7813 -1912.8701 950.8086 -1909.4492 C
fUu1 D
905.4053 -2081.9756 m
914.4854 -2086.5625 923.5659 -2098.0244 932.646 -2109.2188 C
923.5659 -2120.4121 914.4854 -2131.8691 905.4053 -2136.4551 C
941.7271 -2154.7607 978.0483 -2129.1338 1014.3706 -2129.8652 C
1023.4507 -2123.083 1032.5313 -2118.2139 1041.6118 -2109.2178 C
1032.5313 -2100.2197 1023.4507 -2095.3486 1014.3706 -2088.5654 C
978.0483 -2089.2969 941.7271 -2063.6699 905.4053 -2081.9756 C
f0 D
1014.3706 -2116.1006 m
993.1831 -2115.957 971.9956 -2118.8066 950.8086 -2119.9922 C
947.7813 -2116.5713 944.7534 -2112.9424 941.7261 -2109.2188 C
944.7534 -2105.4941 947.7813 -2101.8643 950.8086 -2098.4424 C
971.9956 -2099.6289 993.1831 -2102.4756 1014.3706 -2102.334 C
1014.3706 -2116.1006 L
fU*U
*u
1 D
504.3804 -1993.585 m
644.0625 -1993.585 L
644.0625 -2021.5278 L
699.9282 -1965.6519 L
644.0625 -1909.7759 L
644.0625 -1937.7163 L
504.3804 -1937.7163 L
448.5073 -1993.585 L
448.5073 -2049.4624 L
476.4492 -2021.5278 L
504.3804 -1993.585 L
f644.0557 -2035.8521 m
504.373 -2035.8521 L
504.373 -2007.9092 L
448.5073 -2063.7852 L
504.373 -2119.6611 L
504.373 -2091.7207 L
644.0557 -2091.7207 L
699.9282 -2035.8521 L
699.9282 -1979.9746 L
671.9868 -2007.9092 L
644.0557 -2035.8521 L
f*U
*u
1654.9326 -1191.2158 m
1605.4534 -1231.4756 1560.3625 -1284.7734 1524.1008 -1347.7861 C
1530.3152 -1348.7275 1536.5701 -1349.9473 1542.8479 -1351.4385 C
1560.512 -1342.7637 1578.9387 -1336.2578 1597.7468 -1331.9209 C
1603.8176 -1326.0244 1609.9958 -1320.3525 1616.2695 -1314.916 C
1622.1436 -1296.0898 1628.3096 -1277.4668 1634.7588 -1259.0762 C
1628.1104 -1264.0537 1621.543 -1269.2793 1615.0723 -1274.7471 C
1608.468 -1275.751 1601.8923 -1277.0059 1595.3616 -1278.5117 C
1614.1572 -1256.1914 1634.1416 -1235.9492 1654.9326 -1218.0557 C
1675.7246 -1235.9482 1695.709 -1256.1914 1714.5068 -1278.5127 C
1707.9746 -1277.0068 1701.3994 -1275.751 1694.7949 -1274.7471 C
1688.3232 -1269.2793 1681.7559 -1264.0537 1675.1084 -1259.0762 C
1681.5566 -1277.4658 1687.7236 -1296.0889 1693.5977 -1314.916 C
1699.8711 -1320.3535 1706.0498 -1326.0244 1712.1211 -1331.9209 C
1730.9297 -1336.2588 1749.3555 -1342.7646 1767.0195 -1351.4395 C
1773.2969 -1349.9482 1779.5508 -1348.7275 1785.7646 -1347.7861 C
1749.5029 -1284.7734 1704.4121 -1231.4756 1654.9326 -1191.2158 C
f1692.6895 -1319.2695 m
1679.3462 -1330.126 1666.6509 -1342.8945 1654.9326 -1357.2832 C
1643.2148 -1342.8945 1630.5195 -1330.126 1617.1768 -1319.2695 C
1592.4368 -1339.3994 1569.8914 -1366.0488 1551.7605 -1397.5547 C
1554.8677 -1398.0254 1557.9951 -1398.6357 1561.134 -1399.3809 C
1569.9661 -1395.0439 1579.1794 -1391.791 1588.5833 -1389.6221 C
1591.6189 -1386.6738 1594.7083 -1383.8379 1597.845 -1381.1191 C
1600.7815 -1371.707 1603.865 -1362.3955 1607.0891 -1353.2002 C
1603.7649 -1355.6885 1600.4817 -1358.3018 1597.2463 -1361.0352 C
1593.9441 -1361.5371 1590.6565 -1362.165 1587.3909 -1362.918 C
1596.7888 -1351.7578 1606.781 -1341.6357 1617.1768 -1332.6895 C
1627.5723 -1341.6357 1637.5645 -1351.7578 1646.9629 -1362.918 C
1643.6973 -1362.165 1640.4102 -1361.5371 1637.1074 -1361.0352 C
1633.8721 -1358.3018 1630.5879 -1355.6885 1627.2646 -1353.2002 C
1630.4883 -1362.3945 1633.5723 -1371.7061 1636.5088 -1381.1201 C
1636.7041 -1381.2891 1636.895 -1381.4683 1637.0898 -1381.6387 C
1633.6958 -1386.7959 1630.4141 -1392.0972 1627.2734 -1397.5547 C
1630.3799 -1398.0254 1633.5078 -1398.6357 1636.6465 -1399.3809 C
1642.5879 -1396.4634 1648.7051 -1394.0483 1654.9331 -1392.1123 C
1661.1616 -1394.0483 1667.2783 -1396.4639 1673.2197 -1399.3818 C
1676.3584 -1398.6357 1679.4854 -1398.0254 1682.5928 -1397.5547 C
1679.4521 -1392.0967 1676.1704 -1386.7954 1672.7764 -1381.6377 C
1672.9707 -1381.4678 1673.1621 -1381.2881 1673.3574 -1381.1191 C
1676.2939 -1371.707 1679.3779 -1362.3955 1682.6016 -1353.2002 C
1679.2773 -1355.6885 1675.9941 -1358.3018 1672.7588 -1361.0352 C
1669.457 -1361.5371 1666.1689 -1362.165 1662.9033 -1362.918 C
1672.3018 -1351.7578 1682.2939 -1341.6357 1692.6895 -1332.6895 C
1703.085 -1341.6357 1713.0771 -1351.7578 1722.4756 -1362.918 C
1719.21 -1362.165 1715.9229 -1361.5371 1712.6201 -1361.0352 C
1709.3848 -1358.3018 1706.1006 -1355.6885 1702.7773 -1353.2002 C
1706.001 -1362.3945 1709.085 -1371.7061 1712.0215 -1381.1201 C
1715.1582 -1383.8389 1718.248 -1386.6738 1721.2832 -1389.6221 C
1730.6875 -1391.791 1739.9004 -1395.0439 1748.7324 -1399.3818 C
1751.8711 -1398.6357 1754.998 -1398.0254 1758.1055 -1397.5547 C
1739.9746 -1366.0488 1717.4287 -1339.3994 1692.6895 -1319.2695 C
f*U
*u
2969.6445 -1599.7939 m
2968.6445 -1593.9707 2968.1445 -1588.0645 2968.1445 -1582.0752 C
2959.1416 -1588.1016 2950.1377 -1594.7979 2941.1357 -1602.1641 C
2941.1357 -1611.167 2943.5811 -1620.1689 2948.4707 -1629.1719 C
2990.0381 -1625.1221 3031.7715 -1641.3701 3061.6689 -1658.5713 C
3063.3359 -1664.9248 3065.1699 -1671.0469 3067.1709 -1676.9365 C
3055.167 -1671.5 3040.6631 -1666.3867 3024.3252 -1662.54 C
3048.4424 -1677.8301 3069.3926 -1694.7236 3081.1738 -1709.499 C
3085.7305 -1714.4404 3088.6768 -1719.1982 3089.6758 -1723.6982 c
3084.6758 -1701.1914 3081.0645 -1672.4854 3078.8408 -1637.5791 C
3048.6113 -1617.7314 3008.2109 -1598.4902 2969.6445 -1599.7939 C
f3211.2109 -1582.0762 m
3211.2109 -1588.0664 3210.7109 -1593.9727 3209.7109 -1599.7959 C
3171.1445 -1598.4912 3130.7441 -1617.7324 3100.5137 -1637.5791 C
3098.29 -1672.4854 3094.6777 -1701.1914 3089.6758 -1723.6982 c
3090.6768 -1719.1982 3093.6221 -1714.4404 3098.1787 -1709.499 C
3109.96 -1694.7236 3130.9102 -1677.8301 3155.0273 -1662.54 C
3138.6895 -1666.3867 3124.1855 -1671.5 3112.1816 -1676.9365 C
3114.1826 -1671.0469 3116.0166 -1664.9248 3117.6836 -1658.5713 C
3147.5811 -1641.3701 3189.3145 -1625.1221 3230.8818 -1629.1719 C
3235.7725 -1620.1689 3238.2178 -1611.167 3238.2178 -1602.1641 C
3229.2148 -1594.7979 3220.2139 -1588.1025 3211.2109 -1582.0762 C
f*U
0 D
1307.9578 -2028.3857 m
1270.322 -2070.1348 1230.7146 -2102.082 1177.7415 -2106.9053 c
1193.5344 -2115.0664 1209.3274 -2122.4189 1225.1204 -2128.9629 c
1300.6028 -2122.6797 1355.7166 -2073.8213 1411.4929 -2026.249 c
1411.3181 -2018.5586 1411.3181 -2010.8682 1411.4929 -2003.1777 c
1355.7175 -1955.6094 1300.6028 -1906.7549 1225.1204 -1900.4736 c
1209.3274 -1907.0186 1193.5344 -1914.3711 1177.7415 -1922.5313 c
1230.7146 -1927.3545 1270.322 -1959.3008 1307.9578 -2001.0479 c
1269.9924 -2002.0273 1231.2 -2003.623 1191.5808 -2005.834 c
1191.7537 -2011.7568 1191.7537 -2017.6787 1191.5808 -2023.6006 c
1231.2 -2025.8115 1269.9924 -2027.4063 1307.9578 -2028.3857 C
f*u
1 D
0.2 g
150.7874 -1213.9814 m
150.7874 -1322.4053 L
150.7874 -1352.3447 175.0579 -1376.6162 204.9993 -1376.6162 C
204.9993 -1268.1934 L
204.9993 -1238.252 180.7288 -1213.9814 150.7874 -1213.9814 C
f223.0696 -1268.1934 m
223.0696 -1376.6162 L
253.01 -1376.6162 277.2805 -1352.3447 277.2805 -1322.4053 C
277.2805 -1213.9814 L
247.3401 -1213.9814 223.0696 -1238.252 223.0696 -1268.1934 C
f*U
0 D
0.2 g
628.4292 -1241.0879 m
628.4292 -1295.2998 L
598.4878 -1295.2998 574.2173 -1319.5693 574.2173 -1349.5107 c
574.2173 -1319.5693 549.9468 -1295.2998 520.0063 -1295.2998 C
520.0063 -1241.0879 L
520.0063 -1211.1465 495.7358 -1186.876 465.7944 -1186.876 C
465.7944 -1241.0879 L
465.7944 -1295.2998 L
465.7944 -1325.2393 490.0649 -1349.5107 520.0063 -1349.5107 C
520.0063 -1379.4521 544.2769 -1403.7217 574.2173 -1403.7217 c
604.1587 -1403.7217 628.4292 -1379.4521 628.4292 -1349.5107 C
658.3706 -1349.5107 682.6411 -1325.2393 682.6411 -1295.2998 C
682.6411 -1241.0879 L
682.6411 -1186.876 L
652.6997 -1186.876 628.4292 -1211.1465 628.4292 -1241.0879 C
f*u
1 D
0 0 0 0.8 k
574.2183 -1695.9077 m
574.2183 -1674.3975 L
509.6858 -1609.8652 L
445.1538 -1674.3975 L
445.1538 -1695.9077 L
509.6858 -1631.376 L
574.2183 -1695.9077 L
f509.6858 -1545.3325 m
445.1538 -1609.8652 L
445.1538 -1631.376 L
509.6858 -1566.8442 L
509.6858 -1545.3325 L
f638.7498 -1663.6411 m
638.7498 -1642.1309 L
574.2183 -1706.6631 L
509.6858 -1642.1309 L
509.6858 -1663.6411 L
574.2183 -1728.1738 L
638.7498 -1663.6411 L
f574.2183 -1642.1309 m
509.6858 -1577.5996 L
509.6858 -1599.1099 L
574.2183 -1663.6411 L
638.7498 -1599.1099 L
703.282 -1663.6411 L
703.282 -1642.1309 L
638.7498 -1577.5996 L
574.2183 -1642.1309 L
f574.2183 -1771.1943 m
574.2183 -1792.7061 L
638.7498 -1728.1738 L
703.282 -1792.7061 L
703.282 -1771.1943 L
638.7498 -1706.6631 L
574.2183 -1771.1943 L
f638.7498 -1545.3325 m
638.7498 -1566.8442 L
703.282 -1631.376 L
703.282 -1609.8652 L
638.7498 -1545.3325 L
f638.7498 -1513.0669 m
574.2183 -1577.5996 L
574.2183 -1599.1099 L
638.7498 -1534.5776 L
638.7498 -1513.0669 L
f638.7498 -1695.9077 m
703.282 -1760.439 L
703.282 -1738.9287 L
638.7498 -1674.3975 L
638.7498 -1695.9077 L
f*U
*u
0.2 g
79.8069 -1059.9653 m
199.0457 -1059.9653 L
199.0457 -970.519 L
139.4675 -1000.3096 L
139.4675 -940.6538 L
199.0457 -881.0757 L
199.0457 -821.3428 L
79.8069 -821.3428 L
79.8069 -1059.9653 L
f228.8738 -821.3428 m
228.8738 -880.998 L
228.9509 -880.998 L
288.6082 -940.6538 L
288.6082 -1000.3096 L
228.948 -970.4819 L
228.8738 -970.4819 L
228.8738 -1059.9653 L
348.261 -1059.9653 L
348.261 -821.3428 L
228.8738 -821.3428 L
f*U
*u
0 0 0 0.8 k
140.4634 -571.0845 m
140.4634 -548.4473 L
140.4634 -523.4434 160.7334 -503.1729 185.7375 -503.1729 C
197.0562 -503.1729 L
219.6931 -480.5356 L
197.0562 -457.8989 L
185.7375 -457.8989 L
135.7285 -457.8989 95.189 -498.4385 95.189 -548.4473 C
95.189 -571.0845 L
117.8262 -548.4473 L
140.4634 -571.0845 L
f208.3745 -650.314 m
185.7375 -650.314 L
160.7334 -650.314 140.4634 -630.0449 140.4634 -605.04 C
140.4634 -593.7212 L
117.8262 -571.0845 L
95.189 -593.7212 L
95.189 -605.04 L
95.189 -655.0498 135.7285 -695.5884 185.7375 -695.5884 C
208.3745 -695.5884 L
185.7375 -672.9512 L
208.3745 -650.314 L
f287.6045 -582.4028 m
287.6045 -605.04 L
287.6045 -630.0449 267.3335 -650.314 242.3303 -650.314 C
231.0117 -650.314 L
208.3745 -672.9512 L
231.0117 -695.5884 L
242.3303 -695.5884 L
292.3384 -695.5884 332.8787 -655.0498 332.8787 -605.04 C
332.8787 -582.4028 L
310.2417 -605.04 L
287.6045 -582.4028 L
f242.3303 -457.8989 m
219.6931 -457.8989 L
242.3303 -480.5356 L
219.6931 -503.1729 L
242.3303 -503.1729 L
267.3335 -503.1729 287.6045 -523.4434 287.6045 -548.4473 C
287.6045 -559.7656 L
310.2417 -582.4028 L
332.8787 -559.7656 L
332.8787 -548.4473 L
332.8787 -498.4385 292.3384 -457.8989 242.3303 -457.8989 C
f*U
*u
637.0991 -589.3188 m
637.0991 -617.1021 614.5776 -639.6235 586.7944 -639.6235 C
586.7944 -664.7759 L
586.7944 -689.9282 L
642.3608 -689.9282 687.4028 -644.8853 687.4028 -589.3188 C
662.2505 -564.1665 L
637.0991 -589.3188 L
f561.6421 -513.8638 m
561.6421 -488.7114 L
561.6421 -463.5591 L
506.0747 -463.5591 461.0327 -508.6021 461.0327 -564.1685 C
486.1851 -589.3208 L
511.3374 -564.1685 L
511.3374 -536.3853 533.8589 -513.8638 561.6421 -513.8638 C
f511.3374 -589.3208 m
486.1851 -589.3208 L
461.0327 -589.3208 L
461.0327 -644.8853 506.0747 -689.9302 561.6421 -689.9302 C
586.7944 -664.7759 L
561.6421 -639.6255 L
533.8589 -639.6255 511.3374 -617.1021 511.3374 -589.3208 C
f637.0991 -564.1665 m
662.2505 -564.1665 L
687.4028 -564.1665 L
687.4028 -508.6021 642.3608 -463.5571 586.7944 -463.5571 C
561.6421 -488.7114 L
586.7944 -513.8618 L
614.5776 -513.8618 637.0991 -536.3853 637.0991 -564.1665 C
f*U
*u
925.7297 -638.9966 m
895.1682 -638.9966 870.3945 -614.2207 870.3945 -583.6616 C
842.7271 -611.3291 L
815.0593 -583.6616 L
815.0593 -644.7822 864.6067 -694.332 925.7297 -694.332 C
953.3972 -666.6621 L
925.7297 -638.9966 L
f870.3945 -569.8276 m
870.3945 -539.2661 895.1682 -514.4927 925.7297 -514.4927 C
898.062 -486.825 L
925.7297 -459.1575 L
864.6067 -459.1575 815.0593 -508.7046 815.0593 -569.8276 C
842.7271 -597.4951 L
870.3945 -569.8276 L
f994.8987 -583.6616 m
994.8987 -614.2231 970.125 -638.9966 939.5635 -638.9966 C
967.231 -666.6641 L
939.5635 -694.332 L
1000.6865 -694.332 1050.2339 -644.7847 1050.2339 -583.6616 C
1022.5662 -555.9939 L
994.8987 -583.6616 L
f939.5635 -514.4905 m
970.125 -514.4905 994.8987 -539.2661 994.8987 -569.8257 C
1022.5662 -542.1611 L
1050.2339 -569.8257 L
1050.2339 -508.7046 1000.6865 -459.1553 939.5635 -459.1553 C
911.896 -486.825 L
939.5635 -514.4905 L
f*U
*u
0.2 g
155.3269 -1635.2744 m
190.5515 -1576.5674 L
159.4231 -1581.7549 L
184.6804 -1541.3428 L
155.3269 -1547.2139 L
125.9734 -1541.3428 L
151.2307 -1581.7549 L
120.1023 -1576.5674 L
155.3269 -1635.2744 L
f214.0339 -1576.5674 m
143.5857 -1693.9814 L
205.8423 -1683.6055 L
155.3269 -1764.4297 L
214.0339 -1752.6885 L
272.741 -1764.4297 L
222.2256 -1683.6055 L
284.4822 -1693.9814 L
214.0339 -1576.5674 L
f272.741 -1635.2744 m
307.9656 -1576.5674 L
276.8372 -1581.7549 L
302.0945 -1541.3428 L
272.741 -1547.2139 L
243.3875 -1541.3428 L
268.6448 -1581.7549 L
237.5164 -1576.5674 L
272.741 -1635.2744 L
f*U
*u
0 0 0 0.8 k
932.6455 -1319.4951 m
1029.4307 -1416.2803 L
932.6455 -1271.1035 L
835.8623 -1416.2803 L
932.6455 -1319.4951 L
f932.6455 -1174.3174 m
787.4688 -1416.2803 L
932.6455 -1222.7119 L
1077.8242 -1416.2803 L
932.6455 -1174.3174 L
f932.6455 -1222.7119 m
811.6641 -1416.2803 L
932.6455 -1271.1035 L
1053.627 -1416.2803 L
932.6455 -1222.7119 L
f932.6455 -1367.8887 m
1005.2354 -1416.2803 L
932.6455 -1319.4951 L
860.0576 -1416.2803 L
932.6455 -1367.8887 L
f*U
*u
0.2 g
1008.9653 -946.5249 m
938.5171 -946.5249 L
938.5171 -1016.9731 L
985.4829 -1063.939 L
985.4829 -993.4897 L
1055.9312 -993.4897 L
1008.9653 -946.5249 L
f997.2241 -864.3345 m
950.2583 -817.3687 L
950.2583 -887.8179 L
879.8101 -887.8179 L
879.8101 -958.2661 L
809.3618 -958.2661 L
856.3276 -1005.2319 L
926.7759 -1005.2319 L
926.7759 -934.7827 L
997.2241 -934.7827 L
997.2241 -864.3345 L
f*U
*u
644.666 -940.6543 m
574.2178 -940.6543 L
574.2178 -1011.1025 L
621.1836 -1058.0684 L
621.1836 -987.6191 L
691.6318 -987.6191 L
644.666 -940.6543 L
f644.666 -870.2051 m
597.7002 -823.2393 L
527.252 -823.2393 L
527.252 -893.6885 L
456.8037 -893.6885 L
456.8037 -964.1367 L
503.7695 -1011.1025 L
503.7695 -940.6543 L
574.2178 -940.6543 L
574.2178 -870.2051 L
644.666 -870.2051 L
f*U
*u
0 0 0 0.8 k
855.9775 -1566.3584 m
806.5322 -1541.6367 L
831.2556 -1739.415 L
855.9775 -1764.1367 L
880.6992 -1739.415 L
905.4211 -1541.6367 L
855.9775 -1566.3584 L
f932.6458 -1541.6367 m
907.9238 -1566.3584 L
883.2021 -1764.1367 L
932.6458 -1739.415 L
982.0911 -1764.1367 L
957.3691 -1566.3584 L
932.6458 -1541.6367 L
f1009.3157 -1566.3584 m
959.8721 -1541.6367 L
984.5938 -1739.415 L
1009.3157 -1764.1367 L
1034.0374 -1739.415 L
1058.761 -1541.6367 L
1009.3157 -1566.3584 L
f*U
*u
0.2 g
1294.6162 -454.9956 m
1227.3779 -454.9956 1172.8701 -509.5054 1172.8701 -576.7437 c
1172.8701 -643.9839 1227.3779 -698.4917 1294.6162 -698.4917 c
1361.8564 -698.4917 1416.3643 -643.9839 1416.3643 -576.7437 c
1416.3643 -509.5054 1361.8564 -454.9956 1294.6162 -454.9956 c
f0 D
1294.6162 -556.4526 m
1355.4912 -515.8706 L
1294.6162 -597.0347 L
1233.7432 -515.8706 L
1294.6162 -556.4526 L
f1294.6162 -657.9097 m
1213.4521 -515.8706 L
1294.6162 -617.3257 L
1375.7822 -515.8706 L
1294.6162 -657.9097 L
f*U
*u
u1 D
0 0 0 0.8 k
1294.6172 -1500.332 m
1219.3613 -1575.5879 L
1219.3613 -1730.1855 L
1294.6172 -1805.4414 L
1369.873 -1730.1855 L
1369.873 -1575.5879 L
1294.6172 -1500.332 L
f0 D
1344.7871 -1600.6738 m
1294.6172 -1650.8438 L
1244.4453 -1600.6738 L
1244.4453 -1575.5879 L
1294.6172 -1525.418 L
1344.7871 -1575.5879 L
1344.7871 -1600.6738 L
fU1 D
1269.5313 -1575.5879 m
1269.5313 -1600.6738 L
1294.6172 -1625.7598 L
1319.7031 -1600.6738 L
1319.7031 -1575.5879 L
1294.6172 -1550.502 L
1269.5313 -1575.5879 L
f*U
*u
1604.761 -1677.9727 m
1604.761 -1703.0586 L
1654.9326 -1677.9727 L
1705.1025 -1703.0586 L
1705.1025 -1677.9727 L
1654.9326 -1652.8848 L
1604.761 -1677.9727 L
fu1654.9326 -1552.5449 m
1554.5911 -1602.7168 L
1554.5911 -1703.0586 L
1654.9326 -1753.2285 L
1755.2744 -1703.0586 L
1755.2744 -1602.7168 L
1654.9326 -1552.5449 L
f0 D
1730.1885 -1703.0586 m
1654.9326 -1728.1426 L
1579.677 -1703.0586 L
1579.677 -1602.7168 L
1654.9326 -1577.6309 L
1730.1885 -1602.7168 L
1730.1885 -1703.0586 L
fU1 D
1604.761 -1627.8047 m
1604.761 -1652.8906 L
1654.9326 -1627.8047 L
1705.1025 -1652.8906 L
1705.1025 -1627.8047 L
1654.9326 -1602.7168 L
1604.761 -1627.8047 L
f*U
*u
1881.7505 -1684.1064 m
1881.7505 -1716.9775 L
1947.4971 -1749.8496 L
2013.2417 -1716.9775 L
2013.2417 -1684.1064 L
1947.4971 -1716.9775 L
1881.7505 -1684.1064 L
f2081.3281 -1623.0088 m
2081.3281 -1589.4673 L
2014.2397 -1555.9233 L
1947.1538 -1589.4673 L
1947.1538 -1623.0088 L
2014.2397 -1589.4673 L
2081.3281 -1623.0088 L
f1881.7505 -1638.7388 m
1881.7505 -1671.6123 L
1947.4971 -1704.4858 L
2013.2417 -1671.6123 L
2013.2417 -1638.7388 L
1947.4971 -1671.6123 L
1881.7505 -1638.7388 L
f2080.9849 -1671.6123 m
2015.2388 -1638.7388 L
2015.2388 -1671.6123 L
2080.9849 -1704.4858 L
2146.729 -1671.6123 L
2146.729 -1638.7388 L
2080.9849 -1671.6123 L
f2081.3281 -1635.3594 m
2014.2397 -1601.8154 L
1947.1538 -1635.3594 L
1947.1538 -1668.9038 L
2014.2397 -1635.3594 L
2081.3281 -1668.9038 L
2081.3281 -1635.3594 L
f2015.2388 -1684.1064 m
2015.2388 -1716.9775 L
2080.9849 -1749.8496 L
2146.729 -1716.9775 L
2146.729 -1684.1064 L
2080.9849 -1716.9775 L
2015.2388 -1684.1064 L
f*U
0 D
2805.0054 -1533.5049 m
2805.0054 -1533.501 L
2770.8965 -1533.501 L
2770.8965 -1567.6133 L
2736.7847 -1601.7217 L
2702.6758 -1567.6133 L
2702.6758 -1533.501 L
2668.5674 -1533.501 L
2668.5674 -1533.5049 L
2634.4551 -1533.5049 L
2634.4551 -1601.7256 L
2668.5674 -1635.8374 L
2668.5674 -1704.0513 L
2736.7847 -1772.272 L
2805.0054 -1704.0513 L
2805.0054 -1635.8374 L
2839.1172 -1601.7256 L
2839.1172 -1533.5049 L
2805.0054 -1533.5049 L
f2511.7153 -1533.5044 m
2443.4946 -1533.5044 L
2443.4946 -1533.501 L
2409.3823 -1533.501 L
2409.3823 -1567.6133 L
2375.2739 -1601.7217 L
2341.1616 -1567.6133 L
2341.1616 -1533.501 L
2307.0532 -1533.501 L
2307.0532 -1533.5044 L
2238.8325 -1533.5044 L
2272.9409 -1567.6099 L
2238.8325 -1601.7251 L
2272.9409 -1635.8374 L
2307.0532 -1669.9424 L
2307.0532 -1704.0513 L
2375.2739 -1772.272 L
2443.4946 -1704.0513 L
2443.4946 -1669.9424 L
2477.603 -1635.8374 L
2511.7153 -1601.7251 L
2477.603 -1567.6099 L
2511.7153 -1533.5044 L
f*u
1 D
1647.7314 -555.1392 m
1546.9089 -655.9614 L
1546.9089 -670.3638 L
1561.3123 -684.7681 L
1748.5537 -684.7681 L
1762.957 -670.3638 L
1762.957 -655.9614 L
1662.1348 -555.1392 L
1647.7314 -555.1392 L
f1748.5537 -468.7192 m
1561.3123 -468.7192 L
1546.9089 -483.1216 L
1546.9089 -583.9458 L
1561.3123 -598.3481 L
1647.7314 -511.9282 L
1662.1348 -511.9282 L
1748.5537 -598.3481 L
1762.957 -583.9458 L
1762.957 -483.1216 L
1748.5537 -468.7192 L
f*U
*u
2035.8477 -569.5415 m
2035.8447 -655.9614 L
1992.6348 -655.9614 L
1992.6348 -569.5415 L
1978.2314 -569.5415 L
1906.2158 -641.5571 L
1906.2158 -670.3638 L
1920.6191 -684.7681 L
2107.8604 -684.7681 L
2122.2637 -670.3638 L
2122.2637 -641.5571 L
2050.251 -569.5454 L
2035.8477 -569.5415 L
f2107.8604 -468.7192 m
1920.6191 -468.7192 L
1906.2158 -483.1216 L
1906.2158 -583.9458 L
1920.6191 -598.3481 L
2007.0381 -511.9282 L
2021.4414 -511.9282 L
2107.8604 -598.3481 L
2122.2637 -583.9458 L
2122.2637 -483.1216 L
2107.8604 -468.7192 L
f*U
0 D
0.2 g
1359.7534 -1267.8848 m
1350.9106 -1259.041 L
1363.7163 -1259.041 1414.5825 -1259.041 Y
1391.5903 -1236.0488 L
1286.0776 -1236.0488 L
1301.8716 -1251.8418 1317.9136 -1267.8848 V
1294.6167 -1267.8848 L
1252.2896 -1267.8848 1239.4839 -1267.8848 V
1249.3794 -1257.9893 1303.1567 -1204.2119 Y
1183.1909 -1204.2119 L
1183.1909 -1211.2871 L
1271.5151 -1211.2871 1286.0776 -1211.2871 V
1276.1821 -1221.1826 1222.4058 -1274.959 Y
1294.6167 -1274.959 L
1307.896 -1274.959 1324.9888 -1274.959 V
1333.8315 -1283.8027 L
1294.6167 -1283.8027 L
1206.2925 -1283.8027 1191.73 -1283.8027 V
1201.6255 -1273.9072 1255.4019 -1220.1299 Y
1183.1909 -1220.1299 L
1183.1909 -1227.2051 L
1225.5181 -1227.2051 1238.3237 -1227.2051 V
1228.4282 -1237.1006 1174.6519 -1290.877 Y
1294.6167 -1290.877 L
1323.6587 -1290.877 1340.9067 -1290.877 V
1345.3276 -1295.2988 L
1340.9067 -1299.7207 L
1323.6587 -1299.7207 1294.6167 -1299.7207 Y
1174.6519 -1299.7207 L
1228.4282 -1353.4971 1238.3237 -1363.3926 V
1225.5181 -1363.3926 1183.1909 -1363.3926 Y
1183.1909 -1370.4678 L
1255.4019 -1370.4678 L
1201.6255 -1316.6904 1191.73 -1306.7949 V
1206.2925 -1306.7949 1294.6167 -1306.7949 Y
1333.8315 -1306.7949 L
1324.9888 -1315.6387 L
1307.896 -1315.6387 1294.6167 -1315.6387 Y
1222.4058 -1315.6387 L
1276.1821 -1369.415 1286.0776 -1379.3105 V
1271.5151 -1379.3105 1183.1909 -1379.3105 Y
1183.1909 -1386.3857 L
1303.1567 -1386.3857 L
1249.3794 -1332.6084 1239.4839 -1322.7129 V
1252.2896 -1322.7129 1294.6167 -1322.7129 Y
1317.9136 -1322.7129 L
1301.8716 -1338.7578 1286.0776 -1354.5488 Y
1391.5903 -1354.5488 L
1414.5825 -1331.5566 L
1363.7163 -1331.5566 1350.9106 -1331.5566 V
1359.7534 -1322.7129 L
1414.5825 -1322.7129 L
1401.5679 -1309.6982 1387.1685 -1295.2988 V
1401.5679 -1280.8994 1414.5825 -1267.8848 Y
1359.7534 -1267.8848 L
f*u
1 D
0 0 0 0.8 k
2310.7168 -444.1123 m
2277.5571 -444.1123 L
2244.4009 -477.2686 L
2244.4009 -543.5845 L
2277.5571 -576.7437 L
2244.4009 -609.8999 L
2244.4009 -676.2153 L
2277.5571 -709.375 L
2310.7168 -709.375 L
2410.1885 -609.8999 L
2410.1855 -576.7437 L
2410.1885 -543.5845 L
2310.7168 -444.1123 L
f2496.1489 -560.1641 m
2446.4126 -510.4282 L
2429.8335 -510.4282 L
2413.2554 -527.0063 L
2413.2554 -560.1641 L
2429.8335 -576.7437 L
2413.2554 -593.3218 L
2413.2554 -626.4795 L
2429.8335 -643.0591 L
2446.4126 -643.0591 L
2496.1489 -593.3218 L
2506.147 -576.7437 L
2496.1489 -560.1641 L
f*U
*u
2624.9033 -595.3909 m
2624.9033 -604.7146 L
2708.8154 -688.6257 L
2718.1396 -688.6257 L
2718.1396 -604.7136 L
2708.8154 -595.3909 L
2624.9033 -595.3909 L
f2755.4336 -688.6267 m
2848.6699 -688.6267 L
2848.6699 -595.3909 L
2755.4336 -595.3909 L
2755.4336 -688.6267 L
f2764.7578 -464.8606 m
2755.4336 -464.8606 L
2755.4336 -548.7732 L
2764.7578 -558.0955 L
2848.6699 -558.0955 L
2848.6699 -548.7722 L
2764.7578 -464.8606 L
f2624.9033 -558.0964 m
2718.1396 -558.0964 L
2718.1396 -464.8606 L
2624.9033 -464.8606 L
2624.9033 -558.0964 L
f*U
*u
u0.2 g
1270.5769 -908.7437 m
1269.8682 -908.3892 1185.4375 -866.1738 1182.3337 -864.6221 C
1180.1387 -866.8169 1163.084 -883.8721 1161.7903 -885.1655 C
1161.7903 -973.312 L
1163.1335 -974.6553 1182.2119 -993.7339 1183.1201 -994.6421 C
1184.4265 -994.9683 1268.6431 -1016.0234 1271.2927 -1016.686 C
1273.0625 -1014.916 1290.7993 -997.1777 1292.1101 -995.8667 C
1292.1101 -930.2769 L
1290.7542 -928.9209 1271.1191 -909.2856 1270.5769 -908.7437 C
f0 D
1249.5068 -974.3501 m
1204.3955 -974.3501 L
1204.3955 -929.2388 L
1226.9502 -906.6841 L
1249.5068 -929.2388 L
1249.5068 -974.3501 L
fUu1 D
1406.8989 -864.6221 m
1403.7952 -866.1738 1319.366 -908.3892 1318.6572 -908.7437 C
1318.1152 -909.2856 1298.4785 -928.9209 1297.1223 -930.2769 C
1297.1223 -995.8667 L
1298.4331 -997.1777 1316.1719 -1014.916 1317.9417 -1016.686 C
1320.5913 -1016.0234 1404.8062 -994.9683 1406.1123 -994.6421 C
1407.0205 -993.7339 1426.1008 -974.6553 1427.4441 -973.312 C
1427.4441 -885.1655 L
1426.1504 -883.8721 1409.0938 -866.8169 1406.8989 -864.6221 C
f0 D
1384.8389 -974.3501 m
1339.7275 -974.3501 L
1339.7275 -929.2388 L
1362.2822 -906.6841 L
1384.8389 -929.2388 L
1384.8389 -974.3501 L
fU*U
*u
1 D
0.2 g
1570.106 -1887.4785 m
1570.106 -2141.958 L
1739.7598 -2141.958 L
1739.7598 -1887.4785 L
1570.106 -1887.4785 L
f0 D
1612.52 -2093.4883 m
1594.3423 -2105.6055 L
1600.022 -2043.1201 L
1594.3423 -2045.0156 L
1612.52 -2008.6602 L
1630.6963 -2045.0156 L
1625.0166 -2043.1201 L
1630.6963 -2105.6055 L
1612.52 -2093.4883 L
f1667.0503 -2069.25 m
1648.874 -2105.6055 L
1630.6963 -2069.25 L
1636.3774 -2071.1455 L
1630.6963 -2008.6602 L
1648.874 -2020.7773 L
1667.0503 -2008.6602 L
1661.3701 -2071.1455 L
1667.0503 -2069.25 L
f*U
0.2 g
1634.7168 -819.354 m
1533.6331 -920.438 L
1594.2834 -981.0884 L
1594.2834 -920.438 L
1553.8499 -920.438 L
1634.7168 -839.5708 L
1634.7188 -839.5708 L
1715.5859 -920.438 L
1675.1523 -920.438 L
1675.1523 -1021.52 L
1594.2834 -1021.52 L
1634.7188 -1061.9536 L
1715.5859 -1061.9536 L
1715.5859 -960.8716 L
1776.2324 -960.8716 L
1634.7168 -819.354 L
f0.2 g
3100.4072 -463.4292 m
2958.7588 -463.4292 L
2958.7588 -690.0581 L
3100.4072 -690.0581 L
3100.4072 -543.5581 L
3180.5322 -623.6812 L
3220.5947 -623.6812 L
3220.5947 -583.6167 L
3100.4072 -463.4292 L
f0 0 0 0.8 k
2441.0684 -889.2754 m
2417.8096 -856.7573 2393.8896 -836.0327 2375.2744 -805.875 C
2356.6582 -836.0327 2332.7383 -856.7573 2309.4795 -889.2754 C
2316.4004 -888.8101 2323.3086 -888.3462 2330.1924 -887.7715 C
2321.5518 -944.1802 2316.126 -1005.5459 2319.4268 -1075.4331 C
2336.2725 -1044.1558 2355.1113 -1027.0308 2375.2744 -1016.979 C
2395.4375 -1027.0308 2414.2754 -1044.1592 2431.1201 -1075.4331 C
2434.4219 -1005.5459 2428.9961 -944.1802 2420.3555 -887.7715 C
2427.2393 -888.3462 2434.1465 -888.8101 2441.0684 -889.2754 C
f*u
1 D
2623.5713 -1039.1411 m
2651.167 -1033.0181 L
2657.29 -1060.6099 L
2721.7139 -959.4224 L
2726.3115 -914.9497 L
2687.9756 -937.9458 L
2623.5713 -1039.1411 L
f2827.7686 -911.1079 m
2789.4307 -888.1118 L
2794.0303 -932.5825 L
2858.4521 -1033.77 L
2864.5811 -1006.1685 L
2892.1729 -1012.3032 L
2827.7686 -911.1079 L
f2684.1592 -888.1118 m
2645.8213 -911.1079 L
2581.3994 -1012.3032 L
2609.0088 -1006.1685 L
2615.1357 -1033.77 L
2679.54 -932.5825 L
2684.1592 -888.1118 L
f2747.2588 -914.9497 m
2751.876 -959.4224 L
2816.2803 -1060.6099 L
2822.4053 -1033.0181 L
2850.0186 -1039.1411 L
2785.5967 -937.9458 L
2747.2588 -914.9497 L
f2776.7822 -860.6821 m
2776.7822 -838.5981 2758.8701 -820.6978 2736.792 -820.6978 c
2714.7021 -820.6978 2696.8076 -838.5981 2696.8076 -860.6821 c
2696.8076 -882.7661 2714.7021 -900.6665 2736.792 -900.6665 c
2758.8701 -900.6665 2776.7822 -882.7661 2776.7822 -860.6821 c
f*U
*u
2070.2905 -1368.9951 m
2070.2905 -1294.2607 L
2051.6069 -1275.5771 L
2051.6069 -1238.209 L
2032.9233 -1219.5254 L
2032.9233 -1200.8418 L
2014.2402 -1182.1572 L
1995.5552 -1200.8418 L
1995.5552 -1219.5254 L
1976.8721 -1238.209 L
1976.8721 -1275.5771 L
1958.1885 -1294.2607 L
1958.1885 -1368.9951 L
2014.2402 -1312.9434 L
2070.2905 -1368.9951 L
fu2072.3667 -1274.7178 m
2072.3667 -1273.0742 2072.3667 -1237.3486 Y
2054.8218 -1219.8047 2053.6831 -1218.666 V
2053.6831 -1217.1006 2053.6831 -1199.9824 Y
2014.2402 -1160.5381 L
2012.7715 -1162.0068 L
1974.7954 -1199.9824 L
1974.7954 -1217.1006 1974.7954 -1218.666 V
1973.6567 -1219.8047 1956.1123 -1237.3486 Y
1956.1123 -1273.0742 1956.1123 -1274.7178 V
1954.9736 -1275.8564 1937.4287 -1293.4004 Y
1937.4287 -1430.0596 L
2011.4175 -1356.0684 2014.2402 -1353.248 V
2017.061 -1356.0684 2091.0513 -1430.0596 Y
2091.0513 -1293.4004 L
2073.5073 -1275.8564 2072.3667 -1274.7178 V
f0 D
2086.8989 -1420.0352 m
2080.4683 -1413.6045 2014.2402 -1347.376 Y
1948.0117 -1413.6045 1941.5796 -1420.0352 V
1941.5796 -1295.1201 L
1942.7202 -1293.9814 1960.2646 -1276.4365 Y
1960.2646 -1240.7109 1960.2646 -1239.0684 V
1961.4038 -1237.9297 1978.9482 -1220.3848 Y
1978.9482 -1203.2656 1978.9482 -1201.7012 V
1980.0786 -1200.5693 2011.5752 -1169.0732 2014.2402 -1166.4092 C
2016.9038 -1169.0732 2048.3999 -1200.5732 2049.5308 -1201.7012 C
2049.5308 -1203.2656 2049.5308 -1220.3848 Y
2067.0747 -1237.9297 2068.2153 -1239.0684 V
2068.2153 -1240.7109 2068.2153 -1276.4365 Y
2085.7603 -1293.9814 2086.8989 -1295.1201 V
2086.8989 -1420.0352 L
fU1 D
2018.6431 -1327.2236 m
2016.21 -1324.792 2012.269 -1324.792 2009.8354 -1327.2236 C
1953.7856 -1383.2754 L
1951.3521 -1385.709 1951.3521 -1389.6504 1953.7856 -1392.083 c
1956.2173 -1394.5146 1960.1582 -1394.5146 1962.5918 -1392.083 C
2006.7627 -1347.9111 2014.2402 -1340.4346 V
2021.7163 -1347.9111 2065.8872 -1392.083 Y
2068.3208 -1394.5146 2072.2612 -1394.5146 2074.6948 -1392.083 c
2077.1265 -1389.6504 2077.1265 -1385.709 2074.6948 -1383.2754 C
2018.6431 -1327.2236 L
f*U
0 D
3003.416 -983.7837 m
3089.6758 -865.1763 l
3175.9365 -983.7837 l
3100.459 -929.8716 l
3165.1533 -1016.1313 l
3014.1982 -1016.1313 l
3078.8936 -929.8716 l
3003.416 -983.7837 l
f3360.8594 -994.5664 m
3447.1191 -854.3936 l
3533.3799 -994.5664 l
3457.9023 -940.6543 l
3522.5967 -1026.9141 l
3447.1191 -1005.3486 l
3371.6416 -1026.9141 l
3436.3369 -940.6543 l
3360.8594 -994.5664 l
f*u
1 D
2297.6172 -1275.8843 m
2297.6172 -1334.1274 L
2307.3232 -1324.4204 L
2317.0303 -1334.1274 L
2317.0303 -1275.8843 L
2307.3232 -1256.4702 L
2297.6172 -1275.8843 L
f2351.0049 -1275.8843 m
2351.0049 -1334.1274 L
2360.7129 -1324.4204 L
2370.4209 -1334.1274 L
2370.4209 -1275.8843 L
2360.7129 -1256.4702 L
2351.0049 -1275.8843 L
f2321.8838 -1275.8843 m
2321.8838 -1334.1274 L
2331.5908 -1324.4204 L
2341.2988 -1334.1274 L
2341.2988 -1275.8843 L
2331.5908 -1256.4702 L
2321.8838 -1275.8843 L
f2375.2734 -1275.8843 m
2375.2734 -1334.1274 L
2384.9814 -1324.4204 L
2394.6875 -1334.1274 L
2394.6875 -1275.8843 L
2384.9814 -1256.4702 L
2375.2734 -1275.8843 L
fu2375.2734 -1163.7124 m
2302.7178 -1163.7124 2243.6885 -1222.7437 2243.6885 -1295.2983 c
2243.6885 -1367.855 2302.7178 -1426.8853 2375.2734 -1426.8853 c
2447.8281 -1426.8853 2506.8594 -1367.855 2506.8594 -1295.2983 c
2506.8594 -1222.7437 2447.8281 -1163.7124 2375.2734 -1163.7124 c
f0 D
2375.2734 -1396.686 m
2319.3691 -1396.686 2273.8877 -1351.2046 2273.8877 -1295.2983 c
2273.8877 -1239.394 2319.3691 -1193.9126 2375.2734 -1193.9126 c
2431.1787 -1193.9126 2476.6592 -1239.394 2476.6592 -1295.2983 c
2476.6592 -1351.2046 2431.1787 -1396.686 2375.2734 -1396.686 c
fU*U
*u
1 D
2639.7139 -1353.542 m
2639.7139 -1372.9561 L
2678.543 -1372.9561 L
2678.543 -1353.542 L
2659.1289 -1334.1289 L
2639.7139 -1353.542 L
f2697.957 -1353.542 m
2697.957 -1372.9561 L
2775.6143 -1372.9561 L
2775.6143 -1353.542 L
2736.7861 -1314.7148 L
2697.957 -1353.542 L
f2814.4434 -1217.6416 m
2775.6143 -1256.4717 L
2736.7861 -1217.6416 L
2697.957 -1256.4717 L
2659.1289 -1217.6416 L
2600.8857 -1275.8848 L
2600.8857 -1353.542 L
2659.1289 -1295.2988 L
2697.957 -1334.1289 L
2736.7861 -1295.2988 L
2775.6143 -1334.1289 L
2814.4434 -1295.2988 L
2872.6865 -1353.542 L
2872.6865 -1275.8848 L
2814.4434 -1217.6416 L
f2795.0293 -1353.542 m
2795.0293 -1372.9561 L
2833.8574 -1372.9561 L
2833.8574 -1353.542 L
2814.4434 -1334.1289 L
2795.0293 -1353.542 L
f*U
*u
3440.1084 -680.3496 m
3382.9805 -680.3496 3336.502 -633.8716 3336.502 -576.7432 c
3336.502 -519.6157 3382.9805 -473.1377 3440.1084 -473.1377 C
3480.6807 -473.1377 3484.5869 -473.1377 V
3486.4111 -474.9619 3491.2129 -479.7646 3494.9473 -483.4985 C
3491.2129 -487.2314 3486.4111 -492.0337 3484.5869 -493.8594 C
3480.6807 -493.8594 3440.1084 -493.8594 Y
3394.4063 -493.8594 3357.2236 -531.042 3357.2236 -576.7432 c
3357.2236 -622.4453 3394.4063 -659.6279 3440.1084 -659.6279 c
3485.8096 -659.6279 3522.9941 -622.4453 3522.9941 -576.7432 C
3512.6328 -576.7432 L
3512.6328 -616.7324 3480.0967 -649.2671 3440.1084 -649.2671 c
3400.1191 -649.2671 3367.585 -616.7324 3367.585 -576.7432 c
3367.585 -536.7554 3400.1191 -504.2202 3440.1084 -504.2202 C
3488.877 -504.2202 L
3509.5967 -483.4985 L
3488.877 -462.7769 L
3440.1084 -462.7769 L
3377.2666 -462.7769 3326.1416 -513.9028 3326.1416 -576.7432 c
3326.1416 -639.585 3377.2666 -690.7104 3440.1084 -690.7104 c
3502.9492 -690.7104 3554.0752 -639.585 3554.0752 -576.7432 C
3543.7139 -576.7432 L
3543.7139 -633.8716 3497.2363 -680.3496 3440.1084 -680.3496 c
f3548.8945 -553.8779 m
3545.2324 -557.54 L
3533.3535 -569.4177 L
3517.8125 -553.8779 L
3514.1504 -557.54 L
3498.6094 -573.0806 L
3505.9346 -580.4067 L
3513.5322 -572.8076 3517.8125 -568.5288 V
3522.0928 -572.8076 3529.6904 -580.4067 Y
3533.3535 -576.7437 L
3537.0166 -580.4067 L
3544.6143 -572.8076 3548.8945 -568.5288 V
3553.1738 -572.8076 3560.7734 -580.4067 Y
3568.0977 -573.0806 L
3548.8945 -553.8779 L
f*U
*u
2139.2358 -1914.7207 m
2122.5703 -1898.0552 L
2005.9067 -1898.0552 L
1941.4761 -1898.0552 1889.2437 -1950.2876 1889.2437 -2014.7183 c
1889.2437 -2079.1475 1941.4761 -2131.3818 2005.9067 -2131.3818 c
2070.3359 -2131.3818 2122.5703 -2079.1475 2122.5703 -2014.7183 C
2122.5703 -1948.0522 L
2089.2373 -1948.0522 L
2089.2373 -2014.7183 L
2089.2373 -2060.7412 2051.9297 -2098.0488 2005.9067 -2098.0488 c
1959.8823 -2098.0488 1922.5752 -2060.7412 1922.5752 -2014.7183 c
1922.5752 -1968.6938 1959.8823 -1931.3867 2005.9067 -1931.3867 C
2122.5703 -1931.3867 L
2139.2358 -1914.7207 L
f1939.2422 -2014.7183 m
1939.2422 -2051.5366 1969.0869 -2081.3828 2005.9067 -2081.3828 c
2042.7251 -2081.3828 2072.5713 -2051.5366 2072.5713 -2014.7183 c
2072.5713 -1977.8984 2042.7251 -1948.0522 2005.9067 -1948.0522 c
1969.0869 -1948.0522 1939.2422 -1977.8984 1939.2422 -2014.7183 c
f*U
*u
3042.7773 -1339.7295 m
3057.5884 -1324.9189 L
3057.5884 -1384.1592 L
3087.208 -1354.5381 L
3087.208 -1295.2988 L
3072.3979 -1280.4893 L
3042.7773 -1339.7295 L
f3042.7773 -1310.1094 m
3042.7773 -1250.8672 L
3027.9673 -1236.0586 L
2998.3481 -1295.2988 L
3013.1577 -1280.4893 L
3013.1577 -1339.7295 L
3027.9668 -1324.9204 L
2998.3481 -1384.1592 L
3013.1577 -1369.3496 L
3013.1577 -1428.5898 L
3042.7773 -1398.9697 L
3042.7773 -1339.7295 L
3027.9678 -1324.9194 L
3042.7773 -1310.1094 L
f3121.7646 -1206.4385 m
3136.5757 -1221.248 L
3106.9551 -1162.0078 L
3092.145 -1176.8184 L
3092.145 -1265.6787 L
3121.7646 -1295.2988 L
3121.7646 -1206.4385 L
f3166.1953 -1339.7295 m
3166.1953 -1280.4893 L
3181.0049 -1295.2988 L
3151.3853 -1236.0586 L
3136.5757 -1250.8672 L
3136.5757 -1310.1094 L
3151.3853 -1324.9189 L
3136.5757 -1339.7295 L
3136.5757 -1398.9697 L
3166.1953 -1428.5898 L
3166.1953 -1369.3496 L
3181.0049 -1384.1592 L
3151.3857 -1324.9194 L
3166.1953 -1339.7295 L
f3042.7773 -1221.248 m
3057.5884 -1206.4385 L
3057.5884 -1295.2988 L
3087.208 -1265.6787 L
3087.208 -1176.8184 L
3072.3979 -1162.0078 L
3042.7773 -1221.248 L
f3092.145 -1295.2988 m
3092.145 -1354.5381 L
3121.7646 -1384.1592 L
3121.7646 -1324.9189 L
3136.5757 -1339.7295 L
3106.9551 -1280.4893 L
3092.145 -1295.2988 L
f*U
*u
3487.9312 -1222.8311 m
3495.3306 -1234.3975 L
3484.6958 -1192.3076 L
3473.1284 -1199.7051 L
3448.1509 -1313.4814 L
3462.9473 -1336.6074 L
3487.9312 -1222.8311 L
f3500.6479 -1255.4404 m
3489.0776 -1262.8398 L
3470.3462 -1348.1738 L
3485.1431 -1371.2998 L
3503.8833 -1285.9658 L
3511.2827 -1297.5322 L
3500.6479 -1255.4404 L
f3431.29 -1336.6074 m
3446.0952 -1313.4814 L
3421.1108 -1199.7051 L
3409.5498 -1192.3076 L
3398.9155 -1234.3975 L
3406.3145 -1222.8311 L
3431.29 -1336.6074 L
f3423.8926 -1348.1738 m
3405.1592 -1262.8398 L
3393.5981 -1255.4404 L
3382.9565 -1297.5322 L
3390.3628 -1285.9658 L
3409.0942 -1371.2998 L
3423.8926 -1348.1738 L
f3408.2944 -1398.29 m
3485.9517 -1398.29 L
3447.124 -1320.6309 L
3408.2944 -1398.29 L
f*U
*u
2102.1719 -849.9053 m
1904.9805 -1047.0967 L
1907.7974 -1049.9136 L
2104.9888 -852.7222 L
2102.1719 -849.9053 L
f2018.1724 -909.3174 m
2082.1533 -845.3379 L
2013.9478 -845.3379 L
2013.9478 -857.2896 L
2037.8501 -857.2896 2053.3022 -857.2896 V
2039.9043 -870.687 2009.7231 -900.8682 Y
2018.1724 -909.3174 L
f1906.3882 -831.3945 m
1906.3882 -835.3789 L
2115.6055 -835.3789 2119.5151 -835.3789 V
2119.5151 -839.2886 2119.5151 -1048.5059 Y
2123.4995 -1048.5059 L
2123.4995 -831.3945 L
1906.3882 -831.3945 L
f2045.5752 -936.7217 m
2054.0264 -945.1709 L
2084.207 -914.9902 2097.605 -901.5923 V
2097.605 -917.0439 2097.605 -940.9463 Y
2109.5562 -940.9463 L
2109.5562 -872.7412 L
2099.355 -882.9419 L
2045.5752 -936.7217 L
f*U
*u
3199.5732 -1929.7207 m
3142.9063 -1929.7207 L
2972.9092 -2099.7168 L
3086.2461 -2099.7168 L
3199.5732 -1986.3867 L
3199.5732 -1929.7207 L
f3178.1035 -2014.7266 m
3093.1162 -2099.7168 L
3149.7764 -2099.7168 L
3206.4434 -2043.0586 L
3206.4434 -2014.7266 L
3178.1035 -2014.7266 L
f*U
0 D
0.2 g
3504.8911 -1928.0586 m
3331.5688 -2101.3789 L
3365.4087 -2101.3789 L
3452.063 -2014.7314 L
3480.9556 -2014.7314 L
3480.9556 -2043.6133 L
3423.1763 -2101.3789 L
3447.1226 -2101.3789 L
3562.6704 -1985.8369 L
3562.6704 -1928.0586 L
3504.8911 -1928.0586 L
f*u
1 D
0 0 0 0.8 k
2736.7866 -2150.6191 m
2756.2002 -2131.2051 L
2756.2002 -2072.9619 L
2717.3706 -2034.1338 L
2717.3706 -2131.2051 L
2736.7866 -2150.6191 L
f2833.8574 -1937.0615 m
2833.8574 -1917.6475 L
2814.4434 -1917.6475 L
2775.6143 -1956.4766 L
2775.6143 -1975.8906 L
2795.0278 -1975.8906 L
2833.8574 -1937.0615 L
f2649.4214 -2082.6699 m
2649.4214 -2102.084 L
2668.8354 -2102.084 L
2707.6646 -2063.2559 L
2707.6646 -2043.8398 L
2688.249 -2043.8398 L
2649.4214 -2082.6699 L
f2620.2998 -1995.3047 m
2600.8857 -2014.7188 L
2620.2998 -2034.1338 L
2717.3706 -2034.1338 L
2678.543 -1995.3047 L
2620.2998 -1995.3047 L
f2717.3706 -1995.3047 m
2717.3706 -2034.1338 L
2756.2002 -2034.1338 L
2756.2002 -1995.3047 L
2717.3706 -1995.3047 L
f2736.7866 -1878.8184 m
2717.3706 -1898.2334 L
2717.3706 -1956.4766 L
2756.2002 -1995.3047 L
2756.2002 -1898.2334 L
2736.7866 -1878.8184 L
f2853.2715 -2034.1338 m
2872.687 -2014.7188 L
2853.2715 -1995.3047 L
2756.2002 -1995.3047 L
2795.0278 -2034.1338 L
2853.2715 -2034.1338 L
f2659.1294 -1917.6475 m
2639.7134 -1917.6475 L
2639.7134 -1937.0615 L
2697.957 -1995.3047 L
2717.3706 -1995.3047 L
2717.3706 -1975.8906 L
2659.1294 -1917.6475 L
f2814.4434 -2111.791 m
2833.8574 -2111.791 L
2833.8574 -2092.3779 L
2775.6143 -2034.1338 L
2756.2002 -2034.1338 L
2756.2002 -2053.5479 L
2814.4434 -2111.791 L
f*U
0 D
0.2 g
2374.8242 -1892.4385 m
2277.9043 -1990.2617 L
2277.9043 -2088.085 L
2277.9043 -2115.1064 2321.498 -2136.998 2375.2764 -2136.998 c
2429.0537 -2136.998 2472.6436 -2115.1064 2472.6436 -2088.085 C
2472.6436 -1990.2617 L
2374.8242 -1892.4385 L
fLB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
