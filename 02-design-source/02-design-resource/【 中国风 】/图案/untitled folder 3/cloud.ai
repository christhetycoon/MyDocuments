%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 15.0.0
%%For: (Inke Wang) ()
%%Title: (cloud.ai)
%%CreationDate: 1/18/2013 3:14 PM
%%Canvassize: 16383
%%BoundingBox: 220 -230 329 -171
%%HiResBoundingBox: 220.3999 -229.2793 328.3623 -171.8188
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 ([\714\727\660\746\711\653])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 2 0 () 
%AI3_TemplateBox: 275.5 -200.5 275.5 -200.5
%AI3_TileBox: -131.5601 -485.6602 681.5596 85.6602
%AI3_DocumentPreview: None
%AI5_ArtSize: 550 400
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: 152.3335 -129.3335 6 1583 878 26 0 0 48 119 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:120 -275
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 68 8
%%BeginData: 12194 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD53FFC3BC8DB08CB5BCFD77FFCA8DFC8CB08CFC8CFC8CC3FD74FF
%C38CFC8CB08CB08CB08CB08CC3FD72FFCA8CFC8CB08CFC8CB08CFC8CFC8C
%C3FD71FFB5FC8CB08CB08CB08CB08CB08CB08CCAFD05FFCBC4CACAFD66FF
%A1FC8CFC8CB08CFC8CB08CFC8CB08CFC93FFCABD93B08CFC8CB08CB594CA
%FD5BFFC3BDB6BC93BDC3BC8CB08CB08CB08CB08CB08CB08CB08CB093B08C
%FC8CB08CB08CB08CFC8CB6C3FD57FFCA8DFC8CFC8CFC8CFC8CFC8CB08CFC
%8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CFC93FD55FF
%C38CFC8CB08CB08CB08CB08CB08CB08CB08CB08CB08CB08CB08CB08CB08C
%B08CB08CB08CB08CB08CB08CFC8DFD53FFC38CFC8CFC8CB08CFC8CB08CFC
%8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB0
%8CFC8CFD51FFCB8CFC8CB08CB08CB08CB08CB08CB08CB08CB08CB08CB08C
%B08CB08CB08CB08CB08CB08CB08CB08CB08CB08CB08CFC8DFD50FF93FC8C
%FC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8C
%B08CFC8CB08CFC8CB08CFC8CB08C8C93FD4EFFCAB08CB08CB08CB08CB08C
%FC8CFC8CB08CB08CB08CB08CB08CB08CB08CB08CB08CB08CB08CB08CB08C
%B08CB08CB08CB08CB0C4FD4DFFC38CB08CFC8CB08CFC8CBCC3C39BB68CFC
%8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CFC8CFC8CB0
%8CFC8CB6FD4DFFBCFC8CB08CB08CB0B5FD06FFBD8CB08CB08CB08CB08CB0
%8CB08CB08CB08CB08CB08CB08CB6BCC3BCB58CB08CB08CB08CCAFD4CFFBC
%8CFC8CB08CFC8CCAFD07FFB68CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC
%8CFC8CC3FD04FFCAB68CFC8CB08CFC94FD4CFFBCFC8CB08CB08CB6FD08FF
%C4B08CB08CB08CB08CB08CB08CB08CB08CB08CB08CC3FD06FFCBB08CB08C
%B08CB6FD41FFCACAA1CACAFD06FFC38CFC8CB08CFC93FFFFFF93CAFD04FF
%8CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB5FFFFA1B6C3FFFFFF8CFC
%8CB08CFC8CFD3FFFC393B08CB08CB5B6CAFD04FFC3FC8CB08CB08CB0C3FF
%BCFC93FD04FFB58CB08CB08CB08CB08CB08CB08CB08CB08CFCBDFFCAB08C
%FCB5C39AB08CB08CB08CB0CBFD2AFFCAFFCAFD0FFFA8B68CFC8CFC8CFC8C
%FC8CB5A8FFFFFF8CFC8CFC8CB08CFC8CFC8CB6FD04FF8CFC8CFC8CB08CFC
%8CB08CFC8CB08CFC8CFC8CCAFFC38CFC8CFC8CFC8CB08CFC8CFC8CFD28FF
%C3BCB5B58CB5BCCAFD0CFFCAB58CB08CB08CB08CB08CB08CB5C3FFFFC38C
%B08CB08CB08CB08CFCBCFFFFFFC4B08CB08CB08CB08CB08CB08CB08CB08C
%B08CB0CAFFC3FC8CB08CB08CB08CB08CB08CB6FD25FFCABD8CFC8CFC8CFC
%8CFC8CBCCAFD0AFFB58CB08CFC8CB08CFC8CB08CFC8CFCC3FFFFBC8CFC8C
%B08CFC8CB08CCAFFFFFFBC8CB08CFC8CB08CFC8CB08CFC8CFC8CFC8CB08C
%C3FFCA8CFC8CB08CFC8CB08CFC8CFC9AFD24FFCAB58CB08CB08CB08CB08C
%B08CB5CAFD08FFC38CB08CB08CB08CB08CB08CB08CB08CB0CAFFFFBC8CFC
%8CB08CFC8CBCFD04FF8CB08CB08CFC8CBCC3CACAFFCAC49AB58CFC8CFCB6
%FFFFBC8CB08CB08CB08CB08CB08CCAFFCA94C3BDC3CAFD1CFFA8B08CFC8C
%B08CFC8CB08CFC8CB08CB0A8FD07FF8CFC8CFC8CB08CFC8CB08CFC8CB08C
%FC8CB0CAFFFFCA93B08CB08DC3FD04FF93FC8CFC8CFC93CAFD08FFCAC38D
%FC8CFCC3FFA8B58CFC8CB08CFC8CFC8CBDFFFF8D8C8CFC8CFC93CAFD1AFF
%B68CB08CB08CB08CB08CB08CB08CB08CCAFFFFCACACAFFC3B08CB08CB08C
%B08CB08CB08CB08CB08CB08CB5C3FFFFFFCAFFCAFD04FFCA93FC8CB08CB5
%C4FFFFFFCACAC3CACAFD05FFC3B08CB5CAFFFFC393B08CFC8CFC8CC3FFFF
%C3FC8CB08CB08CFC8CCBFD18FFCA8CB08CFC8CB08CFC8CB08CFC8CB08CC3
%FFCA93B08CFC8CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC93CA
%FD07FFC38CFC8CFC8CBCCAFFFFC393B08CFC8CB08CB59AFFFFFFCAB58CB5
%CAFFFFFFA1C394BC9AFFFFFFA1FC8CFC8CB08CFC8CFC93FD16FFCAFFC3B0
%8CB08CB08CB08CB08CB08CB08CB6FFCA8CFC8CB08CB08CB08CB08CB08CB0
%8CB08CB08CB08CB08CB08CB08CFC8CB6BCC3CAFD05FFCACACAFFFFFFCABC
%8CFC8CB08CB08CB08CFC8CBDFFFFCAB08CB09AFD09FFC3FC8CB08CB08CB0
%8CB08CFCC3FD12FFA8BC8CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFCA8FF
%8CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC
%8CFC8DCAFFFFCAC49AC3A1C3A8FFCAB08CB08CFC8CB08CFC8CB08CFC8CB0
%C4FF9AFC8CFC8CBC9ACAA8CBCAC38DFC8CFC8CB08CFC8CB08CFC8CB5FD11
%FFC3B08CB08CB08CB08CB08CB08CB08CB08CB08CFCB6FFBCFC8CB08CB08C
%B08CB08CB08CB08CB08CB08CB08CB08CB08CB08CFC8CFC8CB5C3FFFFFFBD
%B58CFC8CFC8CB0BCB68CB08CB08CB08CB08CB08CB08CB08CB5FFFFB5B08C
%B08CFC8CB58CB08CB08CB08CB08CB08CB08CB08CB08CFD10FF9AFC8CB08C
%FC8CB08CFC8CB08CFC8CB08CFC8CB08CCAFFB58CFC8CB08CFC8CB08CFC8C
%B08CFC8CB08CFC8CB08CFC8CB08CB094C3C3CAFD04FF93FC8CFC8CB08CFC
%8CFC8CFC8CB08CFC8CB08CFC8CB08CFC8CB08CBCFFBD8CFC8CB08CFC8CB0
%8CFC8CB08CFC8CB08CFC8CB08CFC8CB0FD0FFFCAB08CB08CB08CB08CB08C
%B08CB08CB08CB08CB08CB5FFFF8CB08CB08CB08CB08CB08CB08CB08CB08C
%B08CB08CB08CFC8CC3FD08FFB5FC8CB08CB08CB08CB08CB08CB08CB08CB0
%8CB08CB08CB08CB08CB08DFFC3FC8CB08CB08CB08CB08CB08CB08CB08CB0
%8CB08CB08CB08DFD0FFFBC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08C
%FC8DFFCAFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CFC8CC3FF
%FFFFC393B693CA9BFC8CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08C
%FC8CB08CFC8CFCCACA8CFC8CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8C
%B08CBCFD0FFF8DB08CB08CB08CB08CB08CB08CB08CB08CB08CB08CB5FFFF
%8CB08CB08CB08CB08CB08CB08CB08CB08CB08CB08CB08CC3FFFFCAB68CFC
%8CFC8CB58CB08CB08CB08CB08CB08CB08CB08CB08CB08CB08CB08CB08CB0
%8CB08CCACAB58CB08CB08CB08CB08CB08CB08CB08CB08CB08CB08CB5FD0F
%FFCAFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CCBCAB08CB08C
%FC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB5FFFFCAB58CFC8CB08CFC8C
%B08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CFC8CFC8CB08CFC8CFCCA
%CB8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CBCCAFD0FFFC38CB0
%8CB08CB08CB08CB08CB08CB08CB08CB08CB08CFCC3FF93FC8CB08CB08CB0
%8CB08CB08CB08CB08CB08CB08CFC9AFFFFB68CB08CB08CB08CB08CB08CB0
%8CB08CB08CB08CB08CB08CB08CB08CB6C3FFBCFC8CB08CB08CFFCAB08CFC
%8CFC8CB08CB08CB08CB08CB08CB08CB08CB0CAFD10FF9AFC8CFC8CB08CFC
%8CB08CB58DFC8CFC8CB08CFC8CB08CBCFFBC8CFC8CB08CFC8CB08CFC8CB0
%8CFC8CB08CFC8CFC8CC4FFCA8CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC
%8CB08CFC8CB08CFC8CC3FFFFA8BC8CFC8CB08CB0FFC38CFC93C3A1BC8CFC
%8CFC8CB08CFC8CB08CFC8CB08CBCFD10FFC48CB08CB08CB08CB08CFC93FF
%BCFC8CB08CB08CB08CB08DFFCAFC8CB08CB08CB08CB08CB08CB08CB08CB0
%8CB08CB0CAFFBCFC8CB08CB08CB08CB08CB08CB08CB08CB08CB08CB08CB0
%8CB08CC3FFFF93B08CB08CB08CFC93FFBCB5CAFD05FFB5FC8CB08CB08CB0
%8CB08CB08CB08CFD10FFCAB08CFC8CB08CFC8CB08CFCCAFF93FC8CB08CFC
%8CB08CFCA1FFC3FC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFFFFBC
%8CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CB6FFFF9AFC
%8CB08CFC8CB08CC3FFC3FFFFCACAFFFFFFCA8CFC8CB08CFC8CB08CFC8CB0
%8CFCA1FD10FF93B08CB08CB08CB08CB08CC3FFCA8CB08CB08CB08CFCB5FF
%CABC8CB08CB08CB08CB08CB08CB08CB08CB08CB08CB5FFFF93FC8CB08CB0
%8CB08CB08CB08CB08CB08CB08CB08CB08CB08CB0CAFFFFBC8CB08CB08CB0
%8CB0CAFFFFFFBCB08CCAFFFFFFB68CB08CB08CB08CB08CB08CB08CBDFD10
%FFC38CB08CFC8CB08CFC8CFCA1FFCAB08CFC8CB08CFC93FFCAB08CB08CFC
%8CB08CFC8CFC8CFC8CB08CFC8CB08CFC8CFFFFB68CB08CFC8CB08CFC8CB0
%8CFC8CB08CFC8CB08CFC8CB08CFC93FFFFFF93FC8CFC8CB08C8C93FFFFFF
%9AFC8CFC8DFFFFFF94FC8CFC8CB08CFC8CB08CFC8CFC93FD11FFB58CB08C
%B08CB08CB08CFFFFFF8CB08CB08CB08DFFFFB58CB08CB08CB08CB08CB08C
%B08CFC8CB08CB08CB08CB5FFFFBCFC8CB08CB08CB08CB08CB08CB08CB08C
%B08CB08CB08CB08CCAFFFFFFC38CB08CB08CFC93FFFFFFCAB08CB08CB5FF
%FFFFBC8CB08CB08CB08CB08CB08CB08CB5FD11FFA2B08CFC8CFC8CFC8CCA
%FFFF9AFC8CFC8CB08CC3FFBD8CFC8CB08CFC8CB08CBCA1CACACA94B08CFC
%8CB08CFC8CFFFFC38CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB08CFC8CB0
%8CB5FD04FFCAB58CFC8CB09AFD04FFC38CB08CFC8CFFFFFF8CFC8CFC8CB0
%8CFC8CB08CFC8CFC93FD12FFCABC8DB08DBCC3FFFFFFC3FC8CB08CB08CB5
%FFFF8DB08CB08CB08CB08CBDFD06FFCAB68CB08CB08CB0C4FFCAB08CB08C
%B08CB08CB08CBD8DB08CB08CB08CB08CB08CFCC3FD06FFCABDC3CAFD05FF
%B6FC8CB08CFCBDFFBCFC8CB08CB08CB08CB08CB08CB08CB5FD0BFFCACAC3
%C3A1CACAFD09FF9AFC8CFC8CB08CFC8DFFCAFC8CB08CFC8CB08CB0A8FD08
%FFC38CFC8CB08CC3FFFF93FC8CB08CFC8CB08CFCCABC8CFC8CB08CFC8CB0
%8CFC8CFD10FFB68CFC8CB08CFC8CFC8CFC8CB08CFC8CB08CFC8CB08CFC93
%FD09FFCABCB58CB08CB08CB08CB6BCCACACAC3BD8DFC8CB08CB08CB08CBC
%FFCA8CB08CB08CB08CFC93FFFFFFCAC3CAFD04FFCA8CB08CB08DFFFFFF8C
%B08CB08CB08CFC93FFC3FC8CB08CB08CB08CB08CBDFD10FFB6FC8CB08CB0
%8CB08CB08CB08CB08CB08CB08CB08CB08CC3FD07FFA1B58CFC8CFC8CFC8C
%FC8CFC8CFC8CFC8CFC8CFC8CB08CFC8CB08CFC8DFFC4FC8CB08CFC8CB08C
%B6FFFFFFCA8CFCC3FD04FFCA8CFC8CFC9AFFFFCA8CFC8CFC8CFC8CC4FFC3
%8CFC8CB08CFC8CB08CFCA1FD10FFBC8CFC8CB08CFC8CB08CFC8CB08CFC8C
%B08CFC8CB08CB5CAFD05FFCBB5FC8CFC8DB693BDBCC3BCC3BDBC93B08CFC
%8CB08CB08CB08CB08CB08CB5FFFF8CB08CB08CB08CB08CCBFFFFC4FC8CB6
%FFFFCAFFFFCA8CB08CB0C3FFFFFFC3BCB5B593CAFFFFC3FC8CB08CB08CB0
%8CB08DFD11FFC3FC8CB08CB08CB08CB08CB08CB08CB08CB08CB08CFCC3FD
%05FFC38CFC8CBCA1FD0BFFA8C393FC8CFC8CFC8CB08CFC8CFC8CCAFFB58C
%FC8CB08CFC8CFC8DC4A1B58CFC8CFFFFC38CC4FFC38CB08CFCA1FD0AFFC3
%8CB08CFC8CB08CFC8CBCFD12FF93FC8CFC8CB08CFC8CB08CFC8CB08CFC8C
%B08C8C93FD05FFC38CB0BDFD11FFCAC38DFC8CB08CB08CB08CFCBCFFBDFC
%8CB08CB08CB08CB08CB08CB08CB5CAFFBCFC8CFFFFB58CB08CB0B6CAFD05
%FFC3BCFFBCFC8CB08CB08CB08CB0CAFD12FFCA8CB08CB08CB08CB08CB08C
%B08CB08CB08CFC93FD05FFC38CBCCAFD07FFCBFFCAFFCAFD09FF9AB08CB0
%8CFC8CB08CB5FFFF8CFC8CB08CFC8CB08CFC8CB08CFC8CCBFFBC8CFC9AFF
%93FC8CFC8CFC8CB593BD94B08CBCFFB58CB08CFC8CB08CFC93FD14FFC48C
%FC8CB08CFC8CB08CFC8CB08CFC8CFC93FD05FFC38CCAFD05FFCAC3BDB5B5
%8CB08CB093BDC3FD05FFCAFFFFBC8CFC8CB08CB08CC3FFC38CB08CB08CB0
%8CB08CB08CB08CB5FFFFB5FC8CBCFFB58CB08CB08CB08CFC8CFC8CFCCAFF
%8CB08CB08CB08CB08CCAFD15FFCA8DFC8CB08CB08CB08CB08CB08CB0BCFD
%06FF9BFD07FFC3C3A1C39BBD93B58C8C8CFC8CBCA8FFFFC49ACAFFCA8CFC
%8CFC8CFC8CFFFFB58CFC8CB08CFC8CB08CFC8CFC9AFFA8B08CFC8DFF8DFC
%8CB08CFC8CB08CFC8CFC9AFF94FC8CFC8CB08CFC8CBDFD18FF9AB58CFC8C
%FC8CFC8CFC8CBCCAFD18FFC3BC8CFC8CB0BCFFFFCAB5B5CAFFBCFC8CB08C
%FCB6FFFFB68CB08CB08CB08CB08CB0B0FFFFC38CB08CBCFFB58CB08CB08C
%B08CB08CFCB5FFCAB08CB08CB08CB08CB6FD1BFFCABCBC93BCBCC3C4FD1E
%FF9AB08CFC8CC3FFFF93FC94FFCAB08CB08CFC9BFFFFBC8CFC8CFC8CFC8C
%FC8CCAFFFF8CFC8CFCA1FF8CFC8CB08CFC8CB08CFC8DFFFFB58CB08CFC8C
%B08CB0CAFD43FFBD8CFC8CBCFFFFC3FC8CCAFFBC8CB08CB0C3FFFFFFBCB6
%8DB58CB5BCCAFFFFBCFC8CB08DFFC3FC8CB08CB08CB08CFCB5FFFFB68CB0
%8CB08CB08CB5CAFD45FFCA8CFC8CB5A8FFC3B08CBDFFCA8CFC8CFC94FD05
%FFCAFFCAFFFFFFA1FC8CFC8CC3FFBC8CB08CFC8CB08CFC8DFFFFBC8CB08C
%FC8CB08CB0A8FD48FFB5FC8CB5CAFFCBBC8CB6FFFFB6FC8CFCB0C3CAFD06
%FFCABCB08CB08CBCFFCA8CB08CB08CB08CFCBCFFFFBC8CB08CB08CB08CB5
%CAFD4AFF9AFC8CB0C3FFFFBD8CB0CAFFC3B08CFC8CB093BD9ABD94B58CFC
%8CFC8CB6FFFF8DFC8CB08CFC8CB0C3FFCAB68CFC8CB08CFC8CB6CBFD4CFF
%C3FC8CB0C3FFFFCA8CFCBCFFFFC38CFC8CFC8CFC8CFC8CB08CFC8CC3FFFF
%93FC8CB08CFC8CBCCAFFCAB58CB08CB08CFC8CC3FD4FFFA1FC8CFCA1FFFF
%FF938C8CC4FFFF9BB58CFC8CFC8CFC8CB69BFFFFC38CFC8CB08CFC93CAFF
%FF9AFC8CFC8CB08CFC8CCAFD51FFCAB58CFCBCFFFFFFC3B08CB5C3FFFFFF
%CACAC3CACAFFFFFFC3B68CB08CFC8CB6C3FFFFCA93FC8CB08CB08CB0BCFD
%54FFCAB68CFC8DCAFFFFCABD8CFC8CB59AC3A1CAC3C39AB68CFC8CFC8CFC
%93CAFFFFA1B68CFC8CB08CFC8CBCCAFD57FFC38CFC8CBDCAFFFFFFC3BC8C
%FC8CFC8CFC8CFC8CFC8CB594C3FFFFFFC3B5FC8CB08CB08CB0B5CAFD5AFF
%CA8C8C8CB09ACAFD04FFA1C39ABC94BD9AC3A1FD04FFCA94B08CFC8CFC8C
%FC8CB6A1FD5EFFB6B08CFC8CB6BCCACAFD09FFCAC3BCB58CFC8CB08CFC8C
%B5BCCAFD61FFA1B68CFC8CFC8CB08CB593B693BC93B58CB08CFC8CFC8CFC
%8CB093C3CAFD65FFCABCB58CFC8CFC8CFC8CFC8CFC8CB08CB08CFC8CB5BC
%C4CAFD6AFFCACA9BBC93B08CB08CFC8CB08CFC8DBCA1CACAFD44FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (\303\350\304\241) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe \267\342\314\327\324\366\320\247\271\244\276\337) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe \312\265\312\261\311\317\311\253\324\366\320\247\271\244\276\337) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe \273\354\272\317\324\366\320\247\271\244\276\337) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe \267\373\272\305) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \315\274\260\270\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \315\274\260\270\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \322\325\312\365\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \322\325\312\365\273\255\261\312\324\366\320\247\271\244\276\337) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe \312\351\267\250\273\255\261\312\324\366\320\247\271\244\276\337) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \311\242\265\343\273\255\261\312\324\366\320\247\271\244\276\337) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \311\242\265\343\273\255\261\312\324\366\320\247\271\244\276\337) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe \270\264\272\317\320\316\327\264) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.929717 0.879728 0.890196 0.799985 ([\714\727\660\746\711\653]) 0 Xs
([\714\727\660\746\711\653])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(\315\274\262\343 1) Ln
0 A
*u
0 O
0.105867 0.986755 0.997436 0.000031 0.901961 0 0.07451 Xa
0 J 0 j 1 w 10 M []0 d1 XR
240.5 -194 m
240.5332 -193.0669 240.8501 -192.2998 241.4502 -191.7002 C
242.75 -190.2666 244.3667 -189.3501 246.2998 -188.9502 C
247.6333 -188.6499 248.9165 -188.6665 250.1499 -189 C
251.9165 -189.6333 253.3833 -190.6831 254.5498 -192.1499 C
253.6167 -193.25 252.8335 -194.4331 252.2002 -195.7002 C
251.5332 -196.9331 251.3335 -198.25 251.6001 -199.6499 C
251.8667 -201.083 252.25 -202.5166 252.75 -203.9502 C
252.2168 -204.3164 251.7334 -204.7334 251.2998 -205.2002 C
250.7998 -205.667 250.4165 -206.2168 250.1499 -206.8496 C
249.8501 -207.583 249.7002 -208.3496 249.7002 -209.1504 c
249.7002 -210.1162 249.8335 -211.083 250.1001 -212.0498 C
250.5669 -213.583 251.3335 -215.083 252.3999 -216.5498 C
253.1001 -217.5166 253.9668 -218.2998 255 -218.9004 C
256.9995 -220.1338 259.0078 -220.5918 261.0249 -220.2754 C
263.0444 -219.959 264.4028 -219.3584 265.1001 -218.4746 C
265.7925 -217.584 266.334 -216.5264 266.7251 -215.2998 C
267.1196 -214.083 267.311 -213.0654 267.2998 -212.25 C
267.2974 -212.1406 267.2974 -212.04 267.2998 -211.9502 C
267.4409 -211.0986 267.9409 -211.1152 268.7998 -212 C
269.1143 -212.3027 269.3892 -212.7695 269.625 -213.4004 C
270.1396 -214.7549 270.0728 -216.0967 269.4248 -217.4248 C
268.7705 -218.7529 268.0459 -219.7529 267.25 -220.4248 C
266.4556 -221.0908 265.5552 -221.5996 264.5498 -221.9502 C
263.5483 -222.3086 262.3149 -222.542 260.8501 -222.6504 C
259.7168 -222.7168 258.6167 -222.6338 257.5498 -222.4004 C
255.9502 -221.8662 254.3999 -221.1162 252.8999 -220.1504 C
250.3335 -218.417 247.7666 -216.667 245.2002 -214.9004 C
245.0332 -214.7666 244.8667 -214.667 244.7002 -214.5996 C
242.6665 -213.3662 240.5498 -212.4004 238.3501 -211.7002 C
236.7168 -211.1338 234.9834 -210.8838 233.1499 -210.9502 C
232.2168 -211.0498 229.3164 -211.1504 228.4165 -211.417 C
224.9165 -212.2832 223.5669 -213.667 220.3999 -215.4004 C
221.7666 -213.333 223.5332 -211.6836 225.7002 -210.4502 C
228.1333 -209.1162 230.7002 -208.5498 233.3999 -208.75 C
234.8335 -208.8838 236.2666 -209.1504 237.7002 -209.5498 C
238.7666 -209.7168 239.8335 -209.667 240.8999 -209.4004 C
242.2666 -209 243.3833 -208.25 244.25 -207.1504 C
244.7832 -206.4834 245 -205.6836 244.8999 -204.75 C
244.8335 -204.3164 244.6831 -203.9502 244.4502 -203.6504 C
243.8501 -202.7168 242.9668 -202.0498 241.7998 -201.6504 C
242.0669 -202.2832 242.2998 -202.9502 242.5 -203.6504 C
242.6665 -204.1504 242.7002 -204.6338 242.6001 -205.0996 C
242.3999 -206.0996 241.8667 -206.7998 241 -207.2002 C
239.7998 -207.833 238.5 -208.1162 237.1001 -208.0498 C
235.7334 -207.8164 234.7002 -207.1162 234 -205.9502 C
233.5669 -205.1836 233.2334 -204.3838 233 -203.5498 C
232.7666 -202.75 232.6831 -201.9502 232.75 -201.1504 C
232.8833 -200.0498 233.1831 -198.9834 233.6499 -197.9502 C
233.9834 -197.1499 234.5 -196.4834 235.2002 -195.9502 C
236.7666 -194.6499 238.5498 -194.2168 240.5498 -194.6499 C
240.5166 -194.4165 240.5 -194.2002 240.5 -194 C
f
327.4004 -206.7998 m
327.4336 -207.833 327.25 -208.7666 326.8496 -209.5996 C
325.3838 -212.833 322.917 -214.917 319.4502 -215.8496 C
316.0498 -216.75 312.9834 -216.1836 310.25 -214.1504 C
309.2832 -213.3838 308.583 -212.5 308.1504 -211.5 C
307.25 -209.5996 307.2832 -207.6504 308.25 -205.6504 C
308.8164 -204.417 309.75 -203.7832 311.0498 -203.75 C
311.3496 -203.917 311.6162 -204.1504 311.8496 -204.4502 C
312.083 -204.6836 312.2002 -204.9668 312.2002 -205.2998 C
312.167 -205.9336 312.2168 -206.5498 312.3496 -207.1504 C
312.4834 -207.8164 312.9502 -208.167 313.75 -208.2002 C
314.6504 -207.6504 L
315.1504 -206.6504 315.3164 -205.6162 315.1504 -204.5498 C
314.9502 -203.3496 314.2666 -202.4668 313.0996 -201.9004 C
312.333 -201.5996 311.5332 -201.5498 310.7002 -201.75 C
309.3662 -202.1504 308.2334 -202.8164 307.2998 -203.75 C
308 -201.8164 308.2002 -199.7998 307.9004 -197.7002 C
307.7666 -196.7666 307.4834 -195.8999 307.0498 -195.1001 C
306.5498 -194.2334 305.8838 -193.4834 305.0498 -192.8501 C
304.0498 -192.1167 302.9336 -191.5166 301.7002 -191.0498 C
298.8662 -190.0498 296.1338 -190.25 293.5 -191.6499 C
292.8662 -191.9502 292.2832 -192.3169 291.75 -192.75 C
290.917 -193.5166 289.8662 -193.9165 288.5996 -193.9502 C
287.833 -194.0166 287.0332 -193.9165 286.2002 -193.6499 C
285.5996 -193.5166 285.4004 -193.3833 285.5996 -193.25 C
287.0332 -192.8501 288.0996 -191.9834 288.7998 -190.6499 C
289.1338 -190.0166 289.3662 -189.3833 289.5 -188.75 C
289.8662 -187.25 289.6504 -185.8833 288.8496 -184.6499 C
288.3164 -183.8833 287.6338 -183.3833 286.7998 -183.1499 C
286.167 -182.9834 285.4668 -182.9834 284.7002 -183.1499 C
282.7334 -183.4502 281.7334 -184.5669 281.7002 -186.5 C
281.7002 -187.1333 281.9668 -187.5498 282.5 -187.75 C
283.2334 -187.9834 283.833 -187.7832 284.2998 -187.1499 C
284.5 -186.5 L
285 -186.3501 L
285.7334 -186.7168 286.0498 -187.3169 285.9502 -188.1499 C
285.8838 -188.75 285.75 -189.3335 285.5498 -189.8999 C
285.3838 -190.3335 285.1504 -190.7002 284.8496 -191 C
284.5498 -191.3335 284.2002 -191.5669 283.7998 -191.7002 C
282.167 -192.3999 280.583 -192.2998 279.0498 -191.3999 C
277.1504 -190.3335 276.0332 -188.7666 275.7002 -186.7002 C
275.2002 -183.7002 276.0332 -181.1665 278.2002 -179.1001 C
279.0332 -178.3335 280 -177.7666 281.0996 -177.3999 C
282.9336 -176.9331 284.6836 -177.0332 286.3496 -177.7002 C
286.4502 -177.3667 286.5664 -177.0498 286.7002 -176.75 C
287.7334 -174.0498 289.6338 -172.4502 292.4004 -171.9502 C
294.2334 -171.5835 295.917 -171.9834 297.4502 -173.1499 C
298.8838 -174.2832 299.9668 -175.6499 300.7002 -177.25 C
302.4668 -176.4165 304.2998 -175.9668 306.2002 -175.8999 C
307.667 -175.7998 309.1338 -176.0166 310.5996 -176.5498 C
314.2998 -177.9165 316.9004 -180.4331 318.4004 -184.1001 C
319.2334 -186.1333 319.2666 -188.2168 318.5 -190.3501 C
318.1338 -191.3833 317.4502 -192.1665 316.4502 -192.7002 C
315.1836 -193.4668 313.833 -193.6333 312.4004 -193.2002 C
311.833 -193 311.2666 -192.7998 310.7002 -192.6001 C
309.0664 -192.0332 308.1338 -190.9502 307.9004 -189.3501 C
307.833 -188.8169 307.833 -188.2998 307.9004 -187.7998 C
307.9336 -187.4668 308.083 -187.1831 308.3496 -186.9502 C
308.8838 -186.3833 309.4668 -186.2832 310.0996 -186.6499 C
310.5 -186.8833 310.8838 -187.1001 311.25 -187.2998 C
311.8838 -187.6665 312.5166 -187.6167 313.1504 -187.1499 C
313.4502 -186.1499 313.2334 -185.3501 312.5 -184.75 C
311.667 -184.0498 310.6836 -183.7998 309.5498 -184 C
308.1162 -184.1665 307.0664 -184.8999 306.4004 -186.2002 C
305.4668 -188 305.5 -189.7832 306.5 -191.5498 C
307.167 -192.7832 308.2002 -193.7002 309.5996 -194.2998 C
311.4004 -195.1665 313.3164 -195.5166 315.3496 -195.3501 C
316.25 -195.1167 317.0996 -194.75 317.9004 -194.25 C
319.167 -193.3501 320.0166 -192.1831 320.4502 -190.75 C
321.2168 -190.7832 321.9834 -190.8169 322.75 -190.8501 C
325.1504 -190.9502 326.8164 -192.0332 327.75 -194.1001 C
328.4502 -195.3667 328.5498 -196.6831 328.0498 -198.0498 C
327.6504 -199.2168 326.833 -200 325.5996 -200.4004 C
326.7334 -202.4004 327.333 -204.5332 327.4004 -206.7998 C
f
257.2998 -192.8501 m
258.4331 -192.75 259.5166 -192.7666 260.5498 -192.8999 C
261.0166 -190.9668 262.0498 -189.4165 263.6499 -188.25 C
264.9165 -187.2832 266.3501 -186.8169 267.9502 -186.8501 C
269.6831 -186.8833 271.2002 -187.3501 272.5 -188.25 C
272.8667 -188.4834 273.2168 -188.7334 273.5498 -189 C
274.3501 -189.7334 275.1162 -190.5498 275.8496 -191.4502 C
276.3164 -191.9834 276.8496 -192.4331 277.4502 -192.7998 C
278.9502 -193.7998 280.6504 -194.3335 282.5498 -194.3999 C
281.0166 -195.8335 279.167 -196.6001 277 -196.7002 C
274.8335 -197 273.3335 -198.2002 272.5 -200.2998 C
272.1665 -201.1338 271.9668 -202 271.8999 -202.9004 C
271.7998 -204 271.7666 -205.1162 271.7998 -206.25 C
271.8667 -207.9502 272.4331 -209.4834 273.5 -210.8496 C
274.5332 -212.1504 275.8838 -212.9668 277.5498 -213.2998 C
279.0498 -213.7666 280.5 -213.5498 281.9004 -212.6504 C
282.0664 -212.5166 282.2666 -212.417 282.5 -212.3496 C
282.6338 -213.2168 282.3662 -214.1162 281.7002 -215.0498 C
280.0332 -217.3164 278 -219.2168 275.5996 -220.75 C
274.3335 -221.5166 272.9834 -222.2666 271.5498 -223 C
267.7168 -224.9004 264.0479 -225.542 259.7813 -225.375 C
257.0708 -225.0957 254.4375 -224.1982 252.125 -222.792 C
247.7813 -219.8545 244.0522 -216.4482 241.3335 -214.667 C
243.146 -215.4795 245.417 -215.875 250.5 -220.125 c
252.124 -221.4824 254.6592 -222.8545 257.0835 -223.458 C
258.2168 -223.6914 260.4102 -224.0156 261.9414 -223.8281 C
263.8413 -223.5615 264.8667 -223.3838 266.5 -222.5498 C
269.2998 -221.2832 270.8169 -219.1162 271.0498 -216.0498 C
271.1167 -215.25 271.1665 -214.4502 271.2002 -213.6504 C
271.2334 -212.75 270.9502 -211.9502 270.3501 -211.25 C
268.9834 -209.7832 267.4668 -208.5166 265.7998 -207.4502 C
265.1001 -206.9834 264.3501 -206.667 263.5498 -206.5 C
262.1499 -206.3662 260.2881 -206.5166 259.521 -207.75 C
258.7544 -209.0166 258.8335 -210.417 259.271 -211.125 C
259.3711 -211.4912 260.271 -212.4795 261.5469 -212.0469 C
261.9189 -211.9658 262.625 -211.3281 262.4502 -210 C
262.375 -209.792 262.521 -209.417 263.2002 -209.4502 C
263.9668 -209.6162 264.4834 -210.0332 264.75 -210.7002 C
265.6499 -213.167 265.1665 -215.3164 263.2998 -217.1504 C
262.8667 -217.5498 262.3501 -217.833 261.75 -218 C
260.0313 -218.3125 259.8037 -218.168 259.1035 -218.2012 C
255.375 -217.75 252.5 -215.3311 251.6563 -211.25 C
251.25 -209.4248 251.5503 -208.29 252.1001 -206.7002 C
252.8335 -205.3662 253.8667 -204.4336 255.2002 -203.9004 C
254.3999 -203.2998 253.8667 -202.5332 253.6001 -201.5996 C
253.3667 -200.7334 253.2334 -199.8335 253.2002 -198.8999 C
253.2002 -198.1665 253.2832 -197.4502 253.4502 -196.75 C
253.5498 -196.3169 253.6831 -195.8999 253.8501 -195.5 C
254.5835 -194.0669 255.7334 -193.1831 257.2998 -192.8501 C
f
287.25 -195 m
287.8164 -195.0332 288.4004 -195.0835 289 -195.1499 C
289.9414 -195.292 290.6914 -195.6255 291.25 -196.1499 C
291.5498 -195.6499 291.917 -195.2168 292.3496 -194.8501 C
292.8838 -194.3169 293.5 -193.8667 294.2002 -193.5 C
295.2998 -192.9331 296.4834 -192.6499 297.75 -192.6499 C
299.8838 -192.6831 301.9668 -193.2832 304 -194.4502 C
304.8662 -194.9502 305.5 -195.6333 305.9004 -196.5 C
306.5 -197.7334 306.7168 -199.0332 306.5498 -200.4004 C
306.417 -201.7334 306.1162 -203.0332 305.6504 -204.2998 C
305.3838 -205.0332 304.9668 -205.6162 304.4004 -206.0498 C
303.9004 -206.4834 303.3662 -206.8496 302.7998 -207.1504 C
302.4756 -207.2861 302.1514 -207.4111 301.8252 -207.5254 C
301.6846 -207.5469 301.543 -207.5713 301.4004 -207.5996 C
301.0996 -207.5996 L
301.0469 -207.5996 300.9971 -207.5996 300.9502 -207.5996 C
300.7393 -207.5557 300.5313 -207.5137 300.3252 -207.4746 C
300.1201 -207.4404 299.9121 -207.3828 299.7002 -207.2998 C
299.4844 -207.2217 299.2764 -207.1055 299.0752 -206.9502 C
298.877 -206.7861 298.6855 -206.4697 298.5 -206 C
298.2666 -205.4668 298.1836 -204.9004 298.25 -204.2998 C
298.3496 -203.7002 298.583 -203.1338 298.9502 -202.5996 C
299.1504 -202.3662 299.4004 -202.1836 299.7002 -202.0498 C
300.2021 -202.209 300.5693 -202.1748 300.7998 -201.9502 C
301 -201.8799 301.0996 -201.6963 301.0996 -201.4004 c
301.0996 -200.833 300.833 -200.5498 300.2998 -200.5498 c
300.0742 -200.5498 299.8818 -200.5664 299.7246 -200.5996 C
299.3096 -200.6289 298.918 -200.7617 298.5498 -201 C
297.2832 -201.7334 296.333 -202.75 295.7002 -204.0498 C
294.5664 -206.2832 293.5996 -208.6504 292.7998 -211.1504 C
292.1338 -213.2832 291.0498 -215.1836 289.5498 -216.8496 C
287.4834 -219.1836 285.0996 -221.167 282.4004 -222.7998 C
278.0996 -225.4336 273.4668 -227.333 268.5 -228.5 C
267.3335 -228.7998 266.1665 -229.0332 265 -229.2002 C
261.6665 -229.4336 258.3335 -229.1504 255 -228.3496 C
252.6665 -227.7168 250.5166 -226.6162 248.5498 -225.0498 C
247.5498 -224.3164 246.5835 -223.5498 245.6499 -222.75 c
244.0166 -221.3496 242.3833 -220 240.75 -218.7002 C
239.1167 -217.4668 237.2832 -216.5664 235.25 -216 C
232.4834 -215.1338 229.6665 -214.8164 226.7998 -215.0498 C
229.4668 -214.1836 232.1167 -213.8662 234.75 -214.0996 C
236.6499 -214.4336 238.4834 -215.0996 240.25 -216.0996 C
242.4834 -217.4004 244.4834 -218.9502 246.25 -220.75 C
249.3169 -223.8164 252.9834 -225.959 257.25 -226.625 C
258.3169 -226.792 263.542 -227.792 270 -225.2002 C
271.1001 -224.7666 272.2002 -224.3164 273.2998 -223.8496 C
275.833 -222.6836 278.0664 -221.1504 280 -219.25 C
280.8662 -218.417 281.667 -217.5332 282.4004 -216.5996 C
282.9004 -215.9004 283.2998 -215.1504 283.5996 -214.3496 C
283.833 -213.6836 284.0166 -213.0166 284.1504 -212.3496 C
284.3838 -210.9502 284.2998 -209.583 283.9004 -208.25 C
283.7666 -207.7832 283.5 -207.4336 283.0996 -207.2002 C
283.0332 -207.5 282.9668 -207.8164 282.9004 -208.1504 C
282.7998 -208.6836 282.6504 -209.1836 282.4502 -209.6504 C
282.2832 -210.083 282.0332 -210.4336 281.7002 -210.7002 C
281.2998 -211 280.8496 -211.167 280.3496 -211.2002 C
279.7832 -211.3662 279.2334 -211.3496 278.7002 -211.1504 C
276.9668 -211.083 275.7168 -210.3496 274.9502 -208.9502 C
273.9502 -207.083 273.6001 -205.0996 273.8999 -203 C
274.0991 -201.6963 274.6655 -200.6045 275.5996 -199.7251 C
276.5371 -198.8535 277.4453 -198.3701 278.3252 -198.2749 C
279.2021 -198.1724 279.8525 -198.2139 280.2754 -198.3999 C
280.6973 -198.5938 281.0215 -198.9106 281.25 -199.3501 C
281.9834 -197.3833 283.2998 -196.0669 285.2002 -195.3999 C
285.8662 -195.2002 286.5498 -195.0669 287.25 -195 C
f
*U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
